<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring之AOP</title>
      <link href="/posts/809659da.html"/>
      <url>/posts/809659da.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring之IOC</title>
      <link href="/posts/6A9512F7.html"/>
      <url>/posts/6A9512F7.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/image-20221209105947105.png"></p><hr><h2 id="1-IOC-容器"><a href="#1-IOC-容器" class="headerlink" title="1. IOC 容器"></a>1. IOC 容器</h2><h3 id="1-1-IOC-思想"><a href="#1-1-IOC-思想" class="headerlink" title="1.1 IOC 思想"></a>1.1 IOC 思想</h3><blockquote><p><strong>IOC：Inversion of Control，翻译过来是<font style="color:red">反转控制</font>。</strong></p></blockquote><h4 id="①获取资源的传统方式"><a href="#①获取资源的传统方式" class="headerlink" title="①获取资源的传统方式"></a>①获取资源的传统方式</h4><p><strong>自己做饭：买菜、洗菜、择菜、改刀、炒菜，全过程参与，费时费力，必须清楚了解资源创建整个过程中的全部细节且熟练掌握。</strong></p><p><strong>在应用程序中的组件需要获取资源时，传统的方式是组件<font style="color:red">主动</font>的从容器中获取所需要的资源，在这样的模式下开发人员往往需要知道在具体容器中特定资源的获取方式，增加了学习成本，同时降低了开发效率。</strong></p><h4 id="②反转控制方式获取资源"><a href="#②反转控制方式获取资源" class="headerlink" title="②反转控制方式获取资源"></a>②反转控制方式获取资源</h4><p><strong>点外卖：下单、等、吃，省时省力，不必关心资源创建过程的所有细节。</strong></p><p><strong>反转控制的思想完全颠覆了应用程序组件获取资源的传统方式：反转了资源的获取方向——改由容器主动的将资源推送给需要的组件，开发人员不需要知道容器是如何创建资源对象的，只需要提供接收资源的方式即可，极大的降低了学习成本，提高了开发的效率。这种行为也称为查找的<font style="color:red">被动</font>形式。</strong></p><h4 id="③DI"><a href="#③DI" class="headerlink" title="③DI"></a>③DI</h4><blockquote><p><strong>DI：Dependency Injection，翻译过来是<font style="color:red">依赖注入</font>。</strong></p></blockquote><p><strong>DI 是 IOC 的另一种表述方式：即组件以一些预先定义好的方式（例如：setter 方法）接受来自于容器的资源注入。相对于IOC而言，这种表述更直接。</strong></p><p><strong>所以结论是：<font style="color:red">IOC 就是一种反转控制的思想， 而 DI 是对 IOC 的一种具体实现。</font></strong></p><h3 id="1-2-IOC-容器在-Spring-中的实现"><a href="#1-2-IOC-容器在-Spring-中的实现" class="headerlink" title="1.2 IOC 容器在 Spring 中的实现"></a>1.2 IOC 容器在 Spring 中的实现</h3><p><strong>Spring 的 IOC 容器就是 IOC 思想的一个落地的产品实现。IOC 容器中管理的组件也叫做 bean。在创建 bean 之前，首先需要创建 IOC 容器。</strong></p><p><strong>Spring 提供了 IOC 容器的两种实现方式：</strong></p><h4 id="①BeanFactory"><a href="#①BeanFactory" class="headerlink" title="①BeanFactory"></a>①<font style="color:red">BeanFactory</font></h4><p><strong>这是 IOC 容器的基本实现，是 Spring 内部使用的接口。面向 Spring 本身，不提供给开发人员使用。</strong></p><h4 id="②ApplicationContext"><a href="#②ApplicationContext" class="headerlink" title="②ApplicationContext"></a>②<font style="color:red">ApplicationContext</font></h4><p><strong>BeanFactory 的子接口，提供了更多高级特性。面向 Spring 的使用者，几乎所有场合都使用 ApplicationContext 而不是底层的 BeanFactory。</strong></p><h4 id="③ApplicationContext的主要实现类"><a href="#③ApplicationContext的主要实现类" class="headerlink" title="③ApplicationContext的主要实现类"></a>③ApplicationContext的主要实现类</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408210236522.png" alt="image-20230408210236522"></p><table><thead><tr><th><strong>类型名</strong></th><th><strong>简介</strong></th></tr></thead><tbody><tr><td><strong>ClassPathXmlApplicationContext</strong></td><td><strong>通过读取类路径下的 XML 格式的配置文件创建 IOC 容器对象</strong></td></tr><tr><td><strong>FileSystemXmlApplicationContext</strong></td><td><strong>通过文件系统路径读取 XML 格式的配置文件创建 IOC 容器对象</strong></td></tr><tr><td><strong>ConfigurableApplicationContext</strong></td><td><strong>ApplicationContext 的子接口，包含一些扩展方法refresh() 和 close() ，让 ApplicationContext 具有启动、关闭和刷新上下文的能力。</strong></td></tr><tr><td><strong>WebApplicationContext</strong></td><td><strong>专门为 Web 应用准备，基于 Web 环境创建 IOC 容器对象，并将对象引入存入 ServletContext 域中。</strong></td></tr></tbody></table><h2 id="2-基于-XML-管理-bean"><a href="#2-基于-XML-管理-bean" class="headerlink" title="2. 基于 XML 管理 bean"></a>2. 基于 XML 管理 bean</h2><h3 id="2-1-入门案例"><a href="#2-1-入门案例" class="headerlink" title="2.1 入门案例"></a>2.1 入门案例</h3><h4 id="①创建模块，命名为：spring-helloworld"><a href="#①创建模块，命名为：spring-helloworld" class="headerlink" title="①创建模块，命名为：spring_helloworld"></a>①创建模块，命名为：spring_helloworld</h4><h4 id="②引入依赖"><a href="#②引入依赖" class="headerlink" title="②引入依赖"></a>②引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 基于Maven依赖传递性，导入spring-context依赖即可导入当前所需所有jar包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408210453707.png" alt="image-20230408210453707"></p><h4 id="③创建类-HelloWorld"><a href="#③创建类-HelloWorld" class="headerlink" title="③创建类 HelloWorld"></a>③创建类 HelloWorld</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;hello Spring!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④创建-Spring-的配置文件"><a href="#④创建-Spring-的配置文件" class="headerlink" title="④创建 Spring 的配置文件"></a>④创建 Spring 的配置文件</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408210531867.png" alt="image-20230408210531867"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408210537758.png" alt="image-20230408210537758"></p><h4 id="⑤在-Spring-的配置文件中配置-bean"><a href="#⑤在-Spring-的配置文件中配置-bean" class="headerlink" title="⑤在 Spring 的配置文件中配置 bean"></a>⑤在 Spring 的配置文件中配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        bean：配置一个 bean 对象，将对象交给 IOC 容器管理</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">        id：bean 的唯一标识，不能重复</span></span><br><span class="line"><span class="comment">        class：设置 bean 对象所对应的类型</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;helloworld&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.HelloWorld&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑥创建测试类测试"><a href="#⑥创建测试类测试" class="headerlink" title="⑥创建测试类测试"></a>⑥创建测试类测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHelloWorld</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> newClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">HelloWorld</span> <span class="variable">helloworld</span> <span class="operator">=</span> (HelloWorld) ac.getBean(<span class="string">&quot;helloworld&quot;</span>);</span><br><span class="line">    helloworld.sayHello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑦运行结果"><a href="#⑦运行结果" class="headerlink" title="⑦运行结果"></a>⑦运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408210616604.png" alt="image-20230408210616604"></p><h4 id="⑧思路"><a href="#⑧思路" class="headerlink" title="⑧思路"></a>⑧思路</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408210625749.png" alt="image-20230408210625749"></p><h4 id="⑨注意"><a href="#⑨注意" class="headerlink" title="⑨注意"></a>⑨注意</h4><p>​<strong><font style="color:red">Spring 底层默认通过反射技术调用组件类的无参构造器来创建组件对象</font>，这一点需要注意。</strong></p><p>​<strong>如果在需要无参构造器时，没有无参构造器，则会抛出下面的异常：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name <span class="string">&#x27;helloworld&#x27;</span> defined <span class="keyword">in</span> class path resource [applicationContext.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.atguigu.spring.pojo.HelloWorld]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.atguigu.spring.pojo.HelloWorld.&lt;init&gt;()</span><br></pre></td></tr></table></figure><h3 id="2-2-IOC-容器创建对象的方式"><a href="#2-2-IOC-容器创建对象的方式" class="headerlink" title="2.2 IOC 容器创建对象的方式"></a>2.2 IOC 容器创建对象的方式</h3><h4 id="①创建模块，命名为：spring-ioc-xml"><a href="#①创建模块，命名为：spring-ioc-xml" class="headerlink" title="①创建模块，命名为：spring_ioc_xml"></a>①创建模块，命名为：spring_ioc_xml</h4><h4 id="②引入依赖-1"><a href="#②引入依赖-1" class="headerlink" title="②引入依赖"></a>②引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 基于Maven依赖传递性，导入spring-context依赖即可导入当前所需所有jar包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③创建-Student-类"><a href="#③创建-Student-类" class="headerlink" title="③创建 Student 类"></a>③创建 Student 类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>  &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer sid;</span><br><span class="line">    <span class="keyword">private</span> String sname;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSid</span><span class="params">(Integer sid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSname</span><span class="params">(String sname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname, Integer age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;sid=&quot;</span> + sid +</span><br><span class="line">                <span class="string">&quot;, sname=&#x27;&quot;</span> + sname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④创建-Spring-的配置文件，并配置-bean"><a href="#④创建-Spring-的配置文件，并配置-bean" class="headerlink" title="④创建 Spring 的配置文件，并配置 bean"></a>④创建 Spring 的配置文件，并配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:util</span>=<span class="string">&quot;http://www.springframework.org/schema/util&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤创建测试类"><a href="#⑤创建测试类" class="headerlink" title="⑤创建测试类"></a>⑤创建测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIOC</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="comment">//获取IOC容器</span></span><br><span class="line">      <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">      <span class="comment">//获取bean</span></span><br><span class="line">      <span class="type">Student</span> <span class="variable">studentOne</span> <span class="operator">=</span> (Student) ioc.getBean(<span class="string">&quot;studentOne&quot;</span>);</span><br><span class="line">      System.out.println(studentOne);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="⑥运行结果"><a href="#⑥运行结果" class="headerlink" title="⑥运行结果"></a>⑥运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408210851339.png" alt="image-20230408210851339"></p><h3 id="2-3-获取-bean"><a href="#2-3-获取-bean" class="headerlink" title="2.3 获取 bean"></a>2.3 获取 bean</h3><h4 id="①根据id获取"><a href="#①根据id获取" class="headerlink" title="①根据id获取"></a>①根据id获取</h4><p>​<strong>由于 id 属性指定了 bean 的唯一标识，所以根据 bean 标签的 id 属性可以精确获取到一个组件对象。</strong></p><h4 id="②根据类型获取"><a href="#②根据类型获取" class="headerlink" title="②根据类型获取"></a>②<font style="color:red">根据类型获取</font></h4><p>​<strong>注意：</strong></p><ul><li><strong>根据类型获取 bean 时，要求IOC容器中有且只有一个类型匹配的 bean</strong></li><li><strong>若没有任何一个类型匹配的 bean，此时抛出异常：NoSuchBeanDefinitionException</strong></li><li><strong>若有多个类型匹配的 bean，此时抛出异常：NoUniqueBeanDefinitionException</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIOC</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentOne&quot;</span>, Student.class);</span><br><span class="line">        System.out.println(student);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408213257409.png" alt="image-20230408213257409"></p><h4 id="③根据-id-和类型"><a href="#③根据-id-和类型" class="headerlink" title="③根据 id 和类型"></a>③根据 id 和类型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIOC</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">bean</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentOne&quot;</span>, Student.class);</span><br><span class="line">        System.out.println(bean);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408213323794.png" alt="image-20230408213323794"></p><h4 id="④注意"><a href="#④注意" class="headerlink" title="④注意"></a>④注意</h4><p>​<strong>当根据类型获取 bean 时，要求 IOC 容器中指定类型的 bean 有且只能有一个</strong></p><p>​<strong>当 IOC 容器中一共配置了两个：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>根据类型获取时会抛出异常：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.beans.factory.NoUniqueBeanDefinitionException: No qualifying bean of <span class="built_in">type</span> <span class="string">&#x27;com.atguigu.spring.pojo.Student&#x27;</span> available: expected single matching bean but found 2: studentOne,studentTwo</span><br></pre></td></tr></table></figure><h4 id="⑤扩展"><a href="#⑤扩展" class="headerlink" title="⑤扩展"></a>⑤扩展</h4><p>​<strong>问：如果组件类实现了接口，根据接口类型可以获取 bean 吗？</strong></p><p>​<strong>答：可以，前提是 bean 唯一</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIOC</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//获取IOC容器</span></span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> ioc.getBean(Person.class);</span><br><span class="line">        System.out.println(person);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408213632515.png" alt="image-20230408213632515"></p><p>​<strong>问：如果一个接口有多个实现类，这些实现类都配置了 bean，根据接口类型可以获取 bean 吗？</strong></p><p>​<strong>答：不行，因为 bean 不唯一</strong></p><h4 id="⑥结论"><a href="#⑥结论" class="headerlink" title="⑥结论"></a>⑥结论</h4><p>​<strong>根据类型来获取 bean 时，在满足 bean 唯一性的前提下，其实只是看：<font style="color:red">『对象 instanceof 指定的类型』</font>的返回结果，只要返回的是 true 就可以认定为和类型匹配，能够获取到。</strong></p><h3 id="2-4-依赖注入之-setter-注入"><a href="#2-4-依赖注入之-setter-注入" class="headerlink" title="2.4 依赖注入之 setter 注入"></a>2.4 依赖注入之 setter 注入</h3><h4 id="①创建-Student-类"><a href="#①创建-Student-类" class="headerlink" title="①创建 Student 类"></a>①创建 Student 类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span>  <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer sid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String sname;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSid</span><span class="params">(Integer sid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSname</span><span class="params">(String sname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname, Integer age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;sid=&quot;</span> + sid +</span><br><span class="line">                <span class="string">&quot;, sname=&#x27;&quot;</span> + sname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②配置-bean-时为属性赋值"><a href="#②配置-bean-时为属性赋值" class="headerlink" title="②配置 bean 时为属性赋值"></a>②配置 bean 时为属性赋值</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.bean.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- property标签：通过组件类的setXxx()方法给组件对象设置属性 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name属性：指定属性名（这个属性名是getXxx()、setXxx()方法定义的，和成员变量无关）--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- value属性：指定属性值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③测试"><a href="#③测试" class="headerlink" title="③测试"></a>③测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//获取IOC容器</span></span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//获取bean</span></span><br><span class="line">    <span class="type">Student</span> <span class="variable">studentTwo</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentTwo&quot;</span>, Student.class);</span><br><span class="line">    System.out.println(studentTwo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408213758982.png" alt="image-20230408213758982"></p><h3 id="2-5-依赖注入之构造器注入"><a href="#2-5-依赖注入之构造器注入" class="headerlink" title="2.5 依赖注入之构造器注入"></a>2.5 依赖注入之构造器注入</h3><h4 id="①在-Student-类中添加有参构造"><a href="#①在-Student-类中添加有参构造" class="headerlink" title="①在 Student 类中添加有参构造"></a>①在 Student 类中添加有参构造</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname, Integer age, String gender)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    <span class="built_in">this</span>.sname = sname;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.gender = gender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②配置-bean"><a href="#②配置-bean" class="headerlink" title="②配置 bean"></a>②配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentThree&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- constructor-arg标签还有两个属性可以进一步描述构造器参数：--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- index属性：指定参数所在位置的索引（从0开始） --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name属性：指定参数名 --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- value属性：指定参数值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;1002&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;李四&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;24&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③测试-1"><a href="#③测试-1" class="headerlink" title="③测试"></a>③测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">studentThree</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentThree&quot;</span>, Student.class);</span><br><span class="line">        System.out.println(studentThree);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408213848953.png" alt="image-20230408213848953"></p><h3 id="2-6-特殊值处理"><a href="#2-6-特殊值处理" class="headerlink" title="2.6 特殊值处理"></a>2.6 特殊值处理</h3><h4 id="①字面量赋值"><a href="#①字面量赋值" class="headerlink" title="①字面量赋值"></a>①字面量赋值</h4><blockquote><p><strong>什么是字面量？</strong></p><p><strong>int a &#x3D; 10;</strong></p><p><strong>声明一个变量 a，初始化为10，此时 a 就不代表字母 a 了，而是作为一个变量的名字。当我们引用 a 的时候，我们实际上拿到的值是10。</strong></p><p><strong>而如果a是带引号的：’a’，那么它现在不是一个变量，它就是代表 a 这个字母本身，这就是字面量。所以字面量没有引申含义，就是我们看到的这个数据本身。</strong></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 value 属性给 bean 的属性赋值时，Spring会把 value 属性的值看做字面量 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②null-值"><a href="#②null-值" class="headerlink" title="②null 值"></a>②null 值</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1003&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> &gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 这才是真正的为属性赋值为 null --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">null</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">studentFour</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentFour&quot;</span>, Student.class);</span><br><span class="line">        <span class="comment">// 如果没有报错，说明 null 是字符串 null</span></span><br><span class="line">        System.out.println(studentFour.getGender().toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><blockquote><p><strong>显示空指针异常，说明这里的 null 是空对象</strong></p></blockquote><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214017439.png" alt="image-20230408214017439"></p><p>​<strong>注意：</strong></p><blockquote><p><strong>以下写法，为 gender 所赋的值是字符串 null</strong></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1003&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;王五&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;null&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214055743.png" alt="image-20230408214055743"></p><h4 id="③xml实体"><a href="#③xml实体" class="headerlink" title="③xml实体"></a>③xml实体</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 小于号在XML文档中用来定义标签的开始，不能随便使用 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 解决方案一：使用XML实体来代替 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--             </span></span><br><span class="line"><span class="comment">&lt;：&amp;lt;</span></span><br><span class="line"><span class="comment">            &gt;：&amp;gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1003&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;<span class="symbol">&amp;lt;</span>王五<span class="symbol">&amp;gt;</span>&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">studentFour</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentFour&quot;</span>, Student.class);</span><br><span class="line">        System.out.println(studentFour);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214127433.png" alt="image-20230408214127433"></p><h4 id="④CDATA-节"><a href="#④CDATA-节" class="headerlink" title="④CDATA 节"></a>④CDATA 节</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!-- 解决方案二：使用 CDATA 节 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- CDATA 中的 C 代表 Character，是文本、字符的含义，CDATA 就表示纯文本数据 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- XML 解析器看到 CDATA 节就知道这里是纯文本，就不会当作 XML 标签或属性来解析 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 所以 CDATA 节中写什么符号都随意 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFour&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1003&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            CDATA 节其中的内容会原样解析&lt;![CDATA[...]]&gt;</span></span><br><span class="line"><span class="comment">            CDATA 节是 XML 中一个特殊的标签，因此不能写在一个属性中</span></span><br><span class="line"><span class="comment">在 value 标签之间 输入 CD 回车就会自动补全 CDATA 节</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;sname&quot; value=&quot;&amp;lt;王五&amp;gt;&quot;&gt;&lt;/property&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[&lt;王五&gt;]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214205786.png" alt="image-20230408214205786"></p><h3 id="2-7-为类类型属性赋值"><a href="#2-7-为类类型属性赋值" class="headerlink" title="2.7 为类类型属性赋值"></a>2.7 为类类型属性赋值</h3><h4 id="①创建-Clazz-类"><a href="#①创建-Clazz-类" class="headerlink" title="①创建 Clazz 类"></a>①创建 Clazz 类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Clazz</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer cid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String cname;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Clazz&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;cid=&quot;</span> + cid +</span><br><span class="line">                <span class="string">&quot;, cname=&#x27;&quot;</span> + cname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCid</span><span class="params">(Integer cid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cid = cid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCname</span><span class="params">(String cname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cname = cname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Clazz</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Clazz</span><span class="params">(Integer cid, String cname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cid = cid;</span><br><span class="line">        <span class="built_in">this</span>.cname = cname;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="②修改-Student-类"><a href="#②修改-Student-类" class="headerlink" title="②修改 Student 类"></a>②修改 Student 类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span>  <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer sid;</span><br><span class="line">    <span class="keyword">private</span> String sname;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> Double score;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Clazz clazz;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSid</span><span class="params">(Integer sid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSname</span><span class="params">(String sname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(Double score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Clazz <span class="title function_">getClazz</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> clazz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setClazz</span><span class="params">(Clazz clazz)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.clazz = clazz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname,  String gender ,Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname,  String gender,Double score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.score =score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;sid=&quot;</span> + sid +</span><br><span class="line">                <span class="string">&quot;, sname=&#x27;&quot;</span> + sname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&quot;, clazz=&quot;</span> + clazz +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="③方式一：引用外部已声明的-bean"><a href="#③方式一：引用外部已声明的-bean" class="headerlink" title="③方式一：引用外部已声明的 bean"></a>③方式一：引用外部已声明的 bean</h4><p>​<strong>配置 Clazz 类型的 bean ：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最强王者班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>为 Student 中的 clazz 属性赋值：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFive&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ref属性：引用 IOC 容器中某个 bean 的 id，将所对应的 bean 为属性赋值 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214326844.png" alt="image-20230408214326844"></p><p>​<strong>错误演示：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFive&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">value</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>如果错把 ref 属性写成了 value 属性，会抛出异常：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to convert property value of <span class="built_in">type</span> <span class="string">&#x27;java.lang.String&#x27;</span> to required <span class="built_in">type</span> <span class="string">&#x27;com.atguigu.spring.pojo.Clazz&#x27;</span> <span class="keyword">for</span> property <span class="string">&#x27;clazz&#x27;</span>; nested exception is java.lang.IllegalStateException: Cannot convert value of <span class="built_in">type</span> <span class="string">&#x27;java.lang.String&#x27;</span> to required <span class="built_in">type</span> <span class="string">&#x27;com.atguigu.spring.pojo.Clazz&#x27;</span> <span class="keyword">for</span> property <span class="string">&#x27;clazz&#x27;</span>: no matching editors or conversion strategy found</span><br></pre></td></tr></table></figure><p>​<strong>意思是不能把 String 类型转换成我们要的 Clazz 类型，说明我们使用 value 属性时，Spring 只把这个属性看做一个普通的字符串，不会认为这是一个bean的 id ，更不会根据它去找到 bean 来赋值。</strong></p><h4 id="④方式二：级联属性赋值"><a href="#④方式二：级联属性赋值" class="headerlink" title="④方式二：级联属性赋值"></a>④方式二：级联属性赋值</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFive&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ref属性：引用 IOC 容器中某个 bean 的 id，将所对应的 bean 为属性赋值 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 一定先引用某个 bean 为属性赋值，才可以使用级联方式更新属性 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;clazzOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--级联的方式，要保证提前为 clazz 属性赋值或者实例化--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz.cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz.cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;远大前程班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最强王者班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214415140.png" alt="image-20230408214415140"></p><h4 id="⑤方式三：内部-bean"><a href="#⑤方式三：内部-bean" class="headerlink" title="⑤方式三：内部 bean"></a>⑤方式三：内部 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFive&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--内部bean，只能在当前 bean 的内部使用，不能直接通过 IOC 容器获取--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzInner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;远大前程班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最强王者班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214433871.png" alt="image-20230408214433871"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Clazz</span> <span class="variable">clazz</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;clazzInner&quot;</span>, Clazz.class);</span><br><span class="line">        System.out.println(clazz);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214455417.png" alt="image-20230408214455417"></p><h3 id="2-8-为数组类型属性赋值"><a href="#2-8-为数组类型属性赋值" class="headerlink" title="2.8 为数组类型属性赋值"></a>2.8 为数组类型属性赋值</h3><h4 id="①修改-Student-类"><a href="#①修改-Student-类" class="headerlink" title="①修改 Student 类"></a>①修改 Student 类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span>  <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer sid;</span><br><span class="line">    <span class="keyword">private</span> String sname;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> Double score;</span><br><span class="line">    <span class="keyword">private</span> Clazz clazz;</span><br><span class="line">    <span class="keyword">private</span> String[] hobbies;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSid</span><span class="params">(Integer sid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSname</span><span class="params">(String sname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(Double score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Clazz <span class="title function_">getClazz</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> clazz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setClazz</span><span class="params">(Clazz clazz)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.clazz = clazz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String[] getHobbies() &#123;</span><br><span class="line">        <span class="keyword">return</span> hobbies;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHobbies</span><span class="params">(String[] hobbies)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hobbies = hobbies;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname,  String gender ,Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname,  String gender,Double score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.score =score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;sid=&quot;</span> + sid +</span><br><span class="line">                <span class="string">&quot;, sname=&#x27;&quot;</span> + sname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&quot;, clazz=&quot;</span> + clazz +</span><br><span class="line">                <span class="string">&quot;, hobbies=&quot;</span> + Arrays.toString(hobbies) +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②配置-bean-1"><a href="#②配置-bean-1" class="headerlink" title="②配置 bean"></a>②配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFive&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--内部bean，只能在当前bean的内部使用，不能直接通过IOC容器获取--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzInner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;远大前程班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>抽烟<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>喝酒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>烫头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最强王者班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③测试类运行"><a href="#③测试类运行" class="headerlink" title="③测试类运行"></a>③测试类运行</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">studentFive</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentFive&quot;</span>, Student.class);</span><br><span class="line">        System.out.println(studentFive);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214559570.png" alt="image-20230408214559570"></p><h3 id="2-9-为集合类型属性赋值"><a href="#2-9-为集合类型属性赋值" class="headerlink" title="2.9 为集合类型属性赋值"></a>2.9 为集合类型属性赋值</h3><h4 id="①为-List-集合类型属性赋值"><a href="#①为-List-集合类型属性赋值" class="headerlink" title="①为 List 集合类型属性赋值"></a>①为 List 集合类型属性赋值</h4><blockquote><p><strong>若为 Set 集合类型属性赋值，只需要将其中的 list 标签改为 set 标签即可</strong></p></blockquote><p>​<strong>修改 Clazz 类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Clazz</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer cid;</span><br><span class="line">    <span class="keyword">private</span> String cname;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCid</span><span class="params">(Integer cid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cid = cid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCname</span><span class="params">(String cname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cname = cname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Student&gt; <span class="title function_">getStudents</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> students;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStudents</span><span class="params">(List&lt;Student&gt; students)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.students = students;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Clazz</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Clazz</span><span class="params">(Integer cid, String cname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cid = cid;</span><br><span class="line">        <span class="built_in">this</span>.cname = cname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Clazz&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;cid=&quot;</span> + cid +</span><br><span class="line">                <span class="string">&quot;, cname=&#x27;&quot;</span> + cname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, students=&quot;</span> + students +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<strong>配置 bean：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最强王者班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;students&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentThree&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>测试类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="comment">//获取IOC容器</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">       <span class="comment">//获取bean</span></span><br><span class="line">       <span class="type">Clazz</span> <span class="variable">clazz</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;clazzOne&quot;</span>, Clazz.class);</span><br><span class="line">       System.out.println(clazz);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214659659.png" alt="image-20230408214659659"></p><h4 id="②引用-List-集合类型的-bean"><a href="#②引用-List-集合类型的-bean" class="headerlink" title="②引用 List 集合类型的 bean"></a>②引用 List 集合类型的 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;最强王者班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;studentList&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--list集合类型的bean--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置一个集合类型的bean，需要使用 util 的约束--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">util:list</span> <span class="attr">id</span>=<span class="string">&quot;studentList&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;studentThree&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">util:list</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Clazz</span> <span class="variable">clazz</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;clazzOne&quot;</span>, Clazz.class);</span><br><span class="line">        System.out.println(clazz);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214730837.png" alt="image-20230408214730837"></p><h4 id="③为-Map-集合类型属性赋值"><a href="#③为-Map-集合类型属性赋值" class="headerlink" title="③为 Map 集合类型属性赋值"></a>③为 Map 集合类型属性赋值</h4><p>​<strong>创建教师类 Teacher：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Teacher</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer tid;</span><br><span class="line">    <span class="keyword">private</span> String tname;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getTid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> tid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTid</span><span class="params">(Integer tid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tid = tid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> tname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTname</span><span class="params">(String tname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tname = tname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">(Integer tid, String tname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tid = tid;</span><br><span class="line">        <span class="built_in">this</span>.tname = tname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Teacher</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Teacher&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;tid=&quot;</span> + tid +</span><br><span class="line">                <span class="string">&quot;, tname=&#x27;&quot;</span> + tname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<strong>修改 Student 类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">implements</span>  <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer sid;</span><br><span class="line">    <span class="keyword">private</span> String sname;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    <span class="keyword">private</span> Double score;</span><br><span class="line">    <span class="keyword">private</span> Clazz clazz;</span><br><span class="line">    <span class="keyword">private</span> String[] hobbies;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Teacher&gt; teacherMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSid</span><span class="params">(Integer sid)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSname</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSname</span><span class="params">(String sname)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Double <span class="title function_">getScore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScore</span><span class="params">(Double score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Clazz <span class="title function_">getClazz</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> clazz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setClazz</span><span class="params">(Clazz clazz)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.clazz = clazz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String[] getHobbies() &#123;</span><br><span class="line">        <span class="keyword">return</span> hobbies;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHobbies</span><span class="params">(String[] hobbies)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.hobbies = hobbies;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Teacher&gt; <span class="title function_">getTeacherMap</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> teacherMap;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTeacherMap</span><span class="params">(Map&lt;String, Teacher&gt; teacherMap)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.teacherMap = teacherMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname,  String gender ,Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String sname,  String gender,Double score)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.sname = sname;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.score =score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;sid=&quot;</span> + sid +</span><br><span class="line">                <span class="string">&quot;, sname=&#x27;&quot;</span> + sname + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, score=&quot;</span> + score +</span><br><span class="line">                <span class="string">&quot;, clazz=&quot;</span> + clazz +</span><br><span class="line">                <span class="string">&quot;, hobbies=&quot;</span> + Arrays.toString(hobbies) +</span><br><span class="line">                <span class="string">&quot;, teacherMap=&quot;</span> + teacherMap +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>配置 bean：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;teacherOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10086&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;大宝&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;teacherTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10010&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小宝&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFive&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--内部bean，只能在当前bean的内部使用，不能直接通过IOC容器获取--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzInner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;远大前程班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>抽烟<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>喝酒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>烫头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;10086&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;teacherOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;10010&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;teacherTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>测试类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">studentFive</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentFive&quot;</span>, Student.class);</span><br><span class="line">        System.out.println(studentFive);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214844713.png" alt="image-20230408214844713"></p><h4 id="④引用-Map-集合类型的-bean"><a href="#④引用-Map-集合类型的-bean" class="headerlink" title="④引用 Map 集合类型的 bean"></a>④引用 Map 集合类型的 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--map集合类型的bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">util:map</span> <span class="attr">id</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;10086&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;teacherOne&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;10010&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;teacherTwo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">util:map</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentFive&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1004&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;赵六&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;clazz&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--内部bean，只能在当前bean的内部使用，不能直接通过IOC容器获取--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;clazzInner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Clazz&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2222&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;远大前程班&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>抽烟<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>喝酒<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>烫头<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;teacherMap&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;teacherOne&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10086&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;大宝&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;teacherTwo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10010&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小宝&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//获取IOC容器</span></span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//获取bean</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">studentFive</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentFive&quot;</span>, Student.class);</span><br><span class="line">        System.out.println(studentFive);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408214917638.png" alt="image-20230408214917638"></p><p>​<strong>注意：</strong></p><p>​<strong><font style="color:red">使用util:list、util:map标签必须引入相应的命名空间，可以通过idea的提示功能选择</font></strong></p><h3 id="2-10-p命名空间"><a href="#2-10-p命名空间" class="headerlink" title="2.10 p命名空间"></a>2.10 p命名空间</h3><p>​<strong>引入 p 命名空间后，可以通过以下方式为 bean 的各个属性赋值</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;studentSix&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">p:sid</span>=<span class="string">&quot;1005&quot;</span> <span class="attr">p:sname</span>=<span class="string">&quot;小明&quot;</span> <span class="attr">p:teacherMap-ref</span>=<span class="string">&quot;teacherMap&quot;</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDI</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="comment">//获取IOC容器</span></span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc.xml&quot;</span>);</span><br><span class="line">       <span class="comment">//获取bean</span></span><br><span class="line">       <span class="type">Student</span> <span class="variable">studentSix</span> <span class="operator">=</span> ioc.getBean(<span class="string">&quot;studentSix&quot;</span>, Student.class);</span><br><span class="line">       System.out.println(studentSix);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408215053284.png" alt="image-20230408215053284"></p><h3 id="2-11-引入外部属性文件"><a href="#2-11-引入外部属性文件" class="headerlink" title="2.11 引入外部属性文件"></a>2.11 引入外部属性文件</h3><h4 id="①加入依赖"><a href="#①加入依赖" class="headerlink" title="①加入依赖"></a>①加入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.38<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="②创建外部属性文件"><a href="#②创建外部属性文件" class="headerlink" title="②创建外部属性文件"></a>②创建外部属性文件</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408215135405.png" alt="image-20230408215135405"></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">jdbc:mysql://localhost:3306/ssm</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><h4 id="③引入属性文件"><a href="#③引入属性文件" class="headerlink" title="③引入属性文件"></a>③引入属性文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入外部属性文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;jdbc.properties&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:property-placeholder</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="④配置-bean"><a href="#④配置-bean" class="headerlink" title="④配置 bean"></a>④配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;druidDataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="⑤测试"><a href="#⑤测试" class="headerlink" title="⑤测试"></a>⑤测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDataSource</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-datasource.xml&quot;</span>);</span><br><span class="line">       <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> ioc.getBean(DruidDataSource.class);</span><br><span class="line">       System.out.println(dataSource.getConnection());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="⑥运行结果-1"><a href="#⑥运行结果-1" class="headerlink" title="⑥运行结果"></a>⑥运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408215237459.png" alt="image-20230408215237459"></p><h3 id="2-12-bean-的作用域"><a href="#2-12-bean-的作用域" class="headerlink" title="2.12 bean 的作用域"></a>2.12 bean 的作用域</h3><h4 id="①概念"><a href="#①概念" class="headerlink" title="①概念"></a>①概念</h4><p>​<strong>在 Spring 中可以通过配置 bean 标签的 scope 属性来指定 bean 的作用域范围，各取值含义参加下表：</strong></p><table><thead><tr><th><strong>取值</strong></th><th><strong>含义</strong></th><th><strong>创建对象的时机</strong></th></tr></thead><tbody><tr><td><strong>singleton（默认）</strong></td><td><strong>在 IOC 容器中，这个 bean 的对象始终为单实例</strong></td><td><strong>IOC 容器初始化时</strong></td></tr><tr><td><strong>prototype</strong></td><td><strong>这个 bean 在IOC容器中有多个实例</strong></td><td><strong>获取 bean 时</strong></td></tr></tbody></table><p>​<strong>如果是在 WebApplicationContext 环境下还会有另外两个作用域（但不常用）：</strong></p><table><thead><tr><th><strong>取值</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><strong>request</strong></td><td><strong>在一个请求范围内有效</strong></td></tr><tr><td><strong>session</strong></td><td><strong>在一个会话范围内有效</strong></td></tr></tbody></table><h4 id="②配置-bean-2"><a href="#②配置-bean-2" class="headerlink" title="②配置 bean"></a>②配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- scope属性：取值 singleton（默认值），bean 在 IOC 容器中只有一个实例，IOC 容器初始化时创建对象 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scope属性：取值 prototype，bean 在 IOC 容器中可以有多个实例，getBean()时创建对象 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        scope：设置bean的作用域</span></span><br><span class="line"><span class="comment">        scope=&quot;singleton|prototype&quot;</span></span><br><span class="line"><span class="comment">        singleton（单例）：表示获取该bean所对应的对象都是同一个</span></span><br><span class="line"><span class="comment">        prototype（多例）：表示获取该bean所对应的对象都不是同一个</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.Student&quot;</span>  <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sid&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1001&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③测试-2"><a href="#③测试-2" class="headerlink" title="③测试"></a>③测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testBeanScope</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ac</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-scope.xml&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> ac.getBean(User.class);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> ac.getBean(User.class);</span><br><span class="line">    System.out.println(user1==user2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④运行结果"><a href="#④运行结果" class="headerlink" title="④运行结果"></a>④运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408215431739.png" alt="image-20230408215431739"></p><h3 id="2-13-bean-的生命周期"><a href="#2-13-bean-的生命周期" class="headerlink" title="2.13 bean 的生命周期"></a>2.13 bean 的生命周期</h3><h4 id="①具体的生命周期过程"><a href="#①具体的生命周期过程" class="headerlink" title="①具体的生命周期过程"></a>①具体的生命周期过程</h4><ul><li><strong>bean 对象创建（调用无参构造器）</strong></li><li><strong>给 bean 对象设置属性（依赖注入）</strong></li><li><strong>bean 对象初始化之前操作（由 bean 的后置处理器负责）</strong></li><li><strong>bean 对象初始化（需在配置 bean 时指定初始化方法）</strong></li><li><strong>bean 对象初始化之后操作（由 bean 的后置处理器负责）</strong></li><li><strong>bean 对象就绪可以使用</strong></li><li><strong>bean 对象销毁（需在配置 bean 时指定销毁方法）</strong></li><li><strong>IOC 容器关闭</strong></li></ul><h4 id="②创建-User-类"><a href="#②创建-User-类" class="headerlink" title="②创建 User 类"></a>②创建 User 类</h4><blockquote><p><strong>注意其中的 initMethod() 和 destroyMethod()，可以通过配置 bean 指定为初始化和销毁的方法</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;生命周期1：实例化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer id, String username, String password, Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;生命周期2：依赖注入&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Integer age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initMethod</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;生命周期3：初始化&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyMethod</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;生命周期5：销毁&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, username=&#x27;&quot;</span> + username + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③配置-bean"><a href="#③配置-bean" class="headerlink" title="③配置 bean"></a>③配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用init-method属性指定初始化方法 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用destroy-method属性指定销毁方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.User&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;initMethod&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroyMethod&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="④测试"><a href="#④测试" class="headerlink" title="④测试"></a>④测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="comment">//ConfigurableApplicationContext是ApplicationContext的子接口，其中扩展了刷新和关闭容器的方法</span></span><br><span class="line">      <span class="comment">// ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;spring-lifecycle.xml&quot;);</span></span><br><span class="line">      <span class="type">ConfigurableApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-lifecycle.xml&quot;</span>);</span><br><span class="line">      <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> ioc.getBean(User.class);</span><br><span class="line">      System.out.println(user);</span><br><span class="line">      ioc.close();</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="⑤运行结果"><a href="#⑤运行结果" class="headerlink" title="⑤运行结果"></a>⑤运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408215550370.png" alt="image-20230408215550370"></p><h4 id="⑥注意"><a href="#⑥注意" class="headerlink" title="⑥注意"></a>⑥注意</h4><ul><li><strong>若 bean 的作用域为单例时，生命周期的前三个步骤会在获取 IOC 容器时执行。</strong></li><li><strong>若 bean 的作用域为多例时，生命周期的前三个步骤会在获取 bean 时执行。</strong></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.User&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;initMethod&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroyMethod&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//ConfigurableApplicationContext是ApplicationContext的子接口，其中扩展了刷新和关闭容器的方法</span></span><br><span class="line">        <span class="comment">// ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;spring-lifecycle.xml&quot;);</span></span><br><span class="line">        <span class="type">ConfigurableApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-lifecycle.xml&quot;</span>);</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408220054351.png" alt="image-20230408220054351"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.User&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;initMethod&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroyMethod&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//ConfigurableApplicationContext是ApplicationContext的子接口，其中扩展了刷新和关闭容器的方法</span></span><br><span class="line">        <span class="comment">// ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;spring-lifecycle.xml&quot;);</span></span><br><span class="line">        <span class="type">ConfigurableApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-lifecycle.xml&quot;</span>);</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408220125740.png" alt="image-20230408220125740"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//ConfigurableApplicationContext是ApplicationContext的子接口，其中扩展了刷新和关闭容器的方法</span></span><br><span class="line">        <span class="comment">// ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;spring-lifecycle.xml&quot;);</span></span><br><span class="line">        <span class="type">ConfigurableApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-lifecycle.xml&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> ioc.getBean(User.class);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        ioc.close();</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408220144875.png" alt="image-20230408220144875"></p><h4 id="⑦bean-的后置处理器"><a href="#⑦bean-的后置处理器" class="headerlink" title="⑦bean 的后置处理器"></a>⑦bean 的后置处理器</h4><p>​<strong>bean 的<font style="color:red">后置处理器会在生命周期的初始化前后添加额外的操作</font>，需要实现 BeanPostProcessor 接口，且配置到 IOC 容器中，需要注意的是，bean后置处理器不是单独针对某一个 bean 生效，而是针对 IOC 容器中所有 bean 都会执行</strong></p><p>​<strong>创建 bean 的后置处理器：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.BeanPostProcessor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBeanPostProcessor</span> <span class="keyword">implements</span> <span class="title class_">BeanPostProcessor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">postProcessBeforeInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        <span class="comment">//此方法在bean的生命周期初始化之前执行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;MyBeanPostProcessor--&gt;后置处理器postProcessBeforeInitialization&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">postProcessAfterInitialization</span><span class="params">(Object bean, String beanName)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        <span class="comment">//此方法在bean的生命周期初始化之后执行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;MyBeanPostProcessor--&gt;后置处理器postProcessAfterInitialization&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>在 IOC 容器中配置后置处理器：</strong></p><blockquote><p>这里先把 bean 的作用域去掉，不然不会执行销毁的生命周期</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.pojo.User&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;initMethod&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;destroyMethod&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;23&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bean的后置处理器要放入IOC容器才能生效 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;myBeanPostProcessor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.process.MyBeanPostProcessor&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>测试类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//ConfigurableApplicationContext是ApplicationContext的子接口，其中扩展了刷新和关闭容器的方法</span></span><br><span class="line">    <span class="comment">// ApplicationContext ioc = new ClassPathXmlApplicationContext(&quot;spring-lifecycle.xml&quot;);</span></span><br><span class="line">    <span class="type">ConfigurableApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-lifecycle.xml&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> ioc.getBean(User.class);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    ioc.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>没去掉作用域的运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408220553160.png" alt="image-20230408220553160"></p><p>​<strong>去掉作用域的运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408220604877.png" alt="image-20230408220604877"></p><h3 id="2-14-FactoryBean"><a href="#2-14-FactoryBean" class="headerlink" title="2.14 FactoryBean"></a>2.14 FactoryBean</h3><h4 id="①简介"><a href="#①简介" class="headerlink" title="①简介"></a>①简介</h4><p>​<strong>FactoryBean 是 Spring 提供的一种整合第三方框架的常用机制。和普通的 bean 不同，配置一个 FactoryBean 类型的 bean，<font style="color:red">在获取 bean 的时候得到的并不是 class 属性中配置的这个类的对象，而是 getObject() 方法的返回值。</font>通过这种机制，Spring 可以帮我们把复杂组件创建的详细过程和繁琐细节都屏蔽起来，只把最简洁的使用界面展示给我们。将来我们整合 Mybatis 时，Spring 就是通过 FactoryBean 机制来帮我们创建 SqlSessionFactory 对象的。</strong></p><p>​<strong><font style="color:red">FactoryBean 是一个接口，需要创建一个类实现该接口</font></strong></p><ul><li><strong>getObject()：通过一个对象交给 IOC 容器管理。</strong></li><li><strong>getObjectType()：设置所提供对象的类型。</strong></li><li><strong>isSingleton()：所提供的对象是否单例。</strong></li></ul><p>​<strong><font style="color:red">当把 FactoryBean 的实现类配置为 bean 时，会将当前类中 getObject() 所返回的对象交给 IOC 容器管理。</font></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Copyright 2002-2020 the original author or authors.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment">* you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment">* You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* https://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment">* See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment">* limitations under the License.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">package</span> org.springframework.beans.factory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Interface to be implemented by objects used within a &#123;<span class="doctag">@link</span> BeanFactory&#125;</span></span><br><span class="line"><span class="comment">which</span></span><br><span class="line"><span class="comment">* are themselves factories for individual objects. If a bean implements this</span></span><br><span class="line"><span class="comment">* interface, it is used as a factory for an object to expose, not directly as a</span></span><br><span class="line"><span class="comment">* bean instance that will be exposed itself.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* &lt;p&gt;&lt;b&gt;NB: A bean that implements this interface cannot be used as a normal</span></span><br><span class="line"><span class="comment">bean.&lt;/b&gt;</span></span><br><span class="line"><span class="comment">* A FactoryBean is defined in a bean style, but the object exposed for bean</span></span><br><span class="line"><span class="comment">* references (&#123;<span class="doctag">@link</span> #getObject()&#125;) is always the object that it creates.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* &lt;p&gt;FactoryBeans can support singletons and prototypes, and can either create</span></span><br><span class="line"><span class="comment">* objects lazily on demand or eagerly on startup. The &#123;<span class="doctag">@link</span> SmartFactoryBean&#125;</span></span><br><span class="line"><span class="comment">* interface allows for exposing more fine-grained behavioral metadata.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* &lt;p&gt;This interface is heavily used within the framework itself, for example</span></span><br><span class="line"><span class="comment">for</span></span><br><span class="line"><span class="comment">* the AOP &#123;<span class="doctag">@link</span> org.springframework.aop.framework.ProxyFactoryBean&#125; or the</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@link</span> org.springframework.jndi.JndiObjectFactoryBean&#125;. It can be used for</span></span><br><span class="line"><span class="comment">* custom components as well; however, this is only common for infrastructure</span></span><br><span class="line"><span class="comment">code.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* &lt;p&gt;&lt;b&gt;&#123;<span class="doctag">@code</span> FactoryBean&#125; is a programmatic contract. Implementations are not</span></span><br><span class="line"><span class="comment">* supposed to rely on annotation-driven injection or other reflective</span></span><br><span class="line"><span class="comment">facilities.&lt;/b&gt;</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@link</span> #getObjectType()&#125; &#123;<span class="doctag">@link</span> #getObject()&#125; invocations may arrive early in</span></span><br><span class="line"><span class="comment">the</span></span><br><span class="line"><span class="comment">* bootstrap process, even ahead of any post-processor setup. If you need access</span></span><br><span class="line"><span class="comment">to</span></span><br><span class="line"><span class="comment">* other beans, implement &#123;<span class="doctag">@link</span> BeanFactoryAware&#125; and obtain them</span></span><br><span class="line"><span class="comment">programmatically.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* &lt;p&gt;&lt;b&gt;The container is only responsible for managing the lifecycle of the</span></span><br><span class="line"><span class="comment">FactoryBean</span></span><br><span class="line"><span class="comment">* instance, not the lifecycle of the objects created by the FactoryBean.&lt;/b&gt;</span></span><br><span class="line"><span class="comment">Therefore,</span></span><br><span class="line"><span class="comment">* a destroy method on an exposed bean object (such as &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment">java.io.Closeable#close()&#125;</span></span><br><span class="line"><span class="comment">* will &lt;i&gt;not&lt;/i&gt; be called automatically. Instead, a FactoryBean should</span></span><br><span class="line"><span class="comment">implement</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@link</span> DisposableBean&#125; and delegate any such close call to the underlying</span></span><br><span class="line"><span class="comment">object.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* &lt;p&gt;Finally, FactoryBean objects participate in the containing BeanFactory&#x27;s</span></span><br><span class="line"><span class="comment">* synchronization of bean creation. There is usually no need for internal</span></span><br><span class="line"><span class="comment">* synchronization other than for purposes of lazy initialization within the</span></span><br><span class="line"><span class="comment">* FactoryBean itself (or the like).</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Rod Johnson</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Juergen Hoeller</span></span><br><span class="line"><span class="comment">* <span class="doctag">@since</span> 08.03.2003</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> &lt;T&gt; the bean type</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> org.springframework.beans.factory.BeanFactory</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> org.springframework.aop.framework.ProxyFactoryBean</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> org.springframework.jndi.JndiObjectFactoryBean</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FactoryBean</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">* The name of an attribute that can be</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@link</span> org.springframework.core.AttributeAccessor#setAttribute set&#125; on a</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@link</span> org.springframework.beans.factory.config.BeanDefinition&#125; so that</span></span><br><span class="line"><span class="comment">* factory beans can signal their object type when it can&#x27;t be deduced from</span></span><br><span class="line"><span class="comment">* the factory bean class.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@since</span> 5.2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">OBJECT_TYPE_ATTRIBUTE</span> <span class="operator">=</span> <span class="string">&quot;factoryBeanObjectType&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">* Return an instance (possibly shared or independent) of the object</span></span><br><span class="line"><span class="comment">* managed by this factory.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;As with a &#123;<span class="doctag">@link</span> BeanFactory&#125;, this allows support for both the</span></span><br><span class="line"><span class="comment">* Singleton and Prototype design pattern.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;If this FactoryBean is not fully initialized yet at the time of</span></span><br><span class="line"><span class="comment">* the call (for example because it is involved in a circular reference),</span></span><br><span class="line"><span class="comment">* throw a corresponding &#123;<span class="doctag">@link</span> FactoryBeanNotInitializedException&#125;.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;As of Spring 2.0, FactoryBeans are allowed to return &#123;<span class="doctag">@code</span> null&#125;</span></span><br><span class="line"><span class="comment">* objects. The factory will consider this as normal value to be used; it</span></span><br><span class="line"><span class="comment">* will not throw a FactoryBeanNotInitializedException in this case anymore.</span></span><br><span class="line"><span class="comment">* FactoryBean implementations are encouraged to throw</span></span><br><span class="line"><span class="comment">* FactoryBeanNotInitializedException themselves now, as appropriate.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> an instance of the bean (can be &#123;<span class="doctag">@code</span> null&#125;)</span></span><br><span class="line"><span class="comment">* <span class="doctag">@throws</span> Exception in case of creation errors</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> FactoryBeanNotInitializedException</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    T <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">* Return the type of object that this FactoryBean creates,</span></span><br><span class="line"><span class="comment">* or &#123;<span class="doctag">@code</span> null&#125; if not known in advance.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;This allows one to check for specific types of beans without</span></span><br><span class="line"><span class="comment">* instantiating objects, for example on autowiring.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;In the case of implementations that are creating a singleton object,</span></span><br><span class="line"><span class="comment">* this method should try to avoid singleton creation as far as possible;</span></span><br><span class="line"><span class="comment">* it should rather estimate the type in advance.</span></span><br><span class="line"><span class="comment">* For prototypes, returning a meaningful type here is advisable too.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;This method can be called &lt;i&gt;before&lt;/i&gt; this FactoryBean has</span></span><br><span class="line"><span class="comment">* been fully initialized. It must not rely on state created during</span></span><br><span class="line"><span class="comment">* initialization; of course, it can still use such state if available.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;&lt;b&gt;<span class="doctag">NOTE:</span>&lt;/b&gt; Autowiring will simply ignore FactoryBeans that return</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@code</span> null&#125; here. Therefore it is highly recommended to implement</span></span><br><span class="line"><span class="comment">* this method properly, using the current state of the FactoryBean.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> the type of object that this FactoryBean creates,</span></span><br><span class="line"><span class="comment">* or &#123;<span class="doctag">@code</span> null&#125; if not known at the time of the call</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> ListableBeanFactory#getBeansOfType</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    Class&lt;?&gt; getObjectType();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">* Is the object managed by this factory a singleton? That is,</span></span><br><span class="line"><span class="comment">* will &#123;<span class="doctag">@link</span> #getObject()&#125; always return the same object</span></span><br><span class="line"><span class="comment">* (a reference that can be cached)?</span></span><br><span class="line"><span class="comment">* &lt;p&gt;&lt;b&gt;<span class="doctag">NOTE:</span>&lt;/b&gt; If a FactoryBean indicates to hold a singleton object,</span></span><br><span class="line"><span class="comment">* the object returned from &#123;<span class="doctag">@code</span> getObject()&#125; might get cached</span></span><br><span class="line"><span class="comment">* by the owning BeanFactory. Hence, do not return &#123;<span class="doctag">@code</span> true&#125;</span></span><br><span class="line"><span class="comment">* unless the FactoryBean always exposes the same reference.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;The singleton status of the FactoryBean itself will generally</span></span><br><span class="line"><span class="comment">* be provided by the owning BeanFactory; usually, it has to be</span></span><br><span class="line"><span class="comment">* defined as singleton there.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;&lt;b&gt;<span class="doctag">NOTE:</span>&lt;/b&gt; This method returning &#123;<span class="doctag">@code</span> false&#125; does not</span></span><br><span class="line"><span class="comment">* necessarily indicate that returned objects are independent instances.</span></span><br><span class="line"><span class="comment">* An implementation of the extended &#123;<span class="doctag">@link</span> SmartFactoryBean&#125; interface</span></span><br><span class="line"><span class="comment">* may explicitly indicate independent instances through its</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@link</span> SmartFactoryBean#isPrototype()&#125; method. Plain &#123;<span class="doctag">@link</span> FactoryBean&#125;</span></span><br><span class="line"><span class="comment">* implementations which do not implement this extended interface are</span></span><br><span class="line"><span class="comment">* simply assumed to always return independent instances if the</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@code</span> isSingleton()&#125; implementation returns &#123;<span class="doctag">@code</span> false&#125;.</span></span><br><span class="line"><span class="comment">* &lt;p&gt;The default implementation returns &#123;<span class="doctag">@code</span> true&#125;, since a</span></span><br><span class="line"><span class="comment">* &#123;<span class="doctag">@code</span> FactoryBean&#125; typically manages a singleton instance.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> whether the exposed object is a singleton</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> #getObject()</span></span><br><span class="line"><span class="comment">* <span class="doctag">@see</span> SmartFactoryBean#isPrototype()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">isSingleton</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②创建-UserFactoryBean-类"><a href="#②创建-UserFactoryBean-类" class="headerlink" title="②创建 UserFactoryBean 类"></a>②创建 UserFactoryBean 类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserFactoryBean</span>  <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> User.class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="③配置-bean-1"><a href="#③配置-bean-1" class="headerlink" title="③配置 bean"></a>③配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.factory.UserFactoryBean&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="④测试-1"><a href="#④测试-1" class="headerlink" title="④测试"></a>④测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFactoryBean</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-factory.xml&quot;</span>);</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> ioc.getBean(User.class);</span><br><span class="line">       System.out.println(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="⑤运行结果-1"><a href="#⑤运行结果-1" class="headerlink" title="⑤运行结果"></a>⑤运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408220943118.png" alt="image-20230408220943118"></p><h3 id="2-15-基于-XML-的自动装配"><a href="#2-15-基于-XML-的自动装配" class="headerlink" title="2.15 基于 XML 的自动装配"></a>2.15 基于 XML 的自动装配</h3><blockquote><p><strong>自动装配：</strong></p><p>​<strong>根据指定的策略，在 IOC 容器中匹配某一个 bean，自动为指定的 bean 中所依赖的类类型或接口类型属性赋值</strong></p></blockquote><h4 id="①场景模拟"><a href="#①场景模拟" class="headerlink" title="①场景模拟"></a>①场景模拟</h4><p>​<strong>创建 UserController 类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.atguigu.spring.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.spring.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserService <span class="title function_">getUserService</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userService;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserService</span><span class="params">(UserService userService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userService.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建 UserService 接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建 UserServiceImpl 类实现 UserService 接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.atguigu.spring.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.atguigu.spring.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserDao <span class="title function_">getUserDao</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userDao;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserDao</span><span class="params">(UserDao userDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span> &#123;</span><br><span class="line">        userDao.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建 UserDao 接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建 UserDaoImpl 类实现 UserDao 接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.atguigu.spring.dao.UserDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;保存成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②配置-bean-3"><a href="#②配置-bean-3" class="headerlink" title="②配置 bean"></a>②配置 bean</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userService&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDao&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="③测试-3"><a href="#③测试-3" class="headerlink" title="③测试"></a>③测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAutowire</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-autowire-xml.xml&quot;</span>);</span><br><span class="line">       <span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> ioc.getBean(UserController.class);</span><br><span class="line">       userController.saveUser();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="④运行结果-1"><a href="#④运行结果-1" class="headerlink" title="④运行结果"></a>④运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221135537.png" alt="image-20230408221135537"></p><h4 id="⑤自动装配"><a href="#⑤自动装配" class="headerlink" title="⑤自动装配"></a>⑤自动装配</h4><p>​<strong>根据指定的策略，在 IOC 容器中匹配某个 bean ，自动为 bean 中的类类型的属性或接口类型的属性赋值。</strong></p><p>​<strong>注意：</strong></p><ul><li><strong><font style="color:red">若在 IOC 中，没有任何一个兼容类型的 bean 能够为属性赋值，则该属性不装配，即值为默认值 null</font></strong></li><li><strong><font style="color:red">若在 IOC 中，有多个兼容类型的 bean 能够为属性赋值，则抛出异常 NoUniqueBeanDefinitionException</font></strong></li></ul><p>​<strong>自动装配的策略：</strong></p><ul><li><strong>no，default：表示不装配，即 bean 中的属性不会自动匹配某个 bean 为属性赋值，此时属性使用默认值。</strong></li><li><strong>byType：根据要赋值的属性的类型，在IOC容器中匹配某个 bean，为属性赋值。</strong></li><li><strong>byName：将要赋值的属性的属性名作为 bean 的 id 在IOC容器中匹配某个 bean，为属性赋值。</strong></li></ul><p>​<strong><font style="color:red">可以通过 bean 标签中的 autowire 属性设置自动装配的策略。</font></strong></p><h4 id="⑥自动装配方式：byType"><a href="#⑥自动装配方式：byType" class="headerlink" title="⑥自动装配方式：byType"></a>⑥自动装配方式：byType</h4><p>​<strong><font style="color:red">当使用 byType 实现自动装配时，IOC 容器中有且只有一个类型匹配的 bean 能够为属性赋值。</font></strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221314104.png" alt="image-20230408221314104"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;bean id=&quot;userService&quot; class=&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot; autowire=&quot;byType&quot; &gt;&lt;/bean&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;bean id=&quot;userDao&quot; class=&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;&gt;&lt;/bean&gt; --&gt;</span></span><br></pre></td></tr></table></figure><h5 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h5><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221339936.png" alt="image-20230408221339936"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221359749.png" alt="image-20230408221359749"></p><h4 id="⑦自动装配方式：byName"><a href="#⑦自动装配方式：byName" class="headerlink" title="⑦自动装配方式：byName"></a>⑦自动装配方式：byName</h4><p>​<strong>byName：将自动装配的属性的属性名，作为bean的id在IOC容器中匹配相对应的bean进行赋值。</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221419652.png" alt="image-20230408221419652"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userController&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userServiceImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221435551.png" alt="image-20230408221435551"></p><h2 id="3-基于注解管理-bean"><a href="#3-基于注解管理-bean" class="headerlink" title="3. 基于注解管理 bean"></a>3. 基于注解管理 bean</h2><h3 id="3-1-标记与扫描"><a href="#3-1-标记与扫描" class="headerlink" title="3.1 标记与扫描"></a>3.1 标记与扫描</h3><h4 id="①注解"><a href="#①注解" class="headerlink" title="①注解"></a>①注解</h4><p>​<strong>和 XML 配置文件一样，注解本身并不能执行，注解本身仅仅只是做一个标记，具体的功能是框架检测到注解标记的位置，然后针对这个位置按照注解标记的功能来执行具体操作。</strong></p><p>​<strong>本质上：所有一切的操作都是 Java 代码来完成的，XML 和注解只是告诉框架中的 Java 代码如何执行。</strong></p><p>​<strong>举例：元旦联欢会要布置教室，蓝色的地方贴上元旦快乐四个字，红色的地方贴上拉花，黄色的地方贴上气球。</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221512810.png" alt="image-20230408221512810"></p><p><strong>班长做了所有标记，同学们来完成具体工作。墙上的标记相当于我们在代码中使用的注解，后面同学们做的工作，相当于框架的具体操作。</strong></p><h4 id="②扫描"><a href="#②扫描" class="headerlink" title="②扫描"></a>②扫描</h4><p>​<strong>Spring 为了知道程序员在哪些地方标记了什么注解，就需要通过扫描的方式，来进行检测。然后根据注解进行后续操作。</strong></p><h4 id="③新建模块并导入依赖"><a href="#③新建模块并导入依赖" class="headerlink" title="③新建模块并导入依赖"></a>③新建模块并导入依赖</h4><p>​<strong>命名为：spring_mvc_annotation</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 基于Maven依赖传递性，导入spring-context依赖即可导入当前所需所有jar包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="④创建-Spring-配置文件"><a href="#④创建-Spring-配置文件" class="headerlink" title="④创建 Spring 配置文件"></a>④创建 Spring 配置文件</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221749866.png" alt="image-20230408221749866"></p><h4 id="⑤标识组件的常用注解"><a href="#⑤标识组件的常用注解" class="headerlink" title="⑤标识组件的常用注解"></a>⑤<font style="color:red">标识组件的常用注解</font></h4><ul><li><p><strong>@Component：将类标识为普通组件</strong> </p></li><li><p><strong>@Controller：将类标识为控制层组件</strong> </p></li><li><p><strong>@Service：将类标识为业务层组件</strong> </p></li><li><p><strong>@Repository：将类标识为持久层组件</strong></p></li></ul><p><strong>问：以上四个注解有什么关系和区别？</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408221829717.png" alt="image-20230408221829717"></p><p>​<strong>通过查看源码我们得知，@Controller、@Service、@Repository 这三个注解只是在 @Component 注解的基础上起了三个新的名字。</strong></p><p>​<strong>对于 Spring 使用 IOC 容器管理这些组件来说没有区别。所以@Controller、@Service、@Repository这三个注解只是给开发人员看的，让我们能够便于分辨组件的作用。</strong></p><p>​<strong>注意：虽然它们本质上一样，但是为了代码的可读性，为了程序结构严谨我们肯定不能随便胡乱标记。</strong></p><h4 id="⑥创建组件"><a href="#⑥创建组件" class="headerlink" title="⑥创建组件"></a>⑥创建组件</h4><p>​<strong>创建控制层组件 UserController</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建接口 UserService</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建业务层组件 UserServiceImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建接口 UserDao</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>创建持久层组件 UserDaoImpl</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="⑦扫描组件"><a href="#⑦扫描组件" class="headerlink" title="⑦扫描组件"></a>⑦扫描组件</h4><p>​<strong>情况一：最基本的扫描方式</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.spring&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Test</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc-annotation.xml&quot;</span>);</span><br><span class="line">        <span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> ioc.getBean( UserController.class);</span><br><span class="line">        System.out.println(userController);</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> ioc.getBean( UserService.class);</span><br><span class="line">        System.out.println(userService);</span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> ioc.getBean( UserDao.class);</span><br><span class="line">        System.out.println(userDao);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222002737.png" alt="image-20230408222002737"></p><p><strong>情况二：指定要排除的组件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.spring&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- context:exclude-filter标签：指定排除规则 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    type：设置排除或包含的依据</span></span><br><span class="line"><span class="comment">    type=&quot;annotation&quot;，根据注解排除，expression中设置要排除的注解的全类名</span></span><br><span class="line"><span class="comment">    type=&quot;assignable&quot;，根据类型排除，expression中设置要排除的类的全类名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;context:exclude-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;assignable&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc-annotation.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// UserController userController = ioc.getBean( UserController.class);</span></span><br><span class="line">        <span class="comment">// System.out.println(userController);</span></span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> ioc.getBean( UserService.class);</span><br><span class="line">        System.out.println(userService);</span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> ioc.getBean( UserDao.class);</span><br><span class="line">        System.out.println(userDao);</span><br><span class="line">        <span class="comment">// userController.saveUser();</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222032497.png" alt="image-20230408222032497"></p><p><strong>情况三：仅扫描指定组件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.spring&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- context:include-filter标签：包含扫描 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- use-default-filters属性：</span></span><br><span class="line"><span class="comment">取值 true 所设置的包下所有类都需要扫描，此时可以排除扫描</span></span><br><span class="line"><span class="comment">取值 false 所设置的包下所有类都不需要扫描，此时可以使用包含扫描 </span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此时必须设置use-default-filters=&quot;false&quot;，因为默认规则即扫描指定包下所有类 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        type：设置排除或包含的依据</span></span><br><span class="line"><span class="comment">        type=&quot;annotation&quot;，根据注解排除，expression中设置要排除的注解的全类名</span></span><br><span class="line"><span class="comment">        type=&quot;assignable&quot;，根据类型排除，expression中设置要排除的类的全类名</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;context:include-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt; --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;assignable&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;com.atguigu.spring.controller.UserController&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc-annotation.xml&quot;</span>);</span><br><span class="line">    <span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> ioc.getBean( UserController.class);</span><br><span class="line">    System.out.println(userController);</span><br><span class="line">    <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> ioc.getBean( UserService.class);</span><br><span class="line">    System.out.println(userService);</span><br><span class="line">    <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> ioc.getBean( UserDao.class);</span><br><span class="line">    System.out.println(userDao);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222103733.png" alt="image-20230408222103733"></p><h4 id="⑧组件所对应的-bean-的-id"><a href="#⑧组件所对应的-bean-的-id" class="headerlink" title="⑧组件所对应的 bean 的 id"></a>⑧组件所对应的 bean 的 id</h4><p><strong>在我们使用 XML 方式管理 bean 的时候，每个 bean 都有一个唯一标识，便于在其他地方引用。现在使用注解后，每个组件仍然应该有一个唯一标识。</strong></p><p>​<strong>1.默认情况：</strong></p><ul><li><p><strong>通过注解+扫描所配置的 bean 的 id，默认值为&#x3D;&#x3D;类的小驼峰，即类名的首字母为小写的结果。&#x3D;&#x3D;</strong></p></li><li><p><strong>例如：UserController类对应的 bean 的 id 就是 userController。</strong></p></li></ul><p>​<strong>2.自定义 bean 的 id：</strong></p><ul><li><p><strong>&#x3D;&#x3D;可以通过标识组件的注解的 value 属性值设置 bean 的自定义的 id。&#x3D;&#x3D;</strong></p></li><li><p><strong>例如：@Service(“userService”) &#x2F;&#x2F;默认为 userServiceImpl</strong></p></li></ul><h4 id="⑨测试"><a href="#⑨测试" class="headerlink" title="⑨测试"></a>⑨测试</h4><p>​<strong>1.默认情况：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc-annotation.xml&quot;</span>);</span><br><span class="line">       <span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> ioc.getBean( <span class="string">&quot;userController&quot;</span>,UserController.class);</span><br><span class="line">       System.out.println(userController);</span><br><span class="line">       <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> ioc.getBean( <span class="string">&quot;userServiceImpl&quot;</span>,UserService.class);</span><br><span class="line">       System.out.println(userService);</span><br><span class="line">       <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> ioc.getBean( <span class="string">&quot;userDaoImpl&quot;</span>,UserDao.class);</span><br><span class="line">       System.out.println(userDao);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​<strong>2.自定义 bean 的 id：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository(&quot;userDao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(&quot;userService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc-annotation.xml&quot;</span>);</span><br><span class="line">        <span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> ioc.getBean( <span class="string">&quot;userController&quot;</span>,UserController.class);</span><br><span class="line">        System.out.println(userController);</span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> ioc.getBean( <span class="string">&quot;userService&quot;</span>,UserService.class);</span><br><span class="line">        System.out.println(userService);</span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">userDao</span> <span class="operator">=</span> ioc.getBean( <span class="string">&quot;userDao&quot;</span>,UserDao.class);</span><br><span class="line">        System.out.println(userDao);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222248351.png" alt="image-20230408222248351"></p><h3 id="3-2-基于注解的自动装配"><a href="#3-2-基于注解的自动装配" class="headerlink" title="3.2 基于注解的自动装配"></a>3.2 基于注解的自动装配</h3><h4 id="①场景模拟-1"><a href="#①场景模拟-1" class="headerlink" title="①场景模拟"></a>①场景模拟</h4><p>​<strong>参考基于 xml 的自动装配</strong></p><ul><li><p><strong>在 UserController 中声明UserService对象</strong></p></li><li><p><strong>在UserServiceImpl中声明UserDao对象</strong></p></li></ul><h4 id="②-Autowired-注解能够标识的位置"><a href="#②-Autowired-注解能够标识的位置" class="headerlink" title="②@Autowired 注解能够标识的位置"></a>②@Autowired 注解能够标识的位置</h4><ul><li><p><strong>&#x3D;&#x3D;标识在成员变量上，此时不需要设置成员变量的 set 方法。&#x3D;&#x3D;</strong></p></li><li><p><strong>标识在 set 方法上。</strong></p></li><li><p><strong>标识在为当前成员变量赋值的有参构造上。</strong></p></li></ul><h4 id="③-Autowired-注解"><a href="#③-Autowired-注解" class="headerlink" title="③@Autowired 注解"></a>③@Autowired 注解</h4><p>​<strong>在成员变量上直接标记 @Autowired 注解即可完成自动装配，不需要提供 setXxx() 方法。以后我们在项目中的正式用法就是这样。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;保存成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span> &#123;</span><br><span class="line">        userDao.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userService.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ioc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;spring-ioc-annotation.xml&quot;</span>);</span><br><span class="line">        <span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> ioc.getBean( UserController.class);</span><br><span class="line">        userController.saveUser();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222402627.png" alt="image-20230408222402627"></p><p>​<strong>@Autowired 在 set 方法上</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserController</span><span class="params">(UserService userService)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userService.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>@Autowired 在 有参构造器上</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserService</span><span class="params">(UserService userService)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.userService = userService;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userService.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="④-Autowired-工作流程"><a href="#④-Autowired-工作流程" class="headerlink" title="④@Autowired 工作流程"></a>④@Autowired 工作流程</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222444939.png" alt="image-20230408222444939"></p><p><strong>首先根据所需要的组件类型到 IOC 容器中查找</strong></p><ul><li><strong>能够找到唯一的 bean：直接执行装配</strong></li><li><strong>如果完全找不到匹配这个类型的 bean：装配失败</strong></li><li><strong>和所需类型匹配的bean不止一个</strong><ul><li><strong>没有@Qualifier注解：根据@Autowired标记位置成员变量的变量名作为 bean 的 id 进行匹配</strong></li><li><strong>能够找到：执行装配</strong></li><li><strong>找不到：装配失败</strong></li><li><strong>使用@Qualifier注解：根据@Qualifier注解中指定的名称作为 bean 的 id 进行匹配</strong></li><li><strong>能够找到：执行装配</strong></li><li><strong>找不到：装配失败</strong></li></ul></li></ul><p><strong>总结：</strong></p><ul><li><p><strong>&#x3D;&#x3D;默认通过 byType 的方式，在 IOC 容器中通过类型匹配某个 bean 为属性赋值。&#x3D;&#x3D;</strong></p></li><li><p><strong>若有多个类型匹配的 bean，此时会自动转换为 byName 的方式实现自动装配的效果，即将要赋值的属性的属性名作为 bean 的 id 匹配某个bean为属性赋值。</strong></p></li><li><p><strong>若 byType 和 byName 的方式都无法实现自动装配，即 IOC 容器中有多个类型匹配的 bean ，且这些 bean 的 id 和要赋值的属性的属性名都不一致，此时抛异常：NoUniqueBeanDefinitionException。</strong></p></li><li><p><strong>此时可以在要赋值的属性上，添加一个注解 @Qualifier，通过该注解的 value 属性值，指定某个 bean 的 id，将这个 bean 为属性赋值。</strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- byType 方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.spring&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!--byName 方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222533150.png" alt="image-20230408222533150"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--扫描组件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- byType 和 byName 都失效 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.atguigu.spring&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;service&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.service.impl.UserServiceImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.spring.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222552264.png" alt="image-20230408222552264"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;userDaoImpl&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span> &#123;</span><br><span class="line">        userDao.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;userServiceImpl&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userService.saveUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222624299.png" alt="image-20230408222624299"></p><p><strong>注意：</strong></p><ul><li><strong>若 IOC 容器中没有任何一个类型匹配的 bean，此时抛出异常：NoSuchBeanDefinitionException。</strong></li><li><strong>在@Autowired注解中有个属性 required，默认值为true，要求必须完成自动装配。</strong></li><li><strong>可以将 required 设置为 false，此时能装配则装配，无法装配则使用属性的默认值。</strong></li><li><strong>但是实际开发时，基本上所有需要装配组件的地方都是必须装配的，用不上这个属性。</strong></li></ul><p>​<strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/IOC/image-20230408222638465.png" alt="image-20230408222638465"></p>]]></content>
      
      
      <categories>
          
          <category> Spring教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring5 </tag>
            
            <tag> Java应用程序开发框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring简介</title>
      <link href="/posts/4A2F9E7B.html"/>
      <url>/posts/4A2F9E7B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Spring5/image-20221209105947105.png"></p><hr><h3 id="1-Spring-概述"><a href="#1-Spring-概述" class="headerlink" title="1. Spring 概述"></a>1. Spring 概述</h3><p>​<strong>官网地址：<a href="https://spring.io/">https://spring.io/</a></strong></p><blockquote><p>Spring 是最受欢迎的企业级 Java 应用程序开发框架，数以百万的来自世界各地的开发人员使用 Spring 框架来创建性能好、易于测试、可重用的代码。</p><p>Spring 框架是一个开源的 Java 平台，它最初是由 Rod Johnson 编写的，并且于 2003 年 6 月首次在 Apache 2.0 许可下发布。</p><p>Spring 是轻量级的框架，其基础版本只有 2 MB 左右的大小。</p><p>Spring 框架的核心特性是可以用于开发任何 Java 应用程序，但是在 Java EE 平台上构建 web 应用程序是需要扩展的。 </p><p>Spring 框架的目标是使 J2EE 开发变得更容易使用，通过启用基于 POJO 编程模型来促进良好的编程实践。</p></blockquote><h3 id="2-Spring-家族"><a href="#2-Spring-家族" class="headerlink" title="2. Spring 家族"></a>2. Spring 家族</h3><p>​<strong>项目列表：<a href="https://spring.io/projects">https://spring.io/projects</a></strong></p><h3 id="3-Spring-Framework"><a href="#3-Spring-Framework" class="headerlink" title="3. Spring Framework"></a>3. Spring Framework</h3><p>​<strong>Spring 基础框架，可以视为 Spring 基础设施，基本上任何其他 Spring 项目都是以 Spring Framework 为基础的。</strong></p><h4 id="3-1-Spring-Framework-特性"><a href="#3-1-Spring-Framework-特性" class="headerlink" title="3.1 Spring Framework 特性"></a>3.1 Spring Framework 特性</h4><ul><li><p><strong>非侵入式：使用 Spring Framework 开发应用程序时，Spring 对应用程序本身的结构影响非常小。对领域模型可以做到零污染；对功能性组件也只需要使用几个简单的注解进行标记，完全不会破坏原有结构，反而能将组件结构进一步简化。这就使得基于 Spring Framework 开发应用程序时结构清晰、简洁优雅。</strong></p></li><li><p><strong><font style="color:red">控制反转：IOC(Inversion of Control)</font>，翻转资源获取方向。把自己创建资源、向环境索取资源变成环境将资源准备好，我们享受资源注入。</strong></p></li><li><p><strong><font style="color:red">面向切面编程：AOP(Aspect Oriented Programming)</font>，在不修改源代码的基础上增强代码功能。</strong></p></li><li><p><strong>容器：Spring IOC 是一个容器，因为它包含并且管理组件对象的生命周期。组件享受到了容器化的管理，替程序员屏蔽了组件创建过程中的大量细节，极大的降低了使用门槛，大幅度提高了开发效率。</strong></p></li><li><p><strong>组件化：Spring 实现了使用简单的组件配置组合成一个复杂的应用。在 Spring 中可以使用 XML 和 Java 注解组合这些对象。这使得我们可以基于一个个功能明确、边界清晰的组件有条不紊的搭建超大型复杂应用系统。</strong></p></li><li><p><strong>声明式：很多以前需要编写代码才能实现的功能，现在只需要声明需求即可由框架代为实现。</strong></p></li><li><p><strong>一站式：在 IOC 和 AOP 的基础上可以整合各种企业应用的开源框架和优秀的第三方类库。而且 Spring 旗下的项目已经覆盖了广泛领域，很多方面的功能性需求可以在 Spring Framework 的基础上全部使用 Spring 来实现。</strong></p></li></ul><h4 id="3-2-Spring-Framework-五大功能模块"><a href="#3-2-Spring-Framework-五大功能模块" class="headerlink" title="3.2 Spring Framework 五大功能模块"></a>3.2 Spring Framework 五大功能模块</h4><table><thead><tr><th align="center"><strong>功能模块</strong></th><th align="left"><strong>功能介绍</strong></th></tr></thead><tbody><tr><td align="center"><strong>Core Container</strong></td><td align="left"><strong>核心容器，在 Spring 环境下使用任何功能都必须基于 IOC 容器。</strong></td></tr><tr><td align="center"><strong>AOP&amp;Aspects</strong></td><td align="left"><strong>面向切面编程</strong></td></tr><tr><td align="center"><strong>Testing</strong></td><td align="left"><strong>提供了对 junit 或 TestNG 测试框架的整合。</strong></td></tr><tr><td align="center"><strong>Data Access&#x2F;Integration</strong></td><td align="left"><strong>提供了对数据访问&#x2F;集成的功能。</strong></td></tr><tr><td align="center"><strong>Spring MVC</strong></td><td align="left"><strong>提供了面向Web应用程序的集成功能。</strong></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Spring教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring5 </tag>
            
            <tag> Java应用程序开发框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven3概述</title>
      <link href="/posts/71B2A9D9.html"/>
      <url>/posts/71B2A9D9.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Maven3/20230406221142.png"></p><hr><h2 id="1-Why？为什么要学Maven？"><a href="#1-Why？为什么要学Maven？" class="headerlink" title="1. Why？为什么要学Maven？"></a>1. Why？为什么要学Maven？</h2><h3 id="1-1-Maven作为依赖管理工具"><a href="#1-1-Maven作为依赖管理工具" class="headerlink" title="1.1 Maven作为依赖管理工具"></a>1.1 Maven作为依赖管理工具</h3><h4 id="1-1-1-jar-包的规模"><a href="#1-1-1-jar-包的规模" class="headerlink" title="1.1.1 jar 包的规模"></a>1.1.1 jar 包的规模</h4><p><strong>随着我们使用越来越多的框架，或者框架封装程度越来越高，项目中使用的jar包也越来越多。项目中，一个模块里面用到上百个jar包是非常正常的。</strong></p><p><strong>比如下面的例子，我们只用到 SpringBoot、SpringCloud 框架中的三个功能：</strong></p><ul><li><strong>Nacos 服务注册发现</strong></li><li><strong>Web 框架环境</strong></li><li><strong>视图模板技术 Thymeleaf</strong></li></ul><p><strong>最终却导入了 106 个 jar 包：</strong></p><blockquote><p>org.springframework.security:spring-security-rsa:jar:1.0.9.RELEASE:compile<br>com.netflix.ribbon: ribbon:jar:2.3.0:compile<br>org.springframework.boot:spring-boot-starter-thymeleaf:jar:2.3.6.RELEASE:compile<br>commons-configuration:commons-configuration:jar:1.8:compile<br>org.apache.logging.log4j:log4j-api:jar:2.13.3:compile<br>org.springframework:spring-beans:jar:5.2.11.RELEASE:compile<br>org.springframework.cloud:spring-cloud-starter-netflix-ribbon:jar:2.2.6.RELEASE:compile<br>org.apache.tomcat.embed:tomcat-embed-websocket:jar:9.0.39:compile<br>com.alibaba.cloud:spring-cloud-alibaba-commons:jar:2.2.6.RELEASE:compile<br>org.bouncycastle:bcprov-jdk15on:jar:1.64:compile<br>org.springframework.security:spring-security-crypto:jar:5.3.5.RELEASE:compile<br>org.apache.httpcomponents:httpasyncclient:jar:4.1.4:compile<br>com.google.j2objc:j2objc-annotations:jar:1.3:compile<br>com.fasterxml.jackson.core:jackson-databind:jar:2.11.3:compile<br>io.reactivex:rxjava:jar:1.3.8:compile<br>ch.qos.logback:logback-classic:jar:1.2.3:compile<br>org.springframework:spring-web:jar:5.2.11.RELEASE:compile<br>io.reactivex:rxnetty-servo:jar:0.4.9:runtime<br>org.springframework:spring-core:jar:5.2.11.RELEASE:compile<br>io.github.openfeign.form:feign-form-spring:jar:3.8.0:compile<br>io.github.openfeign.form:feign-form:jar:3.8.0:compile<br>com.netflix.ribbon:ribbon-loadbalancer:jar:2.3.0:compile<br>org.apache.httpcomponents:httpcore:jar:4.4.13:compile<br>org.thymeleaf.extras:thymeleaf-extras-java8time:jar:3.0.4.RELEASE:compile<br>org.slf4j:jul-to-slf4j:jar:1.7.30:compile<br>com.atguigu.demo:demo09-base-entity:jar:1.0-SNAPSHOT:compile<br>org.yaml:snakeyaml:jar:1.26:compile<br>org.springframework.boot:spring-boot-starter-logging:jar:2.3.6.RELEASE:compile<br>io.reactivex:rxnetty-contexts:jar:0.4.9:runtime<br>org.apache.httpcomponents:httpclient:jar:4.5.13:compile<br>io.github.openfeign:feign-core:jar:10.10.1:compile<br>org.springframework.boot:spring-boot-starter-aop:jar:2.3.6.RELEASE:compile<br>org.hdrhistogram:HdrHistogram:jar:2.1.9:compile<br>org.springframework:spring-context:jar:5.2.11.RELEASE:compile<br>commons-lang:commons-lang:jar:2.6:compile<br>io.prometheus:simpleclient:jar:0.5.0:compile<br>ch.qos.logback:logback-core:jar:1.2.3:compile<br>org.springframework:spring-webmvc:jar:5.2.11.RELEASE:compile<br>com.sun.jersey:jersey-core:jar:1.19.1:runtime<br>javax.ws.rs:jsr311-api:jar:1.1.1:runtime<br>javax.inject:javax.inject:jar:1:runtime<br>org.springframework.cloud:spring-cloud-openfeign-core:jar:2.2.6.RELEASE:compile<br>com.netflix.ribbon:ribbon-core:jar:2.3.0:compilecom.netflix.hystrix:hystrix-core:jar:1.5.18:compilecom.netflix.ribbon:ribbon-transport:jar:2.3.0:runtime<br>org.springframework.boot:spring-boot-starter-json:jar:2.3.6.RELEASE:compile<br>org.springframework.cloud:spring-cloud-starter-openfeign:jar:2.2.6.RELEASE:compile<br>com.fasterxml.jackson.module:jackson-module-parameter-names:jar:2.11.3:compile<br>com.sun.jersey.contribs:jersey-apache-client4:jar:1.19.1:runtime<br>io.github.openfeign:feign-hystrix:jar:10.10.1:compile<br>io.github.openfeign:feign-slf4j:jar:10.10.1:compile<br>com.alibaba.nacos:nacos-client:jar:1.4.2:compile<br>org.apache.httpcomponents:httpcore-nio:jar:4.4.13:compile<br>com.sun.jersey:jersey-client:jar:1.19.1:runtime<br>org.springframework.cloud:spring-cloud-context:jar:2.2.6.RELEASE:compile<br>org.glassfish:jakarta.el:jar:3.0.3:compile<br>org.apache.logging.log4j:log4j-to-slf4j:jar:2.13.3:compile<br>com.fasterxml.jackson.datatype:jackson-datatype-jsr310:jar:2.11.3:compile<br>org.springframework.cloud:spring-cloud-commons:jar:2.2.6.RELEASE:compile<br>org.aspectj:aspectjweaver:jar:1.9.6:compile<br>com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:jar:2.2.6.RELEASE:compile<br>com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava:compile<br>com.alibaba.spring:spring-context-support:jar:1.0.10:compile<br>jakarta.annotation:jakarta.annotation-api:jar:1.3.5:compile<br>org.bouncycastle:bcpkix-jdk15on:jar:1.64:compile<br>com.netflix.netflix-commons:netflix-commons-util:jar:0.3.0:runtime<br>com.fasterxml.jackson.core:jackson-annotations:jar:2.11.3:compile<br>com.google.guava:guava:jar:29.0-jre:compile<br>com.google.guava:failureaccess:jar:1.0.1:compile<br>org.springframework.boot:spring-boot:jar:2.3.6.RELEASE:compile<br>com.fasterxml.jackson.datatype:jackson-datatype-jdk8:jar:2.11.3:compile<br>com.atguigu.demo:demo08-base-api:jar:1.0-SNAPSHOT:compile<br>org.springframework.cloud:spring-cloud-starter-netflix-archaius:jar:2.2.6.RELEASE:compile<br>org.springframework.boot:spring-boot-autoconfigure:jar:2.3.6.RELEASE:compile<br>org.slf4j:slf4j-api:jar:1.7.30:compile<br>commons-io:commons-io:jar:2.7:compile<br>org.springframework.cloud:spring-cloud-starter:jar:2.2.6.RELEASE:compile<br>org.apache.tomcat.embed:tomcat-embed-core:jar:9.0.39:compile<br>io.reactivex:rxnetty:jar:0.4.9:runtime<br>com.fasterxml.jackson.core:jackson-core:jar:2.11.3:compile<br>com.google.code.findbugs:jsr305:jar:3.0.2:compile<br>com.netflix.archaius:archaius-core:jar:0.7.6:compile<br>org.springframework.boot:spring-boot-starter-web:jar:2.3.6.RELEASE:compile<br>commons-codec:commons-codec:jar:1.14:compile<br>com.netflix.servo:servo-core:jar:0.12.21:runtime<br>com.google.errorprone:error_prone_annotations:jar:2.3.4:compile<br>org.attoparser:attoparser:jar:2.0.5.RELEASE:compile<br>com.atguigu.demo:demo10-base-util:jar:1.0-SNAPSHOT:compile<br>org.checkerframework:checker-qual:jar:2.11.1:compile<br>org.thymeleaf:thymeleaf-spring5:jar:3.0.11.RELEASE:compile<br>commons-fileupload:commons-fileupload:jar:1.4:compile<br>com.netflix.ribbon:ribbon-httpclient:jar:2.3.0:compile<br>com.netflix.netflix-commons:netflix-statistics:jar:0.1.1:runtime<br>org.unbescape:unbescape:jar:1.1.6.RELEASE:compile<br>org.springframework:spring-jcl:jar:5.2.11.RELEASE:compile<br>com.alibaba.nacos:nacos-common:jar:1.4.2:compile<br>commons-collections:commons-collections:jar:3.2.2:runtime<br>javax.persistence:persistence-api:jar:1.0:compile<br>com.alibaba.nacos:nacos-api:jar:1.4.2:compileorg.thymeleaf:thymeleaf:jar:3.0.11.RELEASE:compile<br>org.springframework:spring-aop:jar:5.2.11.RELEASE:compile<br>org.springframework.boot:spring-boot-starter:jar:2.3.6.RELEASE:compile<br>org.springframework.boot:spring-boot-starter-tomcat:jar:2.3.6.RELEASE:compile<br>org.springframework.cloud:spring-cloud-netflix-ribbon:jar:2.2.6.RELEASE:compile<br>org.springframework:spring-expression:jar:5.2.11.RELEASE:compile<br>org.springframework.cloud:spring-cloud-netflix-archaius:jar:2.2.6.RELEASE:compile</p></blockquote><p>​<strong>而如果使用 Maven 来引入这些 jar 包只需要配置三个『<font style="color:red">依赖</font>』：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Nacos 服务注册发现启动器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- web启动器依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 视图模板技术 thymeleaf --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-1-2-jar-包的来源"><a href="#1-1-2-jar-包的来源" class="headerlink" title="1.1.2 jar 包的来源"></a>1.1.2 jar 包的来源</h4><ul><li><strong>这个jar包所属技术的官网。官网通常是英文界面，网站的结构又不尽相同，甚至找到下载链接还发现需要通过特殊的工具下载。</strong></li><li><strong>第三方网站提供下载。问题是不规范，在使用过程中会出现各种问题。</strong><ul><li><strong>jar包的名称</strong></li><li><strong>jar包的版本</strong></li><li><strong>jar包内的具体细节</strong></li></ul></li><li><strong>而使用 Maven 后，依赖对应的 jar 包能够<font style="color:red">自动下载</font>，方便、快捷又规范。</strong></li></ul><h4 id="1-1-3-jar-包之间的依赖关系"><a href="#1-1-3-jar-包之间的依赖关系" class="headerlink" title="1.1.3 jar 包之间的依赖关系"></a>1.1.3 jar 包之间的依赖关系</h4><p>​<strong>框架中使用的 jar 包，不仅数量庞大，而且彼此之间存在错综复杂的依赖关系。依赖关系的复杂程度，已经上升到了完全不能靠人力手动解决的程度。另外，jar 包之间有可能产生冲突。进一步增加了我们在 jar 包使用过程中的难度。</strong></p><p>​<strong>下面是前面例子中 jar 包之间的依赖关系：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Maven3/chapter01/20230406221401.png"></p><p>​<strong>而实际上 jar 包之间的依赖关系是普遍存在的，如果要由程序员手动梳理无疑会增加极高的学习成本，而这些工作又对实现业务功能毫无帮助。</strong></p><p>​<strong>而使用 Maven 则几乎不需要管理这些关系，极个别的地方调整一下即可，极大的减轻了我们的工作量。</strong></p><h3 id="1-2-Maven-作为构建管理工具"><a href="#1-2-Maven-作为构建管理工具" class="headerlink" title="1.2 Maven 作为构建管理工具"></a>1.2 Maven 作为构建管理工具</h3><h4 id="1-2-1-你没有注意过的构建"><a href="#1-2-1-你没有注意过的构建" class="headerlink" title="1.2.1 你没有注意过的构建"></a>1.2.1 你没有注意过的构建</h4><p><strong>你可以不使用 Maven，但是构建必须要做。当我们使用 IDEA 进行开发时，构建是 IDEA 替我们做的。</strong></p><h4 id="1-2-2-脱离-IDE-环境仍需构建"><a href="#1-2-2-脱离-IDE-环境仍需构建" class="headerlink" title="1.2.2 脱离 IDE 环境仍需构建"></a>1.2.2 脱离 IDE 环境仍需构建</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Maven3/chapter01/image-20230406221439908.png" alt="image-20230406221439908"></p><h3 id="1-3-结论"><a href="#1-3-结论" class="headerlink" title="1.3 结论"></a>1.3 结论</h3><ul><li><strong>管理规模庞大的 jar 包，需要<font style="color:red">专门</font>工具。</strong></li><li><strong>脱离 IDE 环境执行构建操作，需要<font style="color:red">专门</font>工具。</strong></li></ul><h2 id="2-What？什么是Maven？"><a href="#2-What？什么是Maven？" class="headerlink" title="2. What？什么是Maven？"></a>2. What？什么是Maven？</h2><p>​<strong>Maven 是 Apache 软件基金会组织维护的一款专门为 Java 项目提供<font style="color:red">构建</font>和<font style="color:red">依赖</font>管理支持的工具。</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Maven3/chapter01/image-20230406221510999.png" alt="image-20230406221510999"></p><h3 id="2-1-构建"><a href="#2-1-构建" class="headerlink" title="2.1 构建"></a>2.1 构建</h3><p><strong>Java 项目开发过程中，构建指的是使用『<font style="color:red">原材料生产产品</font>』的过程。</strong></p><ul><li><strong>原材料</strong><ul><li><strong>Java 源代码</strong></li><li><strong>基于 HTML 的 Thymeleaf 文件</strong></li><li><strong>图片</strong></li><li><strong>配置文件</strong></li><li><strong>……</strong></li></ul></li><li><strong>产品</strong><ul><li><strong>一个可以在服务器上运行的项目</strong></li></ul></li></ul><p><strong>构建过程包含的主要的环节：</strong></p><ul><li><strong>清理：删除上一次构建的结果，为下一次构建做好准备</strong></li><li>*<em>编译：Java 源程序编译成 <em>.class 字节码文件</em></em></li><li><strong>测试：运行提前准备好的测试程序</strong></li><li><strong>报告：针对刚才测试的结果生成一个全面的信息</strong></li><li><strong>打包</strong><ul><li><strong>Java工程：jar 包</strong></li><li><strong>Web工程：war 包</strong></li></ul></li><li><strong>安装：把一个  Maven 工程经过打包操作生成的  jar 包或 war 包存入 Maven 的本地仓库</strong></li><li><strong>部署</strong><ul><li><strong>部署 jar 包：把一个 jar 包部署到 Nexus 私服服务器上</strong></li><li><strong>部署 war 包：借助相关 Maven 插件（例如 cargo），将 war 包部署到 Tomcat 服务器上</strong></li></ul></li></ul><h3 id="2-2-依赖"><a href="#2-2-依赖" class="headerlink" title="2.2 依赖"></a>2.2 依赖</h3><p><strong>如果 A 工程里面用到了 B 工程的类、接口、配置文件等等这样的资源，那么我们就可以说 A 依赖 B。例如：</strong></p><ul><li><strong>junit-4.12 依赖 hamcrest-core-1.3</strong></li><li><strong>thymeleaf-3.0.12.RELEASE 依赖 ognl-3.1.26</strong><ul><li><strong>ognl-3.1.26 依赖 javassist-3.20.0-GA</strong></li></ul></li><li><strong>thymeleaf-3.0.12.RELEASE 依赖 attoparser-2.0.5.RELEASE</strong></li><li><strong>thymeleaf-3.0.12.RELEASE 依赖 unbescape-1.1.6.RELEASE</strong></li><li><strong>thymeleaf-3.0.12.RELEASE 依赖 slf4j-api-1.7.26</strong></li></ul><p><strong>依赖管理中要解决的具体问题：</strong></p><ul><li><strong>jar 包的下载：使用 Maven 之后，jar 包会从规范的远程仓库下载到本地</strong></li><li><strong>jar 包之间的依赖：通过依赖的传递性自动完成</strong></li><li><strong>jar 包之间的冲突：通过对依赖的配置进行调整，让某些jar包不会被导入</strong></li></ul><h3 id="2-3-Maven-的工作机制"><a href="#2-3-Maven-的工作机制" class="headerlink" title="2.3 Maven 的工作机制"></a>2.3 Maven 的工作机制</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/Maven3/chapter01/20230406221619.png"></p>]]></content>
      
      
      <categories>
          
          <category> Maven3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven3 </tag>
            
            <tag> 依赖管理工具 </tag>
            
            <tag> 构建管理工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisX插件</title>
      <link href="/posts/A6F034DA.html"/>
      <url>/posts/A6F034DA.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><blockquote><p>MyBatis-Plus为我们提供了强大的mapper和service模板，能够大大的提高开发效率<br>但是在真正开发过程中，MyBatis-Plus并不能为我们解决所有问题，例如一些复杂的SQL，多表<br>联查，我们就需要自己去编写代码和 SQL 语句，我们该如何快速的解决这个问题呢，这个时候可以使用 MyBatisX 插件<br>MyBatisX一款基于 IDEA 的快速开发插件，为效率而生。</p></blockquote><p><strong>MyBatisX插件用法：<a href="https://baomidou.com/pages/ba5b24/">https://baomidou.com/pages/ba5b24/</a></strong></p><h3 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1. 步骤"></a>1. 步骤</h3><h4 id="1-1-安装插件"><a href="#1-1-安装插件" class="headerlink" title="1.1 安装插件"></a>1.1 安装插件</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214257518.png" alt="image-20230406214257518"></p><h4 id="1-2-重启-IDEA"><a href="#1-2-重启-IDEA" class="headerlink" title="1.2 重启 IDEA"></a>1.2 重启 IDEA</h4><h3 id="2-定位操作"><a href="#2-定位操作" class="headerlink" title="2. 定位操作"></a>2. 定位操作</h3><blockquote><p>配置一个映射文件</p></blockquote><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/20230406214455.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/20230406214606.png"></p><h3 id="3-代码快速生成"><a href="#3-代码快速生成" class="headerlink" title="3. 代码快速生成"></a>3. 代码快速生成</h3><h4 id="3-1-新建工程"><a href="#3-1-新建工程" class="headerlink" title="3.1 新建工程"></a>3.1 新建工程</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/20230406214659.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214716343.png" alt="image-20230406214716343"></p><h4 id="3-2-引入依赖"><a href="#3-2-引入依赖" class="headerlink" title="3.2 引入依赖"></a>3.2 引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  mybatis-plus 启动器      --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">&lt;!--  lombok 用于简化实体类开发      --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">&lt;!--   mysql 驱动     --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-配置-yml-文件"><a href="#3-3-配置-yml-文件" class="headerlink" title="3.3 配置 yml 文件"></a>3.3 配置 yml 文件</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment"># 配置连接数据库信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><h4 id="3-4-连接数据库"><a href="#3-4-连接数据库" class="headerlink" title="3.4 连接数据库"></a>3.4 连接数据库</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214813181.png" alt="image-20230406214813181"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214820050.png" alt="image-20230406214820050"></p><h4 id="3-5-配置-MybatisX-Generator"><a href="#3-5-配置-MybatisX-Generator" class="headerlink" title="3.5 配置 MybatisX-Generator"></a>3.5 配置 MybatisX-Generator</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214836441.png" alt="image-20230406214836441"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214840777.png" alt="image-20230406214840777"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214846931.png" alt="image-20230406214846931"></p><h3 id="4-快速生成CRUD"><a href="#4-快速生成CRUD" class="headerlink" title="4. 快速生成CRUD"></a>4. 快速生成CRUD</h3><blockquote><p><strong>既补全了方法，又在映射文件生成对应的 SQL 语句</strong></p></blockquote><h4 id="4-1-增加"><a href="#4-1-增加" class="headerlink" title="4.1 增加"></a>4.1 增加</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214917955.png" alt="image-20230406214917955"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214924009.png" alt="image-20230406214924009"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214929389.png" alt="image-20230406214929389"></p><h4 id="4-2-删除"><a href="#4-2-删除" class="headerlink" title="4.2 删除"></a>4.2 删除</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214945923.png" alt="image-20230406214945923"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214951065.png" alt="image-20230406214951065"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406214958060.png" alt="image-20230406214958060"></p><h4 id="4-3-修改"><a href="#4-3-修改" class="headerlink" title="4.3 修改"></a>4.3 修改</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406215014971.png" alt="image-20230406215014971"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406215019685.png" alt="image-20230406215019685"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406215024341.png" alt="image-20230406215024341"></p><h4 id="4-4-查找"><a href="#4-4-查找" class="headerlink" title="4.4 查找"></a>4.4 查找</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406215038959.png" alt="image-20230406215038959"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406215044031.png" alt="image-20230406215044031"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter10/image-20230406215049305.png" alt="image-20230406215049305"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus多数据源</title>
      <link href="/posts/F7D1B0E9.html"/>
      <url>/posts/F7D1B0E9.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><blockquote><p>适用于多种场景：纯粹多库、  读写分离、  一主多从、  混合模式等</p><p>目前我们就来模拟一个纯粹多库的一个场景，其他场景类似</p><p>场景说明：</p><p>我们创建两个库，分别为：mybatis_plus（以前的库不动）与mybatis_plus_1（新建），将<br>mybatis_plus库的 product 表移动到 mybatis_plus_1 库，这样每个库一张表，通过一个测试用例分别获取用户数据与商品数据，如果获取到说明多库模拟成功</p></blockquote><h3 id="1-创建数据库及表"><a href="#1-创建数据库及表" class="headerlink" title="1. 创建数据库及表"></a>1. 创建数据库及表</h3><blockquote><p>创建数据库 mybatis_plus_1和表 product</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `mybatis_plus_1 <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8mb4 */</span>; </span><br><span class="line">use mybatis_plus_1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product </span><br><span class="line">(</span><br><span class="line">id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>, </span><br><span class="line">price <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;价格&#x27;</span>,</span><br><span class="line">version <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;乐观锁版本号&#x27;</span>, </span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>添加测试数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> product (id, NAME, price) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;外星人笔记本&#x27;</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><blockquote><p>删除 mybatis_plus 库 product 表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mybatis_plus;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> product;</span><br></pre></td></tr></table></figure><h3 id="2-新建工程"><a href="#2-新建工程" class="headerlink" title="2. 新建工程"></a>2. 新建工程</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter09/image-20230406213146315.png" alt="image-20230406213146315"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter09/image-20230406213152178.png" alt="image-20230406213152178"></p><h3 id="3-引入依赖"><a href="#3-引入依赖" class="headerlink" title="3. 引入依赖"></a>3. 引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  mybatis-plus 启动器      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--  lombok 用于简化实体类开发      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--   mysql 驱动     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-配置多个数据源"><a href="#4-配置多个数据源" class="headerlink" title="4. 配置多个数据源"></a>4. 配置多个数据源</h3><blockquote><p>说明：注释掉之前的数据库连接，添加新配置</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">dynamic:</span></span><br><span class="line">      <span class="attr">primary:</span> <span class="string">master</span> <span class="comment">#设置默认的数据源或者数据源组,默认值即为master</span></span><br><span class="line">      <span class="attr">strict:</span> <span class="literal">false</span> <span class="comment">#严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源</span></span><br><span class="line">      <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">master:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span> <span class="comment"># 3.2.0开始支持SPI可省略此配置</span></span><br><span class="line">        <span class="attr">slave_1:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus_1?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">          <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">          <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment">#        slave_2:</span></span><br><span class="line"><span class="comment">#          url: ENC(xxxxx) # 内置加密,使用请查看详细文档</span></span><br><span class="line"><span class="comment">#          username: ENC(xxxxx)</span></span><br><span class="line"><span class="comment">#          password: ENC(xxxxx)</span></span><br><span class="line"><span class="comment">#          driver-class-name: com.mysql.jdbc.Driver</span></span><br><span class="line">        <span class="comment">#......省略</span></span><br><span class="line">        <span class="comment">#以上会配置一个默认库master，一个组slave下有两个子库slave_1,slave_2</span></span><br></pre></td></tr></table></figure><h3 id="5-新建实体类"><a href="#5-新建实体类" class="headerlink" title="5. 新建实体类"></a>5. 新建实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line">    <span class="meta">@TableField(&quot;username&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Integer isDeleted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-新建-Mapper-接口"><a href="#6-新建-Mapper-接口" class="headerlink" title="6. 新建 Mapper 接口"></a>6. 新建 Mapper 接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductMappr</span>  <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Product&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-配置启动类"><a href="#7-配置启动类" class="headerlink" title="7. 配置启动类"></a>7. 配置启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.mybatisplus.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusDatasourceApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MybatisPlusDatasourceApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-创建用户接口和接口实现类"><a href="#8-创建用户接口和接口实现类" class="headerlink" title="8. 创建用户接口和接口实现类"></a>8. 创建用户接口和接口实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span>  <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@DS(&quot;master&quot;)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-创建商品接口和接口实现类"><a href="#9-创建商品接口和接口实现类" class="headerlink" title="9. 创建商品接口和接口实现类"></a>9. 创建商品接口和接口实现类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductService</span>  <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Product&gt; &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@DS(&quot;slave_1&quot;)</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceImpl</span>  <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ProductMappr, Product&gt; <span class="keyword">implements</span> <span class="title class_">ProductService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-测试"><a href="#10-测试" class="headerlink" title="10. 测试"></a>10. 测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserService userService; </span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ProductService productService; </span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDynamicDataSource</span><span class="params">()</span>&#123;</span><br><span class="line">   System.out.println(userService.getById(<span class="number">1L</span>)); </span><br><span class="line">   System.out.println(productService.getById(<span class="number">1L</span>)); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter09/image-20230406213446053.png" alt="image-20230406213446053"></p><blockquote><p>结果：<br>1、都能顺利获取对象，则测试成功<br>2、如果我们实现读写分离，将写操作方法加上主库数据源，读操作方法加上从库数据源，自动切换，是不是就能实现读写分离？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus代码生成器-新</title>
      <link href="/posts/B0359A72.html"/>
      <url>/posts/B0359A72.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><h3 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1. 引入依赖"></a>1. 引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-快速生成"><a href="#2-快速生成" class="headerlink" title="2. 快速生成"></a>2. 快速生成</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FastAutoGeneratorTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        FastAutoGenerator.create(</span><br><span class="line">                <span class="string">&quot;jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;123456&quot;</span>)</span><br><span class="line">                .globalConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.author(<span class="string">&quot;linchenxi&quot;</span>) <span class="comment">// 设置作者</span></span><br><span class="line">                            <span class="comment">// .enableSwagger() // 开启 swagger 模式</span></span><br><span class="line">                            .fileOverride() <span class="comment">// 覆盖已生成文件</span></span><br><span class="line">                            .outputDir(<span class="string">&quot;E://my_Develop_Notes//MyBatisPlus2022//work-space//mybatis_plus&quot;</span>); <span class="comment">// 指定输出目录</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .packageConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.parent(<span class="string">&quot;com.atguigu&quot;</span>) <span class="comment">// 设置父包名</span></span><br><span class="line">                            .moduleName(<span class="string">&quot;mybatisplus&quot;</span>) <span class="comment">// 设置父包模块名</span></span><br><span class="line">                            .pathInfo(Collections.singletonMap(OutputFile.mapperXml, <span class="string">&quot;E://my_Develop_Notes//MyBatisPlus2022//work-space//mybatis_plus&quot;</span>)); <span class="comment">// 设置mapperXml生成路径</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .strategyConfig(builder -&gt; &#123;</span><br><span class="line">                    builder.addInclude(<span class="string">&quot;t_user&quot;</span>) <span class="comment">// 设置需要生成的表名</span></span><br><span class="line">                            .addTablePrefix(<span class="string">&quot;t_&quot;</span>, <span class="string">&quot;c_&quot;</span>); <span class="comment">// 设置过滤表前缀</span></span><br><span class="line">                &#125;)</span><br><span class="line">                .templateEngine(<span class="keyword">new</span> <span class="title class_">FreemarkerTemplateEngine</span>()) <span class="comment">// 使用Freemarker引擎模板，默认的是Velocity引擎模板</span></span><br><span class="line">                .execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-运行结果"><a href="#3-运行结果" class="headerlink" title="3. 运行结果"></a>3. 运行结果</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter08/image-20230406212806477.png" alt="image-20230406212806477"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter08/image-20230406212811935.png" alt="image-20230406212811935"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus通用枚举</title>
      <link href="/posts/E9A76C4F.html"/>
      <url>/posts/E9A76C4F.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><blockquote><p>表中的有些字段值是固定的，例如性别（男或女），此时我们可以使用 MyBatis -Plus 的通用枚举来实现</p></blockquote><h3 id="1-数据库表添加字段-sex"><a href="#1-数据库表添加字段-sex" class="headerlink" title="1. 数据库表添加字段 sex"></a>1. 数据库表添加字段 sex</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter07/image-20230406212254981.png" alt="image-20230406212254981"></p><h3 id="2-创建通用枚举类型"><a href="#2-创建通用枚举类型" class="headerlink" title="2. 创建通用枚举类型"></a>2. 创建通用枚举类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.mybatisplus.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SexEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    MALE(<span class="number">1</span>,<span class="string">&quot;男&quot;</span>),</span><br><span class="line">    FEMALE(<span class="number">2</span>,<span class="string">&quot;女&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@EnumValue</span><span class="comment">//将注解所标识的属性的值存储到数据库中</span></span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line">    <span class="keyword">private</span> String sexName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    SexEnum(Integer sex, String sexName)&#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        <span class="built_in">this</span>.sexName = sexName;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-补充实体类信息"><a href="#3-补充实体类信息" class="headerlink" title="3. 补充实体类信息"></a>3. 补充实体类信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">// 设置实体类对应的表名</span></span><br><span class="line"><span class="comment">// @TableName(&quot;t_user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// @TableId(&quot;uid&quot;)</span></span><br><span class="line">    <span class="comment">// 将属性所对应的字段指定为主键</span></span><br><span class="line">    <span class="comment">// @TableId注解的 value 属性用于指定主键的字段</span></span><br><span class="line">    <span class="comment">// @TableId注解的 type 属性设置主键生成策略</span></span><br><span class="line">    <span class="comment">// @TableId(value = &quot;uid&quot;,type = IdType.AUTO)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;uid&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定属性对应的字段名</span></span><br><span class="line">    <span class="meta">@TableField(&quot;username&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SexEnum sex;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Integer isDeleted;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-配置扫描通用枚举"><a href="#4-配置扫描通用枚举" class="headerlink" title="4. 配置扫描通用枚举"></a>4. 配置扫描通用枚举</h3><blockquote><p>官方说不需要配置这个了</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment"># 配置连接数据库信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 配置MyBatis日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mybatis-plus.config-location:</span> <span class="string">classpath:mapper/UserMapper.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus的主键策略</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># 配置类型别名对应的包</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.atguigu.mybatisplus.pojo</span></span><br><span class="line">  <span class="comment">#  配置扫描通用枚举</span></span><br><span class="line">  <span class="attr">type-enums-package:</span> <span class="string">com.atguigu.mybatisplus.enums</span></span><br></pre></td></tr></table></figure><h3 id="5-测试"><a href="#5-测试" class="headerlink" title="5. 测试"></a>5. 测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSexEnum</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;Enum&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">20</span>);</span><br><span class="line">        <span class="comment">//设置性别信息为枚举项，会将@EnumValue注解所标识的属性值存储到数据库</span></span><br><span class="line">        user.setSex(SexEnum.MALE);</span><br><span class="line">        <span class="comment">// INSERT INTO t_user ( username, age, sex ) VALUES ( ?, ?, ? )</span></span><br><span class="line">        <span class="comment">// Parameters: Enum(String), 20(Integer), 1(Integer)</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;影响行数：&quot;</span> + result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="6-运行结果"><a href="#6-运行结果" class="headerlink" title="6. 运行结果"></a>6. 运行结果</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter07/20230406212458.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter07/20230406212525.png"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus插件</title>
      <link href="/posts/A5F6C823.html"/>
      <url>/posts/A5F6C823.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><h3 id="1-分页插件"><a href="#1-分页插件" class="headerlink" title="1. 分页插件"></a>1. 分页插件</h3><blockquote><p>MyBatis Plus 自带分页插件，只要简单的配置即可实现分页功能</p></blockquote><h4 id="1-1-添加配置类"><a href="#1-1-添加配置类" class="headerlink" title="1.1 添加配置类"></a>1.1 添加配置类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.mybatisplus.mapper&quot;)</span> <span class="comment">//可以将主类中的注解移到此处</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">mybatisPlusInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line"></span><br><span class="line">        mybatisPlusInterceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mybatisPlusInterceptor;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-测试"><a href="#1-2-测试" class="headerlink" title="1.2 测试"></a>1.2 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPage</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//SELECT COUNT(*) AS total FROM t_user WHERE is_deleted = 0</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置分页参数</span></span><br><span class="line">        Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">        userMapper.selectPage(page,<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取分页数据</span></span><br><span class="line">        List&lt;User&gt; list = page.getRecords();</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;当前页: &quot;</span> + page.getCurrent());</span><br><span class="line">        System.out.println(<span class="string">&quot;每页显示的条数: &quot;</span> + page.getSize());</span><br><span class="line">        System.out.println(<span class="string">&quot;总记录数: &quot;</span> + page.getTotal());</span><br><span class="line">        System.out.println(<span class="string">&quot;总页数: &quot;</span> + page.getPages());</span><br><span class="line">        System.out.println(<span class="string">&quot;是否有上一页: &quot;</span> + page.hasPrevious());</span><br><span class="line">        System.out.println(<span class="string">&quot;是否有下一页: &quot;</span> + page.hasNext());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-运行结果"><a href="#1-3-运行结果" class="headerlink" title="1.3 运行结果"></a>1.3 运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406210136957.png" alt="image-20230406210136957"></p><h3 id="2-xml-自定义分页"><a href="#2-xml-自定义分页" class="headerlink" title="2. xml 自定义分页"></a>2. xml 自定义分页</h3><h4 id="2-1-UserMapper-中定义接口方法"><a href="#2-1-UserMapper-中定义接口方法" class="headerlink" title="2.1 UserMapper 中定义接口方法"></a>2.1 UserMapper 中定义接口方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> page: MyBatis-Plus 提供的分页对象,xml中可以从里面进行取值,传递参数 Page即自动分页,必须放在第一位</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> age:</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> Page&lt;User&gt;</span></span><br><span class="line"><span class="comment">   * TODO</span></span><br><span class="line"><span class="comment">   * 根据年龄查询用户列表，分页显示</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  Page&lt;User&gt; <span class="title function_">selectPageVo</span><span class="params">(<span class="meta">@Param(&quot;page&quot;)</span> Page&lt;User&gt; page, <span class="meta">@Param(&quot;age&quot;)</span> Integer age)</span>;</span><br></pre></td></tr></table></figure><h4 id="2-2-设置类名别名"><a href="#2-2-设置类名别名" class="headerlink" title="2.2 设置类名别名"></a>2.2 设置类名别名</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment"># 配置连接数据库信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 配置MyBatis日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mybatis-plus.config-location:</span> <span class="string">classpath:mapper/UserMapper.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus的主键策略</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># 配置类型别名对应的包</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.atguigu.mybatisplus.pojo</span></span><br></pre></td></tr></table></figure><h4 id="2-3-UserMapper-xml-中编写-SQL"><a href="#2-3-UserMapper-xml-中编写-SQL" class="headerlink" title="2.3 UserMapper.xml 中编写 SQL"></a>2.3 UserMapper.xml 中编写 SQL</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">      <span class="comment">&lt;!--SQL片段，记录基础字段--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;BaseColumns&quot;</span>&gt;</span>uid,username,age,email<span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    IPage&lt;User&gt; selectPageVo(@Param(&quot;page&quot;) Page&lt;User&gt; page,@Param(&quot;age&quot;) Integer age);--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPageVo&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BaseColumns&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span> from t_user where age &gt; #&#123;age&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4-测试"><a href="#2-4-测试" class="headerlink" title="2.4 测试"></a>2.4 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectPageVo</span><span class="params">()</span>&#123;</span><br><span class="line"> <span class="comment">// SELECT COUNT(*) AS total FROM t_user WHERE age &gt; ?</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置分页参数</span></span><br><span class="line">        Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">        userMapper.selectPageVo(page,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取分页数据</span></span><br><span class="line">        List&lt;User&gt; list = page.getRecords();</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;当前页: &quot;</span> + page.getCurrent());</span><br><span class="line">        System.out.println(<span class="string">&quot;每页显示的条数: &quot;</span> + page.getSize());</span><br><span class="line">        System.out.println(<span class="string">&quot;总记录数: &quot;</span> + page.getTotal());</span><br><span class="line">        System.out.println(<span class="string">&quot;总页数: &quot;</span> + page.getPages());</span><br><span class="line">        System.out.println(<span class="string">&quot;是否有上一页: &quot;</span> + page.hasPrevious());</span><br><span class="line">        System.out.println(<span class="string">&quot;是否有下一页: &quot;</span> + page.hasNext());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-5-运行结果"><a href="#2-5-运行结果" class="headerlink" title="2.5 运行结果"></a>2.5 运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406210159709.png" alt="image-20230406210159709"></p><h3 id="3-乐观锁"><a href="#3-乐观锁" class="headerlink" title="3. 乐观锁"></a>3. 乐观锁</h3><h4 id="3-1-场景"><a href="#3-1-场景" class="headerlink" title="3.1 场景"></a>3.1 场景</h4><blockquote><p>一件商品，成本价是80元，售价是100元。老板先是通知小李，说你去把商品价格增加50元。小<br>李正在玩游戏，耽搁了一个小时。正好一个小时后，老板觉得商品价格增加到150元，价格太<br>高，可能会影响销量。又通知小王，你把商品价格降低30元。</p><p>此时，小李和小王同时操作商品后台系统。小李操作的时候，系统先取出商品价格100元；小王<br>也在操作，取出的商品价格也是100元。小李将价格加了50元，并将100+50&#x3D;150元存入了数据<br>库；小王将商品减了30元，并将100-30&#x3D;70元存入了数据库。是的，如果没有锁，小李的操作就<br>完全被小王的覆盖了。</p><p>现在商品价格是70元，比成本价低10元。几分钟后，这个商品很快出售了1千多件商品，老板亏1 万多。</p></blockquote><h4 id="3-2-乐观锁与悲观锁"><a href="#3-2-乐观锁与悲观锁" class="headerlink" title="3.2 乐观锁与悲观锁"></a>3.2 乐观锁与悲观锁</h4><blockquote><p>上面的故事，如果是乐观锁，小王保存价格前，会检查下价格是否被人修改过了。如果被修改过<br>了，则重新取出的被修改后的价格，150元，这样他会将120元存入数据库。</p><p>如果是悲观锁，小李取出数据后，小王只能等小李操作完之后，才能对价格进行操作，也会保证<br>最终的价格是120元。</p></blockquote><h4 id="3-3-模拟修改冲突"><a href="#3-3-模拟修改冲突" class="headerlink" title="3.3 模拟修改冲突"></a>3.3 模拟修改冲突</h4><blockquote><p><strong>数据库中增加商品表</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_product </span><br><span class="line">(</span><br><span class="line">id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">price <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;价格&#x27;</span>,</span><br><span class="line">VERSION <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;乐观锁版本号&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p><strong>添加数据</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_product (id, NAME, price) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;外星人笔记本&#x27;</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong>表结构</strong></p></blockquote><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406210347115.png" alt="image-20230406210347115"></p><blockquote><p><strong>添加实体类</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="meta">@TableField(&quot;NAME&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line">    <span class="meta">@TableField(&quot;VERSION&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>添加 mapper</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductMapper</span>  <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Product&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>测试</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProduct01</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//     小李查询商品价格</span></span><br><span class="line">    <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product1</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;小李取出的价格：&quot;</span> + product1.getPrice());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//      小王查询商品价格</span></span><br><span class="line">    <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product2</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;小王取出的价格：&quot;</span> + product2.getPrice());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//      小李将价格加了50元，存入了数据库</span></span><br><span class="line">    <span class="comment">//     UPDATE t_product SET NAME=?, price=?, VERSION=? WHERE id=?</span></span><br><span class="line">        product1.setPrice(product1.getPrice() + <span class="number">50</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result1</span> <span class="operator">=</span> productMapper.updateById(product1);</span><br><span class="line">        System.out.println(<span class="string">&quot;小李修改结果：&quot;</span> + result1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//       小王将商品减了30元，存入了数据库</span></span><br><span class="line">    <span class="comment">//     UPDATE t_product SET NAME=?, price=?, VERSION=? WHERE id=?</span></span><br><span class="line">        product2.setPrice(product2.getPrice() - <span class="number">30</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result2</span> <span class="operator">=</span> productMapper.updateById(product2);</span><br><span class="line">        System.out.println(<span class="string">&quot;小王修改结果：&quot;</span> + result2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//       最后的结果</span></span><br><span class="line">    <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product3</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 价格覆盖，最后的结果是：70</span></span><br><span class="line">        System.out.println(<span class="string">&quot;最后的结果：&quot;</span> + product3.getPrice());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>运行结果</strong></p></blockquote><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406210452528.png" alt="image-20230406210452528"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406210458077.png" alt="image-20230406210458077"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406210503013.png" alt="image-20230406210503013"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406210508387.png" alt="image-20230406210508387"></p><h4 id="3-4-乐观锁实现流程"><a href="#3-4-乐观锁实现流程" class="headerlink" title="3.4 乐观锁实现流程"></a>3.4 乐观锁实现流程</h4><ul><li><p><strong>数据库中添加 version 字段。</strong></p></li><li><p><strong>取出记录时，获取当前 version。</strong></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,NAME,price,VERSION from t_product where id = 1;</span><br></pre></td></tr></table></figure><ul><li><strong>更新时，version + 1，如果 where 语句中的 version 版本不对，则更新失败。</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update product set price = price + 50,VERSION = VERSION + 1 where id = 1 AND VERSION = 1;</span><br></pre></td></tr></table></figure><h4 id="3-5-MyBatis-Plus实现乐观锁"><a href="#3-5-MyBatis-Plus实现乐观锁" class="headerlink" title="3.5 MyBatis-Plus实现乐观锁"></a>3.5 MyBatis-Plus实现乐观锁</h4><blockquote><p><strong>修改实体类</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;NAME&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;VERSION&quot;)</span></span><br><span class="line">   <span class="meta">@Version</span><span class="comment">//标识乐观锁版本号字段</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>添加乐观锁插件配置</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.mybatisplus.mapper&quot;)</span> <span class="comment">//可以将主类中的注解移到此处</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加分页插件</span></span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">mybatisPlusInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line"></span><br><span class="line">        mybatisPlusInterceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加乐观锁插件</span></span><br><span class="line">        mybatisPlusInterceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">OptimisticLockerInnerInterceptor</span>());</span><br><span class="line">        <span class="keyword">return</span> mybatisPlusInterceptor;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>测试修改冲突</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProduct02</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//     小李查询商品价格</span></span><br><span class="line">        <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product1</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;小李取出的价格：&quot;</span> + product1.getPrice());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//      小王查询商品价格</span></span><br><span class="line">        <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product2</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;小王取出的价格：&quot;</span> + product2.getPrice());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//      小李修改商品价格，自动将 version+1</span></span><br><span class="line">        <span class="comment">//     UPDATE t_product SET NAME=?, price=?, VERSION=? WHERE id=? AND VERSION=?</span></span><br><span class="line">        product1.setPrice(product1.getPrice() + <span class="number">50</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result1</span> <span class="operator">=</span> productMapper.updateById(product1);</span><br><span class="line">        System.out.println(<span class="string">&quot;小李修改结果：&quot;</span> + result1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//      小王修改商品价格，此时version已更新，条件不成立，修改失败</span></span><br><span class="line">        <span class="comment">//     UPDATE t_product SET NAME=?, price=?, VERSION=? WHERE id=? AND VERSION=?</span></span><br><span class="line">        product2.setPrice(product2.getPrice() - <span class="number">30</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result2</span> <span class="operator">=</span> productMapper.updateById(product2);</span><br><span class="line">        System.out.println(<span class="string">&quot;小王修改结果：&quot;</span> + result2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//       最终，小王修改失败，查询价格：120</span></span><br><span class="line">        <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product3</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;最后的结果：&quot;</span> + product3.getPrice());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211057055.png" alt="image-20230406211057055"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211106313.png" alt="image-20230406211106313"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211117020.png" alt="image-20230406211117020"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211122793.png" alt="image-20230406211122793"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211129728.png" alt="image-20230406211129728"></p><blockquote><p><strong>优化流程</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testProduct03</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//     小李取数据</span></span><br><span class="line">       <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">       <span class="type">Product</span> <span class="variable">product1</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//      小王取数据</span></span><br><span class="line">       <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">       <span class="type">Product</span> <span class="variable">product2</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="comment">//      小李修改 + 50</span></span><br><span class="line">       <span class="comment">//     UPDATE t_product SET NAME=?, price=?, VERSION=? WHERE id=? AND VERSION=?</span></span><br><span class="line">       product1.setPrice(product1.getPrice() + <span class="number">50</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">result1</span> <span class="operator">=</span> productMapper.updateById(product1);</span><br><span class="line">       System.out.println(<span class="string">&quot;小李修改的结果：&quot;</span> + result1);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//      小王修改 - 30</span></span><br><span class="line">       <span class="comment">//     UPDATE t_product SET NAME=?, price=?, VERSION=? WHERE id=? AND VERSION=?</span></span><br><span class="line">       product2.setPrice(product2.getPrice() - <span class="number">30</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">result2</span> <span class="operator">=</span> productMapper.updateById(product2);</span><br><span class="line">       System.out.println(<span class="string">&quot;小王修改结果：&quot;</span> + result2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(result2 == <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//      失败重试，重新获取 version 并更新</span></span><br><span class="line">       <span class="comment">//     UPDATE t_product SET NAME=?, price=?, VERSION=? WHERE id=? AND VERSION=?</span></span><br><span class="line">       product2 = productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">       product2.setPrice(product2.getPrice() - <span class="number">30</span>);</span><br><span class="line">       result2 = productMapper.updateById(product2);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;小王修改重试的结果：&quot;</span> + result2);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//       老板看价格</span></span><br><span class="line">       <span class="comment">//     SELECT id,NAME,price,VERSION FROM t_product WHERE id=?</span></span><br><span class="line">       <span class="type">Product</span> <span class="variable">product3</span> <span class="operator">=</span> productMapper.selectById(<span class="number">1</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;老板看价格：&quot;</span> + product3.getPrice());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211206483.png" alt="image-20230406211206483"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211213205.png" alt="image-20230406211213205"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211220160.png" alt="image-20230406211220160"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter06/image-20230406211230458.png" alt="image-20230406211230458"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus条件构造器和常用接口</title>
      <link href="/posts/4B8E7F3A.html"/>
      <url>/posts/4B8E7F3A.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><h3 id="1-Wrapper-介绍"><a href="#1-Wrapper-介绍" class="headerlink" title="1. Wrapper 介绍"></a>1. Wrapper 介绍</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204129341.png" alt="image-20230406204129341"></p><p><strong>Wrapper：条件构造抽象类，最顶端父类</strong></p><ul><li><strong>AbstractWrapper ：  用于查询条件封装，生成 sql 的 where 条件</strong><ul><li><strong>QueryWrapper ：  查询条件封装</strong></li><li><strong>UpdateWrapper ： Update 条件封装</strong></li><li><strong>AbstractLambdaWrapper ：  使用 Lambda 语法</strong><ul><li><strong>LambdaQueryWrapper ：用于 Lambda语法使用的查询 Wrapper</strong></li><li><strong>LambdaUpdateWrapper ： Lambda 更新封装 Wrapper</strong></li></ul></li></ul></li></ul><h3 id="2-QueryWrapper"><a href="#2-QueryWrapper" class="headerlink" title="2. QueryWrapper"></a>2. QueryWrapper</h3><blockquote><p><strong>QueryWrapper 两两条件之间默认是 and 的关系</strong></p></blockquote><h4 id="2-1-例1：组装查询条件"><a href="#2-1-例1：组装查询条件" class="headerlink" title="2.1 例1：组装查询条件"></a>2.1 例1：组装查询条件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">        *查询用户名包含a，年龄在20到30之间，并且邮箱不为null的用户信息</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * SELECT</span></span><br><span class="line"><span class="comment">        *   uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">        * FROM</span></span><br><span class="line"><span class="comment">        *   t_user</span></span><br><span class="line"><span class="comment">        * WHERE</span></span><br><span class="line"><span class="comment">        *   is_deleted=0 AND (username LIKE ? AND age BETWEEN ? AND ? AND email IS NOT NULL)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        QueryWrapper&lt;User&gt;  queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>).between(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>,<span class="number">30</span>).isNotNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> userMapper.selectList(queryWrapper);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204225775.png" alt="image-20230406204225775"></p><h4 id="2-2-例2：组装排序条件"><a href="#2-2-例2：组装排序条件" class="headerlink" title="2.2 例2：组装排序条件"></a>2.2 例2：组装排序条件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test02</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      *</span></span><br><span class="line"><span class="comment">      * 按年龄降序查询用户，如果年龄相同则按 id 升序排列</span></span><br><span class="line"><span class="comment">      * SELECT uid AS id,username AS name,age,email,is_deleted </span></span><br><span class="line"><span class="comment">      * FROM </span></span><br><span class="line"><span class="comment">      *  t_user </span></span><br><span class="line"><span class="comment">      * WHERE </span></span><br><span class="line"><span class="comment">      *  is_deleted=0 ORDER BY age DESC,id ASC</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">     queryWrapper.orderByDesc(<span class="string">&quot;age&quot;</span>).orderByAsc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line"></span><br><span class="line">     List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">     list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204302710.png" alt="image-20230406204302710"></p><h4 id="2-3-例3：组装删除条件"><a href="#2-3-例3：组装删除条件" class="headerlink" title="2.3 例3：组装删除条件"></a>2.3 例3：组装删除条件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test03</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        * 删除 email 为 null 的用户</span></span><br><span class="line"><span class="comment">        * UPDATE</span></span><br><span class="line"><span class="comment">        * t_user</span></span><br><span class="line"><span class="comment">        * SET</span></span><br><span class="line"><span class="comment">        *  is_deleted=1</span></span><br><span class="line"><span class="comment">        * WHERE</span></span><br><span class="line"><span class="comment">        *  is_deleted=0 AND (email IS NULL)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">       queryWrapper.isNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.delete(queryWrapper);</span><br><span class="line">       System.out.println(<span class="string">&quot;result: &quot;</span>+ result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204332992.png" alt="image-20230406204332992"></p><h4 id="2-4-例4：使用-QueryWrapper-实现修改功能"><a href="#2-4-例4：使用-QueryWrapper-实现修改功能" class="headerlink" title="2.4 例4：使用 QueryWrapper 实现修改功能"></a>2.4 例4：使用 QueryWrapper 实现修改功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test04</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 将（年龄大于20并且用户名中包含有a）或邮箱为null的用户信息修改</span></span><br><span class="line"><span class="comment">         * UPDATE</span></span><br><span class="line"><span class="comment">         * t_user</span></span><br><span class="line"><span class="comment">         *  SET age=?, email=?</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (username LIKE ? AND age &gt; ? OR email IS NULL)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>).gt(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>).or().isNull(<span class="string">&quot;email&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setAge(<span class="number">18</span>);</span><br><span class="line">        user.setEmail(<span class="string">&quot;user@atguigu.com&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(user,queryWrapper);</span><br><span class="line">        System.out.println(<span class="string">&quot;受影响的行数： &quot;</span> + result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204405977.png" alt="image-20230406204405977"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204411587.png" alt="image-20230406204411587"></p><h4 id="2-5-例5：条件的优先级"><a href="#2-5-例5：条件的优先级" class="headerlink" title="2.5 例5：条件的优先级"></a>2.5 例5：条件的优先级</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test05</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * </span></span><br><span class="line"><span class="comment">         * 将用户名中包含有 a 并且（年龄大于 20 或邮箱为 null）的用户信息修改</span></span><br><span class="line"><span class="comment">         * lambda 中的条件优先执行</span></span><br><span class="line"><span class="comment">         * UPDATE </span></span><br><span class="line"><span class="comment">         * t_user </span></span><br><span class="line"><span class="comment">         *  SET age=?, email=? </span></span><br><span class="line"><span class="comment">         * WHERE </span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (username LIKE ? AND (age &gt; ? OR email IS NULL))</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>).and(i -&gt; i .gt(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>).or().isNull(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setAge(<span class="number">23</span>);</span><br><span class="line">        user.setEmail(<span class="string">&quot;lcx@atguigu.com&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(user, queryWrapper);</span><br><span class="line">        System.out.println(<span class="string">&quot;受影响的行数：&quot;</span> + result);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204640688.png" alt="image-20230406204640688"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204650012.png" alt="image-20230406204650012"></p><h4 id="2-6-例6：组装-select-子句"><a href="#2-6-例6：组装-select-子句" class="headerlink" title="2.6 例6：组装 select 子句"></a>2.6 例6：组装 select 子句</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test06</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 查询用户信息的username和age字段</span></span><br><span class="line"><span class="comment">         * SELECT username,age</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0</span></span><br><span class="line"><span class="comment">         * selectMaps()返回Map集合列表，通常配合select()使用，避免User对象中没有被查询到的列值为null</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = queryWrapper.select(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;age&quot;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(wrapper);</span><br><span class="line">        maps.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204723837.png" alt="image-20230406204723837"></p><h4 id="2-7-例7：实现子查询"><a href="#2-7-例7：实现子查询" class="headerlink" title="2.7 例7：实现子查询"></a>2.7 例7：实现子查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test07</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 查询id小于等于3的用户信息</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * SELECT uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (uid IN (select uid from t_user where uid &lt;= 3))</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.inSql(<span class="string">&quot;uid&quot;</span>,<span class="string">&quot;select uid from t_user where uid &lt;= 3&quot;</span>);</span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204751534.png" alt="image-20230406204751534"></p><h3 id="3-UpdateWrapper"><a href="#3-UpdateWrapper" class="headerlink" title="3. UpdateWrapper"></a>3. UpdateWrapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test08</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 将（年龄大于20或邮箱为null）并且用户名中包含有a的用户信息修改</span></span><br><span class="line"><span class="comment">         * 组装set子句以及修改条件</span></span><br><span class="line"><span class="comment">        *  lambda 中的条件优先执行</span></span><br><span class="line"><span class="comment">         * UPDATE</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         *  SET username=?,email=?,age=? WHERE is_deleted=0 AND (username LIKE ? AND (age &gt; ? OR email IS NULL))</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        UpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line">        updateWrapper.set(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;lcx&quot;</span>)</span><br><span class="line">                .set(<span class="string">&quot;email&quot;</span>,<span class="string">&quot;lcx@linchenxi.com&quot;</span>)</span><br><span class="line">                .set(<span class="string">&quot;age&quot;</span>,<span class="number">25</span>)</span><br><span class="line">                .like(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br><span class="line">                .and(i -&gt; i .gt(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>).or().isNull(<span class="string">&quot;email&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// User user = new User();</span></span><br><span class="line">        <span class="comment">// user.setName(&quot;lcx&quot;);</span></span><br><span class="line">        <span class="comment">// user.setAge(25);</span></span><br><span class="line">        <span class="comment">// user.setEmail(&quot;lcx@linchenxi.com&quot;);</span></span><br><span class="line">        <span class="comment">// 这里必须要创建User对象，否则无法应用自动填充。如果没有自动填充，可以设置为null</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(<span class="literal">null</span>, updateWrapper);</span><br><span class="line">        System.out.println(<span class="string">&quot;受影响的行数： &quot;</span> + result);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204817403.png" alt="image-20230406204817403"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406204825985.png" alt="image-20230406204825985"></p><h3 id="4-condition"><a href="#4-condition" class="headerlink" title="4. condition"></a>4. condition</h3><blockquote><p>在真正开发的过程中，组装条件是常见的功能，而这些条件数据来源于用户输入，是可选的，因此我们在组装这些条件时，必须先判断用户是否选择了这些条件，若选择则需要组装该条件，若没有选择则一定不能组装，以免影响 SQL 执行的结果</p></blockquote><h4 id="4-1-思路1"><a href="#4-1-思路1" class="headerlink" title="4.1 思路1"></a>4.1 思路1</h4><blockquote><p>模拟开发中组装条件的情况</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test09</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *         String username = &quot;&quot;;</span></span><br><span class="line"><span class="comment">         *         Integer ageBegin = 20;</span></span><br><span class="line"><span class="comment">         * SELECT</span></span><br><span class="line"><span class="comment">         *  uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (age &gt;= ? AND age &lt;= ?)</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *         String username = &quot;a&quot;;</span></span><br><span class="line"><span class="comment">         *         Integer ageBegin = null;</span></span><br><span class="line"><span class="comment">         * SELECT</span></span><br><span class="line"><span class="comment">         *  uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (username LIKE ? AND age &lt;= ?)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isNotBlank(username))&#123;</span><br><span class="line">        <span class="comment">// isNotBlank 判断某个字符串是否不为空字符串，不为 null，不为空白符</span></span><br><span class="line">            queryWrapper.like(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(ageBegin != <span class="literal">null</span>)&#123;</span><br><span class="line">            queryWrapper.ge(<span class="string">&quot;age&quot;</span>,ageBegin);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ageEnd != <span class="literal">null</span>)&#123;</span><br><span class="line">            queryWrapper.le(<span class="string">&quot;age&quot;</span>,ageEnd);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205352567.png" alt="image-20230406205352567"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205400102.png" alt="image-20230406205400102"></p><h4 id="4-2-思路2"><a href="#4-2-思路2" class="headerlink" title="4.2 思路2"></a>4.2 思路2</h4><blockquote><p>上面的实现方案没有问题，但是代码比较复杂，我们可以使用带 condition 参数的重载方法构建查<br>询条件，简化代码的编写</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test10</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 定义查询条件，有可能为null（用户未输入或未选择）</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *         String username = &quot;&quot;;</span></span><br><span class="line"><span class="comment">         *         Integer ageBegin = 20;</span></span><br><span class="line"><span class="comment">         * SELECT</span></span><br><span class="line"><span class="comment">         *  uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (age &gt;= ? AND age &lt;= ?)</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *          String username = &quot;a&quot;;</span></span><br><span class="line"><span class="comment">         *         Integer ageBegin = null;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * SELECT</span></span><br><span class="line"><span class="comment">         *  uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (username LIKE ? AND age &lt;= ?)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// String username = &quot;&quot;;</span></span><br><span class="line">        <span class="comment">// Integer ageBegin = 20;</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper</span><br><span class="line">                <span class="comment">//   // isNotBlank 判断某个字符串是否不为空字符串，不为 null，不为空白符</span></span><br><span class="line">                .like(StringUtils.isNotBlank(username),<span class="string">&quot;username&quot;</span>,username)</span><br><span class="line">                .ge(ageBegin != <span class="literal">null</span>,<span class="string">&quot;age&quot;</span>,ageBegin)</span><br><span class="line">                .le(ageEnd != <span class="literal">null</span>,<span class="string">&quot;age&quot;</span>,ageEnd);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(queryWrapper);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205437433.png" alt="image-20230406205437433"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205442008.png" alt="image-20230406205442008"></p><h3 id="5-LambdaQueryWrapper"><a href="#5-LambdaQueryWrapper" class="headerlink" title="5.  LambdaQueryWrapper"></a>5.  LambdaQueryWrapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test11</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 定义查询条件，有可能为null（用户未输入）</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *          String username = &quot;&quot;;</span></span><br><span class="line"><span class="comment">         *          Integer ageBegin = 20;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * SELECT</span></span><br><span class="line"><span class="comment">         *  uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (age &gt;= ? AND age &lt;= ?)</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *          String username = &quot;a&quot;;</span></span><br><span class="line"><span class="comment">         *         Integer ageBegin = null;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * SELECT</span></span><br><span class="line"><span class="comment">         *  uid AS id,username AS name,age,email,is_deleted</span></span><br><span class="line"><span class="comment">         * FROM</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * WHERE</span></span><br><span class="line"><span class="comment">         *  is_deleted=0 AND (age &gt;= ? AND age &lt;= ?)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// String username = &quot;&quot;;</span></span><br><span class="line">        <span class="comment">// Integer ageBegin = 20;</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">ageBegin</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">ageEnd</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        LambdaQueryWrapper&lt;User&gt; lambdaQueryWrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//避免使用字符串表示字段，防止运行时错误</span></span><br><span class="line">        lambdaQueryWrapper</span><br><span class="line">                <span class="comment">//   // isNotBlank 判断某个字符串是否不为空字符串，不为 null，不为空白符</span></span><br><span class="line">                .like(StringUtils.isNotBlank(username),User::getName,username)</span><br><span class="line">                .ge(ageBegin != <span class="literal">null</span>,User::getAge,ageBegin)</span><br><span class="line">                .le(ageEnd != <span class="literal">null</span>,User::getAge,ageEnd);</span><br><span class="line"></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(lambdaQueryWrapper);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205525481.png" alt="image-20230406205525481"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205534098.png" alt="image-20230406205534098"></p><h3 id="6-LambdaUpdateWrapper"><a href="#6-LambdaUpdateWrapper" class="headerlink" title="6. LambdaUpdateWrapper"></a>6. LambdaUpdateWrapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test12</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 将用户名中包含有 a 并且（年龄大于 20 或邮箱为 null）的用户信息修改</span></span><br><span class="line"><span class="comment">         * UPDATE</span></span><br><span class="line"><span class="comment">         *  t_user</span></span><br><span class="line"><span class="comment">         * SET username=?,email=?,age=? WHERE is_deleted=0 AND (username LIKE ? AND (age &gt; ? OR email IS NULL))</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        LambdaUpdateWrapper&lt;User&gt; lambdaUpdateWrapper = <span class="keyword">new</span> <span class="title class_">LambdaUpdateWrapper</span>&lt;&gt;();</span><br><span class="line">        lambdaUpdateWrapper</span><br><span class="line">                .like(User::getName,<span class="string">&quot;l&quot;</span>)</span><br><span class="line">                .and(i -&gt; i .gt(User::getAge,<span class="number">20</span>).or().isNull(User::getEmail));</span><br><span class="line"></span><br><span class="line">        lambdaUpdateWrapper</span><br><span class="line">                .set(User::getName,<span class="string">&quot;lcx123&quot;</span>)</span><br><span class="line">                .set(User::getEmail,<span class="string">&quot;lcx123@linchenxi123.com&quot;</span>)</span><br><span class="line">                .set(User::getAge,<span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.update(<span class="literal">null</span>, lambdaUpdateWrapper);</span><br><span class="line">        System.out.println(<span class="string">&quot;受影响的行数： &quot;</span> + result);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205608150.png" alt="image-20230406205608150"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter05/image-20230406205613276.png" alt="image-20230406205613276"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus常用注解</title>
      <link href="/posts/E472D9C1.html"/>
      <url>/posts/E472D9C1.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><h2 id="1-TableName"><a href="#1-TableName" class="headerlink" title="1. @TableName"></a>1. @TableName</h2><blockquote><p><strong>经过以上的测试，在使用 MyBatis-Plus 实现基本的 CRUD时，并没有指定要操作的表，只是在 Mapper 接口继承 BaseMapper时，设置了泛型 User，而操作的表为 user表。</strong></p><p><strong>由此得出结论，MyBatis-Plus 在确定操作的表时，由 BaseMapper 的泛型决定，即实体类型决定，且默认操作的表名和实体类型的类名一致。</strong></p></blockquote><h3 id="1-1-问题"><a href="#1-1-问题" class="headerlink" title="1.1 问题"></a>1.1 问题</h3><p><strong>若实体类类型的类名和要操作的表的表名不一致，会出现什么问题？</strong></p><p><strong>步骤：</strong></p><ul><li><strong>将表 user 更名为 t_user，测试查询功能。</strong></li><li><strong>程序抛出异常：Table ‘mybatis_plus.user’ doesn’t exist，因为现在的表名为t_user，而默认操作的表名和实体类型的类名一致，即 user 表。</strong></li></ul><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201449188.png" alt="image-20230406201449188"></p><h3 id="1-2-通过-TableName-解决问题"><a href="#1-2-通过-TableName-解决问题" class="headerlink" title="1.2 通过 @TableName 解决问题"></a>1.2 通过 @TableName 解决问题</h3><blockquote><p><strong>在实体类类型上添加 @TableName(“t_user”)，标识实体类对应的表，即可成功执行 SQL 语句。</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">// 设置实体类对应的表名</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201528627.png" alt="image-20230406201528627"></p><h3 id="1-3-通过全局配置解决问题"><a href="#1-3-通过全局配置解决问题" class="headerlink" title="1.3 通过全局配置解决问题"></a>1.3 通过全局配置解决问题</h3><blockquote><p>在开发的过程中，经常遇到以上的问题，即实体类所对应的表都有固定的前缀，例如t_或tbl_</p><p>此时，可以使用 MyBatis-Plus 提供的全局配置，为实体类所对应的表名设置默认的前缀，那么就不需要在每个实体类上通过 @TableName 标识实体类对应的表。</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment"># 配置连接数据库信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 配置MyBatis日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mybatis-plus.config-location:</span> <span class="string">classpath:mapper/UserMapper.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201608251.png" alt="image-20230406201608251"></p><h2 id="2-TableId"><a href="#2-TableId" class="headerlink" title="2. @TableId"></a>2. @TableId</h2><blockquote><p><strong>经过以上的测试，MyBatis-Plus 在实现 CRUD 时，会默认将 id 作为主键列，并在插入数据时，默认基于雪花算法的策略生成 id。</strong></p></blockquote><h3 id="2-1-问题"><a href="#2-1-问题" class="headerlink" title="2.1 问题"></a>2.1 问题</h3><p><strong>若实体类和表中表示主键的不是 id，而是其他字段，例如 uid，MyBatis-Plus 会自动识别 uid 为主键列吗？</strong></p><p><strong>步骤：</strong></p><ul><li><strong>把实体类中的属性 id 改为 uid，将表中的字段 id 也改为 uid，测试添加功能。</strong></li><li><strong>程序抛出异常：Field ‘uid’ doesn’t have a default value ，说明 MyBatis-Plus 没有将 uid 作为主键赋值。</strong></li></ul><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201647296.png" alt="image-20230406201647296"></p><h3 id="2-2-通过-TableId-解决问题"><a href="#2-2-通过-TableId-解决问题" class="headerlink" title="2.2 通过 @TableId 解决问题"></a>2.2 通过 @TableId 解决问题</h3><blockquote><p><strong>在实体类中 uid 属性上通过 @Tabled 将其标识为主键，即可成功执行 SQL 语句。</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">// 设置实体类对应的表名</span></span><br><span class="line"><span class="comment">// @TableName(&quot;t_user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Long uid;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201724388.png" alt="image-20230406201724388"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201730632.png" alt="image-20230406201730632"></p><h3 id="2-3-Tabled-的-value-属性"><a href="#2-3-Tabled-的-value-属性" class="headerlink" title="2.3 @Tabled 的 value 属性"></a>2.3 @Tabled 的 value 属性</h3><blockquote><p><strong>若实体类中主键对应的属性为 id，而表中标识主键的字段为 uid，此时若只在属性 id 上添加注解 @TableId，而表中标识主键的是字段 uid</strong></p><p><strong>此时需要通过 @TableId 注解的 value 属性，指定表中的主键字段， @TableId(“uid”) 或 @TableId(value&#x3D;”uid”)</strong></p></blockquote><p><strong>步骤：</strong></p><ul><li><strong>将实体类中主键对应的属性改为 id，测试查询功能。</strong></li><li><strong>程序抛出异常：Unknown column ‘id’ in ‘field list’，说明 MyBatis-Plus 没找到实体类属性对应表中的字段。</strong></li></ul><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201810205.png" alt="image-20230406201810205"></p><ul><li><strong>此时需要通过 @TableId 注解的 value 属性，指定表中的主键字段</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(&quot;uid&quot;)</span></span><br><span class="line">        <span class="comment">// 将属性所对应的字段指定为主键</span></span><br><span class="line">    <span class="comment">// @TableId注解的 value 属性用于指定主键的字段</span></span><br><span class="line">    <span class="comment">// @TableId(value = &quot;uid&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406201838473.png" alt="image-20230406201838473"></p><h3 id="2-4-TableId-的-type-属性"><a href="#2-4-TableId-的-type-属性" class="headerlink" title="2.4 @TableId 的 type 属性"></a>2.4 @TableId 的 type 属性</h3><blockquote><p>type 属性用来定义主键策略</p></blockquote><h4 id="2-4-1-常见的主键策略"><a href="#2-4-1-常见的主键策略" class="headerlink" title="2.4.1 常见的主键策略"></a>2.4.1 常见的主键策略</h4><table><thead><tr><th align="center"><strong>值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td align="center"><strong>IdType.ASSIGN_ID（默认）</strong></td><td><strong>基于雪花算法的策略生成数据id，与数据库id是否设置自增无关</strong></td></tr><tr><td align="center"><strong>IdType.AUTO</strong></td><td><strong>使用数据库的自增策略，<font style="color:red">注意，该类型请确保数据库设置了id自增，否则无效</font></strong></td></tr></tbody></table><h4 id="2-4-2-通过-Tabled"><a href="#2-4-2-通过-Tabled" class="headerlink" title="2.4.2 通过 @Tabled"></a>2.4.2 通过 @Tabled</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// @TableId(&quot;uid&quot;)</span></span><br><span class="line">        <span class="comment">// 将属性所对应的字段指定为主键</span></span><br><span class="line">    <span class="comment">// @TableId注解的 value 属性用于指定主键的字段</span></span><br><span class="line">    <span class="comment">// @TableId注解的 type 属性设置主键生成策略</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;uid&quot;,type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-3-通过配置全局主键策略"><a href="#2-4-3-通过配置全局主键策略" class="headerlink" title="2.4.3 通过配置全局主键策略"></a>2.4.3 通过配置全局主键策略</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment"># 配置连接数据库信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 配置MyBatis日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mybatis-plus.config-location:</span> <span class="string">classpath:mapper/UserMapper.xml</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus操作表的默认前缀</span></span><br><span class="line">      <span class="attr">table-prefix:</span> <span class="string">t_</span></span><br><span class="line">      <span class="comment"># 配置MyBatis-Plus的主键策略</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure><h4 id="2-4-4-测试添加功能"><a href="#2-4-4-测试添加功能" class="headerlink" title="2.4.4 测试添加功能"></a>2.4.4 测试添加功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 实现新增用户信息</span></span><br><span class="line">        <span class="comment">// INSERT INTO user ( id, name, age, email ) VALUES ( ?, ?, ?, ? )</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">23</span>);</span><br><span class="line">        user.setEmail(<span class="string">&quot;zhangsan@atguigu.com&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;受影响的行数&quot;</span> + result);</span><br><span class="line">        System.out.println(<span class="string">&quot;id：&quot;</span> + user.getId());</span><br><span class="line">        <span class="comment">// System.out.println(&quot;uid: &quot; + user.getUid() );</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="2-4-5-将数据表截断，然后重新添加数据"><a href="#2-4-5-将数据表截断，然后重新添加数据" class="headerlink" title="2.4.5 将数据表截断，然后重新添加数据"></a>2.4.5 将数据表截断，然后重新添加数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">USE mybatis_plus;</span><br><span class="line">INSERT INTO t_user (uid, name, age, email) VALUES</span><br><span class="line">(1, &#x27;Jone&#x27;, 18, &#x27;test1@baomidou.com&#x27;),</span><br><span class="line">(2, &#x27;Jack&#x27;, 20, &#x27;test2@baomidou.com&#x27;),</span><br><span class="line">(3, &#x27;Tom&#x27;, 28, &#x27;test3@baomidou.com&#x27;),</span><br><span class="line">(4, &#x27;Sandy&#x27;, 21, &#x27;test4@baomidou.com&#x27;),</span><br><span class="line">(5, &#x27;Billie&#x27;, 24, &#x27;test5@baomidou.com&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p>如果不把数据表截断，再添加数据，那么设置完 id 还是雪花算法，但是效果就是雪花算法自增1的 id</p></blockquote><h4 id="2-4-6-运行结果"><a href="#2-4-6-运行结果" class="headerlink" title="2.4.6 运行结果"></a>2.4.6 运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406202106939.png" alt="image-20230406202106939"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406202116788.png" alt="image-20230406202116788"></p><p><strong>注意：如果在添加数据的时候指明了具体的 id，则即使不采用以上的方式来配置主键策略，新插入的数据 id 值也不是雪花算法。即当插入数据时 id 让其自增的默认主键策略为雪花算法。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 实现新增用户信息</span></span><br><span class="line">        <span class="comment">// INSERT INTO user ( id, name, age, email ) VALUES ( ?, ?, ?, ? )</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        user.setId(<span class="number">100L</span>);</span><br><span class="line">        user.setAge(<span class="number">23</span>);</span><br><span class="line">        user.setEmail(<span class="string">&quot;zhangsan@atguigu.com&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;受影响的行数&quot;</span> + result);</span><br><span class="line">        System.out.println(<span class="string">&quot;id：&quot;</span> + user.getId());</span><br><span class="line">        <span class="comment">// System.out.println(&quot;uid: &quot; + user.getUid() );</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406202140292.png" alt="image-20230406202140292"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406202144892.png" alt="image-20230406202144892"></p><h3 id="2-5-雪花算法"><a href="#2-5-雪花算法" class="headerlink" title="2.5 雪花算法"></a>2.5 雪花算法</h3><h4 id="2-5-1-背景"><a href="#2-5-1-背景" class="headerlink" title="2.5.1 背景"></a>2.5.1 背景</h4><p><strong>需要选择合适的方案去应对数据规模的增长，以应对逐渐增长的访问压力和数据量。</strong></p><p><strong>数据库的扩展方式主要包括：业务分库、主从复制、数据库分表。</strong></p><h4 id="2-5-2-数据库分表"><a href="#2-5-2-数据库分表" class="headerlink" title="2.5.2 数据库分表"></a>2.5.2 数据库分表</h4><p><strong>将不同业务数据分散到不同的数据库服务器，能够支撑百万甚至千万用户规模的业务，但如果业务继续发展，同一业务的单表数据也会达到单台数据库服务器的处理瓶颈。例如，淘宝的几亿用户数据，如果全部存放在一台数据库服务器的一张表中，肯定是无法满足性能要求的，此时就需要对单表数据进行拆分。</strong></p><p><strong>单表数据拆分有两种方式：垂直分表和水平分表。示意图如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406202438094.png" alt="image-20230406202438094"></p><h4 id="2-5-3-垂直分表"><a href="#2-5-3-垂直分表" class="headerlink" title="2.5.3 垂直分表"></a>2.5.3 垂直分表</h4><p><strong><font style="color:red">垂直分表适合将表中某些不常用且占了大量空间的列拆分出去。</font></strong></p><p><strong>例如，前面示意图中的 nickname 和 description 字段，假设是一个婚恋网站，用户在筛选其他用户的时候，主要是用 age 和 sex 两个字段进行查询，而 nickname 和 description 两个字段主要用于展示，一般不会在业务查询中用到。description 本身又比较长，因此可以将这两个字段独立到另外一张表中，这样在查询 age 和 sex 时，就能带来一定的性能提升。</strong></p><h4 id="2-5-4-水平分表"><a href="#2-5-4-水平分表" class="headerlink" title="2.5.4 水平分表"></a>2.5.4 水平分表</h4><p><strong><font style="color:red">水平分表适合表行数特别大的表</font>，有的公司要求单表行数超过 5000 万就必须进行分表，这个数字可以作为参考，但并不是绝对标准，关键还是要看表的访问性能。对于一些比较复杂的表，可能超过1000 万就要分表了；而对于一些简单的表，即使存储数据超过 1 亿行，也可以不分表。</strong></p><p><strong>但不管怎样，当看到表的数据量达到千万级别时，作为架构师就要警觉起来，因为这很可能是架构的性能瓶颈或者隐患。</strong></p><p><strong>水平分表相比垂直分表，会引入更多的复杂性，例如要求全局唯一的数据id该如何处理。</strong></p><blockquote><p>主键自增</p></blockquote><p><strong>①以最常见的用户 ID 为例，可以按照 1000000 的范围大小进行分段，1 ~ 999999 放到表 1中， 1000000 ~ 1999999 放到表2中，以此类推。</strong></p><p><strong>②复杂点：分段大小的选取。分段太小会导致切分后子表数量过多，增加维护复杂度；分段太大可能会导致单表依然存在性能问题，一般建议分段大小在 100 万至 2000 万之间，具体需要根据业务选取合适的分段大小。</strong></p><p><strong>③优点：<font style="color:red">可以随着数据的增加平滑地扩充新的表。</font>例如，现在的用户是 100 万，如果增加到 1000 万， 只需要增加新的表就可以了，原有的数据不需要动。</strong></p><p><strong>④缺点：<font style="color:red">分布不均匀。</font>假如按照 1000 万来进行分表，有可能某个分段实际存储的数据量只有 1 条，而另外一个分段实际存储的数据量有 1000 万条。</strong></p><blockquote><p>取模</p></blockquote><p><strong>①同样以用户 ID 为例，假如我们一开始就规划了 10 个数据库表，可以简单地用 user_id % 10 的值来表示数据所属的数据库表编号，ID 为 985 的用户放到编号为 5 的子表中，ID 为 10086 的用户放到编号为 6 的子表中。</strong></p><p><strong>②复杂点：初始表数量的确定。表数量太多维护比较麻烦，表数量太少又可能导致单表性能存在问题。</strong></p><p><strong>③优点：<font style="color:red">表分布比较均匀。</font></strong></p><p><strong>④缺点：<font style="color:red">扩充新的表很麻烦，所有数据都要重分布。</font></strong></p><blockquote><p>雪花算法</p></blockquote><p><strong>雪花算法是由 Twitter 公布的分布式主键生成算法，它能够保证不同表的主键的不重复性，以及相同表的主键的有序性。</strong></p><p><strong>①核心思想：</strong></p><p><strong>长度共64bit（一个long型）。</strong></p><p><strong>首先是一个符号位，1 bit标识，由于 long 基本类型在 Java 中是带符号的，最高位是符号位，正数是 0，负数是 1，所以 id 一般是正数，最高位是 0。</strong></p><p><strong>41 bit 时间截(毫秒级)，存储的是时间截的差值（当前时间截 - 开始时间截)，结果约等于69.73年。</strong></p><p><strong>10 bit 作为机器的 ID（5个 bit 是数据中心，5个 bit 的机器ID，可以部署在 1024 个节点）。</strong></p><p><strong>12 bit 作为毫秒内的流水号（意味着每个节点在每毫秒可以产生 4096 个 ID）。</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/20230406202724.png"></p><p><strong>②优点：<font style="color:red">整体上按照时间自增排序，并且整个分布式系统内不会产生ID碰撞，并且效率较高。</font></strong></p><h2 id="3-TableField"><a href="#3-TableField" class="headerlink" title="3. @TableField"></a>3. @TableField</h2><p><strong>经过以上的测试，可以发现，MyBatis-Plus 在执行 SQL 语句时，要保证实体类中的属性名和表中的字段名一致。</strong></p><p><strong>如果实体类中的属性名和字段名不一致的情况，会出现什么问题呢？</strong></p><h3 id="3-1-情况1"><a href="#3-1-情况1" class="headerlink" title="3.1 情况1"></a>3.1 情况1</h3><p><strong>若实体类中的属性使用的是驼峰命名风格，而表中的字段使用的是下划线命名风格。</strong></p><p><strong>步骤：</strong></p><ul><li><p><strong>将实体类属性设置成 userName，表中字段设置成 user_name。</strong></p></li><li><p><strong>此时 MyBatis-Plus 会自动将下划线命名风格转化为驼峰命名风格。</strong></p></li><li><p><strong>相当于在 MyBatis 中配置</strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  将下划线映射为驼峰      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-1-1-实体类"><a href="#3-1-1-实体类" class="headerlink" title="3.1.1 实体类"></a>3.1.1 实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">// 设置实体类对应的表名</span></span><br><span class="line"><span class="comment">// @TableName(&quot;t_user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// @TableId(&quot;uid&quot;)</span></span><br><span class="line">    <span class="comment">// 将属性所对应的字段指定为主键</span></span><br><span class="line">    <span class="comment">// @TableId注解的 value 属性用于指定主键的字段</span></span><br><span class="line">    <span class="comment">// @TableId注解的 type 属性设置主键生成策略</span></span><br><span class="line">    <span class="comment">// @TableId(value = &quot;uid&quot;,type = IdType.AUTO)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;uid&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-2-表结构"><a href="#3-1-2-表结构" class="headerlink" title="3.1.2 表结构"></a>3.1.2 表结构</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/20230406203013.png"></p><h4 id="3-1-3-测试"><a href="#3-1-3-测试" class="headerlink" title="3.1.3 测试"></a>3.1.3 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//selectList()根据MP内置的条件构造器查询一个list集合，null表示没有条件，即查询所有</span></span><br><span class="line">        <span class="comment">//SELECT uid AS id,user_name,age,email FROM t_user</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-4-运行结果"><a href="#3-1-4-运行结果" class="headerlink" title="3.1.4 运行结果"></a>3.1.4 运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406203046616.png" alt="image-20230406203046616"></p><h3 id="3-2-情况2"><a href="#3-2-情况2" class="headerlink" title="3.2 情况2"></a>3.2 情况2</h3><p><strong>若实体类中的属性和表中的字段不满足情况1。</strong></p><p><strong>步骤：</strong></p><ul><li><p><strong>将实体类属性设置为 name，表中字段设置为 username。</strong></p></li><li><p><strong>此时需要在实体类属性上使用 @TableField(“username”) 设置属性对应的字段名。</strong></p></li></ul><h4 id="3-2-1-实体类"><a href="#3-2-1-实体类" class="headerlink" title="3.2.1 实体类"></a>3.2.1 实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// @TableId(&quot;uid&quot;)</span></span><br><span class="line">    <span class="comment">// 将属性所对应的字段指定为主键</span></span><br><span class="line">    <span class="comment">// @TableId注解的 value 属性用于指定主键的字段</span></span><br><span class="line">    <span class="comment">// @TableId注解的 type 属性设置主键生成策略</span></span><br><span class="line">    <span class="comment">// @TableId(value = &quot;uid&quot;,type = IdType.AUTO)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;uid&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;username&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-2-表结构"><a href="#3-2-2-表结构" class="headerlink" title="3.2.2 表结构"></a>3.2.2 表结构</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406203149450.png" alt="image-20230406203149450"></p><h4 id="3-2-3-测试"><a href="#3-2-3-测试" class="headerlink" title="3.2.3 测试"></a>3.2.3 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//selectList()根据MP内置的条件构造器查询一个list集合，null表示没有条件，即查询所有</span></span><br><span class="line">        <span class="comment">//SELECT uid AS id,username AS name,age,email FROM t_user</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-4-运行结果"><a href="#3-2-4-运行结果" class="headerlink" title="3.2.4 运行结果"></a>3.2.4 运行结果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/20230406203247.png"></p><h2 id="4-TableLogic"><a href="#4-TableLogic" class="headerlink" title="4. @TableLogic"></a>4. @TableLogic</h2><h3 id="4-1-逻辑删除"><a href="#4-1-逻辑删除" class="headerlink" title="4.1 逻辑删除"></a>4.1 逻辑删除</h3><ul><li><strong>物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除的数据。</strong></li><li><strong>逻辑删除：假删除，将对应数据中代表是否被删除字段的状态修改为“被删除状态”，之后在数据库中仍旧能看到此条数据记录。</strong></li><li><strong>使用场景：可以进行数据恢复。</strong></li></ul><h3 id="4-2-实现逻辑删除"><a href="#4-2-实现逻辑删除" class="headerlink" title="4.2 实现逻辑删除"></a>4.2 实现逻辑删除</h3><blockquote><p><strong>step1：数据库中创建逻辑删除状态列，设置默认值为0</strong></p></blockquote><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406203402245.png" alt="image-20230406203402245"></p><blockquote><p><strong>step2：实体类中添加逻辑删除属性</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">// 设置实体类对应的表名</span></span><br><span class="line"><span class="comment">// @TableName(&quot;t_user&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// @TableId(&quot;uid&quot;)</span></span><br><span class="line">    <span class="comment">// 将属性所对应的字段指定为主键</span></span><br><span class="line">    <span class="comment">// @TableId注解的 value 属性用于指定主键的字段</span></span><br><span class="line">    <span class="comment">// @TableId注解的 type 属性设置主键生成策略</span></span><br><span class="line">    <span class="comment">// @TableId(value = &quot;uid&quot;,type = IdType.AUTO)</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;uid&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定属性对应的字段名</span></span><br><span class="line">    <span class="meta">@TableField(&quot;username&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="keyword">private</span> Integer isDeleted;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>step3：测试</strong></p><p><strong>测试删除功能，真正执行的是修改</strong></p><p><strong>测试查询功能，被逻辑删除的数据默认不会被查询</strong></p></blockquote><h4 id="4-2-1-测试删除功能"><a href="#4-2-1-测试删除功能" class="headerlink" title="4.2.1 测试删除功能"></a>4.2.1 测试删除功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="comment">// 通过 id 删除用户信息</span></span><br><span class="line">      <span class="comment">// UPDATE t_user SET is_deleted=1 WHERE uid=? AND is_deleted=0</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteById(<span class="number">101L</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;result: &quot;</span> + result);</span><br><span class="line">｝</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406203513286.png" alt="image-20230406203513286"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406203520561.png" alt="image-20230406203520561"></p><h4 id="4-2-2-测试查询功能"><a href="#4-2-2-测试查询功能" class="headerlink" title="4.2.2 测试查询功能"></a>4.2.2 测试查询功能</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//selectList()根据MP内置的条件构造器查询一个list集合，null表示没有条件，即查询所有</span></span><br><span class="line">        <span class="comment">//SELECT uid AS id,username AS name,age,email,is_deleted FROM t_user WHERE is_deleted=0</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter04/image-20230406203555716.png" alt="image-20230406203555716"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus基本CRUD</title>
      <link href="/posts/3F9BDAAF.html"/>
      <url>/posts/3F9BDAAF.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><h3 id="1-BaseMapper"><a href="#1-BaseMapper" class="headerlink" title="1. BaseMapper"></a>1. BaseMapper</h3><blockquote><p><strong>MyBatis-Plus 中的基本 CRUD 在内置的 BaseMapper 中都已得到了实现，我们可以直接使用，接口如下：</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.baomidou.mybatisplus.core.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.Wrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.Constants;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.exceptions.TooManyResultsException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mapper 继承该接口后，无需编写 mapper.xml 文件，即可获得CRUD功能</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;这个 Mapper 支持 id 泛型&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hubin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2016-01-23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BaseMapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;T&gt; &#123;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入一条记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insert</span><span class="params">(T entity)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 ID 删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 主键ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体(ID)删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.4.4</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(T entity)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 columnMap 条件，删除记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> columnMap 表字段 map 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 entity 条件，删除记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除（根据ID或实体 批量删除）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> idList 主键ID列表或实体列表(不能为 null 以及 empty)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLL)</span> Collection&lt;?&gt; idList)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 ID 修改</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateById</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 whereEntity 条件，更新记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity        实体对象 (set 条件值,可以为 null)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> updateWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 ID 查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 主键ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    T <span class="title function_">selectById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询（根据ID 批量查询）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> idList 主键ID列表(不能为 null 以及 empty)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLL)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询（根据 columnMap 条件）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> columnMap 表字段 map 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 entity 条件，查询一条记录</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;查询一条记录，例如 qw.last(&quot;limit 1&quot;) 限制取一条记录, 注意：多条数据会报异常&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> T <span class="title function_">selectOne</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        List&lt;T&gt; list = <span class="built_in">this</span>.selectList(queryWrapper);</span><br><span class="line">        <span class="comment">// 抄自 DefaultSqlSession#selectOne</span></span><br><span class="line">        <span class="keyword">if</span> (list.size() == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> list.get(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">TooManyResultsException</span>(<span class="string">&quot;Expected one result (or null) to be returned by selectOne(), but found: &quot;</span> + list.size());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，判断是否存在记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否存在记录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">exists</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> <span class="built_in">this</span>.selectCount(queryWrapper);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span> != count &amp;&amp; count &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Long <span class="title function_">selectCount</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 entity 条件，查询全部记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectList</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMaps</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;注意： 只返回第一个字段的值&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Object&gt; <span class="title function_">selectObjs</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 entity 条件，查询全部记录（并翻页）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page         分页查询条件（可以为 RowBounds.DEFAULT）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;P <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;T&gt;&gt; P <span class="title function_">selectPage</span><span class="params">(P page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，查询全部记录（并翻页）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page         分页查询条件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;P <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;Map&lt;String, Object&gt;&gt;&gt; P <span class="title function_">selectMapsPage</span><span class="params">(P page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-插入"><a href="#2-插入" class="headerlink" title="2. 插入"></a>2. 插入</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="comment">// 实现新增用户信息</span></span><br><span class="line">      <span class="comment">// INSERT INTO user ( id, name, age, email ) VALUES ( ?, ?, ?, ? )</span></span><br><span class="line">      <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">      user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">      user.setAge(<span class="number">23</span>);</span><br><span class="line">      user.setEmail(<span class="string">&quot;zhangsan@atguigu.com&quot;</span>);</span><br><span class="line">      <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line">      System.out.println(<span class="string">&quot;受影响的行数&quot;</span> + result);</span><br><span class="line">      System.out.println(<span class="string">&quot;id：&quot;</span> + user.getId());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/image-20230406195703986.png" alt="image-20230406195703986"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/image-20230406195713523.png" alt="image-20230406195713523"></p><h3 id="3-删除"><a href="#3-删除" class="headerlink" title="3. 删除"></a>3. 删除</h3><h4 id="3-1-通过-id-删除记录"><a href="#3-1-通过-id-删除记录" class="headerlink" title="3.1 通过 id 删除记录"></a>3.1 通过 id 删除记录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 通过 id 删除用户信息</span></span><br><span class="line">        <span class="comment">// DELETE FROM user WHERE id=?</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteById(<span class="number">1624336393020923905L</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;result: &quot;</span> + result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/image-20230406195743193.png" alt="image-20230406195743193"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/image-20230406195752585.png" alt="image-20230406195752585"></p><h4 id="3-2-通过-id-批量删除记录"><a href="#3-2-通过-id-批量删除记录" class="headerlink" title="3.2 通过 id 批量删除记录"></a>3.2 通过 id 批量删除记录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">          <span class="comment">// 根据 map 集合中所设置的条件来删除用户信息</span></span><br><span class="line">      <span class="comment">// DELETE FROM user WHERE name = ? AND age = ?</span></span><br><span class="line">      Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String,Object&gt;();</span><br><span class="line">      map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">      map.put(<span class="string">&quot;age&quot;</span>,<span class="number">23</span>);</span><br><span class="line">      <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteByMap(map);</span><br><span class="line">      System.out.println(<span class="string">&quot;result: &quot;</span> + result);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406195927.png"></p><h4 id="3-3-通过-map-条件删除记录"><a href="#3-3-通过-map-条件删除记录" class="headerlink" title="3.3 通过 map 条件删除记录"></a>3.3 通过 map 条件删除记录</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 通过多个 id 实现批量删除</span></span><br><span class="line">        <span class="comment">// DELETE FROM user WHERE id IN ( ? , ? , ? )</span></span><br><span class="line">        List&lt;Long&gt; idList = Arrays.asList(<span class="number">1L</span>, <span class="number">2L</span>, <span class="number">3L</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteBatchIds(idList);</span><br><span class="line">        System.out.println(<span class="string">&quot;受影响的行数: &quot;</span> + result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200017.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200040.png"></p><h3 id="4-修改"><a href="#4-修改" class="headerlink" title="4. 修改"></a>4. 修改</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdateById</span><span class="params">()</span>&#123;</span><br><span class="line">               <span class="comment">// 修改用户信息</span></span><br><span class="line">       <span class="comment">// UPDATE user SET name=?, email=? WHERE id=?</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">       user.setId(<span class="number">4L</span>);</span><br><span class="line">       user.setName(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;lisi@atguigu.com&quot;</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.updateById(user);</span><br><span class="line">       System.out.println(<span class="string">&quot;result: &quot;</span> + result);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200145.png"></p><h3 id="5-查询"><a href="#5-查询" class="headerlink" title="5. 查询"></a>5. 查询</h3><h4 id="5-1-根据-id-查询用户信息"><a href="#5-1-根据-id-查询用户信息" class="headerlink" title="5.1 根据 id 查询用户信息"></a>5.1 根据 id 查询用户信息</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="comment">// 通过 id 查询用户信息</span></span><br><span class="line">       <span class="comment">// SELECT id,name,age,email FROM user WHERE id=?</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectById(<span class="number">4L</span>);</span><br><span class="line">       System.out.println(user);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200239.png"></p><h4 id="5-2-根据多个-id-查询多个用户信息"><a href="#5-2-根据多个-id-查询多个用户信息" class="headerlink" title="5.2 根据多个 id 查询多个用户信息"></a>5.2 根据多个 id 查询多个用户信息</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">// 根据多个 id 查询多个用户信息</span></span><br><span class="line">      <span class="comment">// SELECT id,name,age,email FROM user WHERE id IN ( ? , ? )</span></span><br><span class="line">      List&lt;Long&gt; idList = Arrays.asList(<span class="number">4L</span>, <span class="number">5L</span>);</span><br><span class="line">      List&lt;User&gt; list = userMapper.selectBatchIds(idList);</span><br><span class="line">      list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200323.png"></p><h4 id="5-3-通过-map-条件查询用户信息"><a href="#5-3-通过-map-条件查询用户信息" class="headerlink" title="5.3 通过 map 条件查询用户信息"></a>5.3 通过 map 条件查询用户信息</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 根据 map 集合中的条件查询用户信息</span></span><br><span class="line">       <span class="comment">// SELECT id,name,age,email FROM user WHERE name = ? AND age = ?</span></span><br><span class="line">       Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String,Object&gt;();</span><br><span class="line">       map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">       map.put(<span class="string">&quot;age&quot;</span>,<span class="number">20</span>);</span><br><span class="line">       List&lt;User&gt; list = userMapper.selectByMap(map);</span><br><span class="line">       list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200416.png"></p><h4 id="5-4-查询所有数据"><a href="#5-4-查询所有数据" class="headerlink" title="5.4 查询所有数据"></a>5.4 查询所有数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询所有数据</span></span><br><span class="line">        <span class="comment">// SELECT id,name,age,email FROM user</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200503.png"></p><h3 id="6-测试自定义功能"><a href="#6-测试自定义功能" class="headerlink" title="6. 测试自定义功能"></a>6. 测试自定义功能</h3><blockquote><p><strong>MyBatis-Plus 在 MyBatis 的基础上只做增强不做改变</strong></p><p><strong>这样既可以使用自定义的方法，又可以使用 MyBatis-Plus 中自带的方法</strong></p></blockquote><h4 id="6-1-配置-application-yml"><a href="#6-1-配置-application-yml" class="headerlink" title="6.1 配置 application.yml"></a>6.1 配置 application.yml</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment"># 配置连接数据库信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mybatis-plus.config-location:</span> <span class="string">classpath:mapper/UserMapper.xml</span></span><br></pre></td></tr></table></figure><h4 id="6-2-在-UserMapper-中新增方法"><a href="#6-2-在-UserMapper-中新增方法" class="headerlink" title="6.2 在 UserMapper 中新增方法"></a>6.2 在 UserMapper 中新增方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> id:</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> Map&lt;String,Object&gt;</span></span><br><span class="line"><span class="comment">   * 根据 id 查询用户信息为map集合</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  Map&lt;String,Object&gt; <span class="title function_">selectMapById</span><span class="params">(Long id)</span>;</span><br></pre></td></tr></table></figure><h4 id="6-3-新建-UseMapper-xml-映射文件"><a href="#6-3-新建-UseMapper-xml-映射文件" class="headerlink" title="6.3 新建 UseMapper.xml 映射文件"></a>6.3 新建 UseMapper.xml 映射文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.atguigu.mybatisplus.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    Map&lt;String,Object&gt; selectMapById(Long id);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectMapById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select id,name,age,email from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-4-测试"><a href="#6-4-测试" class="headerlink" title="6.4 测试"></a>6.4 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelect</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 根据 id 查询用户信息为map集合</span></span><br><span class="line">        <span class="comment">// select id,name,age,email from user where id = ?</span></span><br><span class="line">        Map&lt;String, Object&gt; map = userMapper.selectMapById(<span class="number">1L</span>);</span><br><span class="line">        System.out.println(map);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200652.png"></p><h3 id="7-通用-Service"><a href="#7-通用-Service" class="headerlink" title="7. 通用 Service"></a>7. 通用 Service</h3><p><strong>说明：</strong></p><ul><li><strong>通用 Service CRUD 封装 IService 接口，进一步封装 CRUD 采用:</strong><ul><li><strong>get 查询单行</strong></li><li><strong>remove 删除</strong></li><li><strong>list 查询集合</strong></li><li><strong>page 分页</strong></li></ul></li><li><strong><font style="color:red">前缀命名方式区分 Mapper 层避免混淆。</font></strong></li><li><strong>泛型 T 为任意实体对象。</strong></li><li><strong><font style="color:red">建议如果存在自定义通用 Service 方法的可能，请创建自己的 IBaseService 继承 MyBatis-Plus 提供的基类。</font></strong></li><li><strong>官方地址：<a href="https://baomidou.com/pages/49cc81/#service-crud-%E6%8E%A5%E5%8F%A3">https://baomidou.com/pages/49cc81/#service-crud-%E6%8E%A5%E5%8F%A3</a></strong></li></ul><h4 id="7-1-IService"><a href="#7-1-IService" class="headerlink" title="7.1  IService"></a>7.1  IService</h4><blockquote><p><strong>MyBatis-Plus中有一个接口 IService和其实现类 ServiceImpl，封装了常见的业务层逻辑。</strong></p><p><strong>详情查看源码 IService 和 ServiceImpl 。</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.baomidou.mybatisplus.extension.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.Wrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.IPage;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.Assert;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.Wrappers;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.conditions.query.ChainQuery;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.conditions.query.LambdaQueryChainWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.conditions.query.QueryChainWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.conditions.update.ChainUpdate;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.conditions.update.UpdateChainWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.kotlin.KtQueryChainWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.kotlin.KtUpdateChainWrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.toolkit.ChainWrappers;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.toolkit.SqlHelper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 顶级 Service</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hubin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2018-06-23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IService</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认批次提交数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">DEFAULT_BATCH_SIZE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入一条记录（选择字段，策略插入）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().insert(entity));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入（批量）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entityList 实体对象集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> saveBatch(entityList, DEFAULT_BATCH_SIZE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入（批量）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entityList 实体对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> batchSize  插入批次数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量修改插入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entityList 实体对象集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">saveOrUpdateBatch</span><span class="params">(Collection&lt;T&gt; entityList)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> saveOrUpdateBatch(entityList, DEFAULT_BATCH_SIZE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量修改插入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entityList 实体对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> batchSize  每次的数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveOrUpdateBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 ID 删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 主键ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Serializable id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 ID 删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id      主键(类型必须与实体类型字段保持一致)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> useFill 是否启用填充(为true的情况,会将入参转换实体进行delete删除)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.5.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Serializable id, <span class="type">boolean</span> useFill)</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedOperationException</span>(<span class="string">&quot;不支持的方法!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据实体(ID)删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.4.4</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteById(entity));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 columnMap 条件，删除记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> columnMap 表字段 map 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeByMap</span><span class="params">(Map&lt;String, Object&gt; columnMap)</span> &#123;</span><br><span class="line">        Assert.notEmpty(columnMap, <span class="string">&quot;error: columnMap must not be empty&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteByMap(columnMap));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 entity 条件，删除记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体包装类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">remove</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().delete(queryWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除（根据ID 批量删除）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list 主键ID或实体列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeByIds</span><span class="params">(Collection&lt;?&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(list)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteBatchIds(list));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list    主键ID或实体列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> useFill 是否填充(为true的情况,会将入参转换实体进行delete删除)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.5.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeByIds</span><span class="params">(Collection&lt;?&gt; list, <span class="type">boolean</span> useFill)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(list)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (useFill) &#123;</span><br><span class="line">            <span class="keyword">return</span> removeBatchByIds(list, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteBatchIds(list));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除(jdbc批量提交)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list 主键ID或实体列表(主键ID类型必须与实体类型字段保持一致)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.5.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeBatchByIds</span><span class="params">(Collection&lt;?&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> removeBatchByIds(list, DEFAULT_BATCH_SIZE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除(jdbc批量提交)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list    主键ID或实体列表(主键ID类型必须与实体类型字段保持一致)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> useFill 是否启用填充(为true的情况,会将入参转换实体进行delete删除)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.5.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeBatchByIds</span><span class="params">(Collection&lt;?&gt; list, <span class="type">boolean</span> useFill)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> removeBatchByIds(list, DEFAULT_BATCH_SIZE, useFill);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除(jdbc批量提交)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list      主键ID或实体列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> batchSize 批次大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.5.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeBatchByIds</span><span class="params">(Collection&lt;?&gt; list, <span class="type">int</span> batchSize)</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedOperationException</span>(<span class="string">&quot;不支持的方法!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除(jdbc批量提交)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list      主键ID或实体列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> batchSize 批次大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> useFill   是否启用填充(为true的情况,会将入参转换实体进行delete删除)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.5.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeBatchByIds</span><span class="params">(Collection&lt;?&gt; list, <span class="type">int</span> batchSize, <span class="type">boolean</span> useFill)</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedOperationException</span>(<span class="string">&quot;不支持的方法!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 ID 选择修改</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">updateById</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().updateById(entity));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 UpdateWrapper 条件，更新记录 需要设置sqlset</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> updateWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Wrapper&lt;T&gt; updateWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> update(<span class="literal">null</span>, updateWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 whereEntity 条件，更新记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity        实体对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> updateWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(T entity, Wrapper&lt;T&gt; updateWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().update(entity, updateWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ID 批量更新</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entityList 实体对象集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">updateBatchById</span><span class="params">(Collection&lt;T&gt; entityList)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> updateBatchById(entityList, DEFAULT_BATCH_SIZE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ID 批量更新</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entityList 实体对象集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> batchSize  更新批次数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">updateBatchById</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * TableId 注解存在更新记录，否插入一条记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveOrUpdate</span><span class="params">(T entity)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 ID 查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 主键ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> T <span class="title function_">getById</span><span class="params">(Serializable id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询（根据ID 批量查询）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> idList 主键ID列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">listByIds</span><span class="params">(Collection&lt;? extends Serializable&gt; idList)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectBatchIds(idList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询（根据 columnMap 条件）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> columnMap 表字段 map 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">listByMap</span><span class="params">(Map&lt;String, Object&gt; columnMap)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectByMap(columnMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper，查询一条记录 &lt;br/&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;结果集，如果是多个会抛出异常，随机取一条加上限制条件 wrapper.last(&quot;LIMIT 1&quot;)&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getOne(queryWrapper, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper，查询一条记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> throwEx      有多个 result 是否抛出异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, <span class="type">boolean</span> throwEx)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper，查询一条记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Map&lt;String, Object&gt; <span class="title function_">getMap</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper，查询一条记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mapper       转换函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;V&gt; V <span class="title function_">getObj</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询总记录数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> Wrappers#emptyWrapper()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">long</span> <span class="title function_">count</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> count(Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">long</span> <span class="title function_">count</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retCount(getBaseMapper().selectCount(queryWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">list</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectList(queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> Wrappers#emptyWrapper()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list(Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 翻页查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page         翻页对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> &lt;E <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;T&gt;&gt; E <span class="title function_">page</span><span class="params">(E page, Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectPage(page, queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无条件翻页查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page 翻页对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> Wrappers#emptyWrapper()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> &lt;E <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;T&gt;&gt; E <span class="title function_">page</span><span class="params">(E page)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> page(page, Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">listMaps</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectMaps(queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> Wrappers#emptyWrapper()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">listMaps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listMaps(Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部记录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Object&gt; <span class="title function_">listObjs</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listObjs(Function.identity());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mapper 转换函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> &lt;V&gt; List&lt;V&gt; <span class="title function_">listObjs</span><span class="params">(Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listObjs(Wrappers.emptyWrapper(), mapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Object&gt; <span class="title function_">listObjs</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listObjs(queryWrapper, Function.identity());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mapper       转换函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> &lt;V&gt; List&lt;V&gt; <span class="title function_">listObjs</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectObjs(queryWrapper).stream().filter(Objects::nonNull).map(mapper).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 翻页查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page         翻页对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> queryWrapper 实体对象封装操作类 &#123;<span class="doctag">@link</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> &lt;E <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;Map&lt;String, Object&gt;&gt;&gt; E <span class="title function_">pageMaps</span><span class="params">(E page, Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectMapsPage(page, queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无条件翻页查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page 翻页对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> Wrappers#emptyWrapper()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> &lt;E <span class="keyword">extends</span> <span class="title class_">IPage</span>&lt;Map&lt;String, Object&gt;&gt;&gt; E <span class="title function_">pageMaps</span><span class="params">(E page)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pageMaps(page, Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取对应 entity 的 BaseMapper</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> BaseMapper</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    BaseMapper&lt;T&gt; <span class="title function_">getBaseMapper</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取 entity 的 class</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Class&lt;T&gt;&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Class&lt;T&gt; <span class="title function_">getEntityClass</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 以下的方法使用介绍:</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 一. 名称介绍</span></span><br><span class="line"><span class="comment">     * 1. 方法名带有 query 的为对数据的查询操作, 方法名带有 update 的为对数据的修改操作</span></span><br><span class="line"><span class="comment">     * 2. 方法名带有 lambda 的为内部方法入参 column 支持函数式的</span></span><br><span class="line"><span class="comment">     * 二. 支持介绍</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 1. 方法名带有 query 的支持以 &#123;<span class="doctag">@link</span> ChainQuery&#125; 内部的方法名结尾进行数据查询操作</span></span><br><span class="line"><span class="comment">     * 2. 方法名带有 update 的支持以 &#123;<span class="doctag">@link</span> ChainUpdate&#125; 内部的方法名为结尾进行数据修改操作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 三. 使用示例,只用不带 lambda 的方法各展示一个例子,其他类推</span></span><br><span class="line"><span class="comment">     * 1. 根据条件获取一条数据: `query().eq(&quot;column&quot;, value).one()`</span></span><br><span class="line"><span class="comment">     * 2. 根据条件删除一条数据: `update().eq(&quot;column&quot;, value).remove()`</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链式查询 普通</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> QueryWrapper 的包装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> QueryChainWrapper&lt;T&gt; <span class="title function_">query</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.queryChain(getBaseMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链式查询 lambda 式</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;注意：不支持 Kotlin &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> LambdaQueryWrapper 的包装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> LambdaQueryChainWrapper&lt;T&gt; <span class="title function_">lambdaQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.lambdaQueryChain(getBaseMapper(), getEntityClass());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链式查询 lambda 式</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;注意：不支持 Kotlin &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> LambdaQueryWrapper 的包装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> LambdaQueryChainWrapper&lt;T&gt; <span class="title function_">lambdaQuery</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.lambdaQueryChain(getBaseMapper(), entity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链式查询 lambda 式</span></span><br><span class="line"><span class="comment">     * kotlin 使用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> KtQueryWrapper 的包装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> KtQueryChainWrapper&lt;T&gt; <span class="title function_">ktQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.ktQueryChain(getBaseMapper(), getEntityClass());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链式查询 lambda 式</span></span><br><span class="line"><span class="comment">     * kotlin 使用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> KtQueryWrapper 的包装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> KtUpdateChainWrapper&lt;T&gt; <span class="title function_">ktUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.ktUpdateChain(getBaseMapper(), getEntityClass());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链式更改 普通</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> UpdateWrapper 的包装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> UpdateChainWrapper&lt;T&gt; <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.updateChain(getBaseMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链式更改 lambda 式</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;注意：不支持 Kotlin &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> LambdaUpdateWrapper 的包装类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> LambdaUpdateChainWrapper&lt;T&gt; <span class="title function_">lambdaUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.lambdaUpdateChain(getBaseMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 根据updateWrapper尝试更新，否继续执行saveOrUpdate(T)方法</span></span><br><span class="line"><span class="comment">     * 此次修改主要是减少了此项业务代码的代码量（存在性验证之后的saveOrUpdate操作）</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">saveOrUpdate</span><span class="params">(T entity, Wrapper&lt;T&gt; updateWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> update(entity, updateWrapper) || saveOrUpdate(entity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.baomidou.mybatisplus.extension.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.Wrapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.enums.SqlMethod;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.TableInfo;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.metadata.TableInfoHelper;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.toolkit.SqlHelper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.binding.MapperMethod;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.Log;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.logging.LogFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.function.BiConsumer;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * IService 实现类（ 泛型：M 是 mapper 对象，T 是实体 ）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hubin</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2018-06-23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServiceImpl</span>&lt;M <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;T&gt;, T&gt; <span class="keyword">implements</span> <span class="title class_">IService</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">Log</span> <span class="variable">log</span> <span class="operator">=</span> LogFactory.getLog(getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> M baseMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> M <span class="title function_">getBaseMapper</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> baseMapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;T&gt; entityClass = currentModelClass();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;T&gt; <span class="title function_">getEntityClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entityClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;M&gt; mapperClass = currentMapperClass();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断数据库操作是否成功</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> result 数据库操作返回影响条数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@deprecated</span> 3.3.1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">retBool</span><span class="params">(Integer result)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;M&gt; <span class="title function_">currentMapperClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (Class&lt;M&gt;) ReflectionKit.getSuperClassGenericType(<span class="built_in">this</span>.getClass(), ServiceImpl.class, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;T&gt; <span class="title function_">currentModelClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (Class&lt;T&gt;) ReflectionKit.getSuperClassGenericType(<span class="built_in">this</span>.getClass(), ServiceImpl.class, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量操作 SqlSession</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@deprecated</span> 3.3.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">protected</span> SqlSession <span class="title function_">sqlSessionBatch</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.sqlSessionBatch(entityClass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放sqlSession</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sqlSession session</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@deprecated</span> 3.3.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">closeSqlSession</span><span class="params">(SqlSession sqlSession)</span> &#123;</span><br><span class="line">        SqlSessionUtils.closeSqlSession(sqlSession, GlobalConfigUtils.currentSessionFactory(entityClass));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取 SqlStatement</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sqlMethod ignore</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ignore</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> #getSqlStatement(SqlMethod)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@deprecated</span> 3.4.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">sqlStatement</span><span class="params">(SqlMethod sqlMethod)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.table(entityClass).getSqlStatement(sqlMethod.getMethod());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量插入</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entityList ignore</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> batchSize  ignore</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ignore</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlStatement</span> <span class="operator">=</span> getSqlStatement(SqlMethod.INSERT_ONE);</span><br><span class="line">        <span class="keyword">return</span> executeBatch(entityList, batchSize, (sqlSession, entity) -&gt; sqlSession.insert(sqlStatement, entity));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取mapperStatementId</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sqlMethod 方法名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 命名id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.4.0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> String <span class="title function_">getSqlStatement</span><span class="params">(SqlMethod sqlMethod)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.getSqlStatement(mapperClass, sqlMethod);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * TableId 注解存在更新记录，否插入一条记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> entity 实体对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">saveOrUpdate</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != entity) &#123;</span><br><span class="line">            <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.getTableInfo(<span class="built_in">this</span>.entityClass);</span><br><span class="line">            Assert.notNull(tableInfo, <span class="string">&quot;error: can not execute. because can not find cache of TableInfo for entity!&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">keyProperty</span> <span class="operator">=</span> tableInfo.getKeyProperty();</span><br><span class="line">            Assert.notEmpty(keyProperty, <span class="string">&quot;error: can not execute. because can not find column for id from entity!&quot;</span>);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">idVal</span> <span class="operator">=</span> tableInfo.getPropertyValue(entity, tableInfo.getKeyProperty());</span><br><span class="line">            <span class="keyword">return</span> StringUtils.checkValNull(idVal) || Objects.isNull(getById((Serializable) idVal)) ? save(entity) : updateById(entity);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">saveOrUpdateBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span> &#123;</span><br><span class="line">        <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.getTableInfo(entityClass);</span><br><span class="line">        Assert.notNull(tableInfo, <span class="string">&quot;error: can not execute. because can not find cache of TableInfo for entity!&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">keyProperty</span> <span class="operator">=</span> tableInfo.getKeyProperty();</span><br><span class="line">        Assert.notEmpty(keyProperty, <span class="string">&quot;error: can not execute. because can not find column for id from entity!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.saveOrUpdateBatch(<span class="built_in">this</span>.entityClass, <span class="built_in">this</span>.mapperClass, <span class="built_in">this</span>.log, entityList, batchSize, (sqlSession, entity) -&gt; &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">idVal</span> <span class="operator">=</span> tableInfo.getPropertyValue(entity, keyProperty);</span><br><span class="line">            <span class="keyword">return</span> StringUtils.checkValNull(idVal)</span><br><span class="line">                || CollectionUtils.isEmpty(sqlSession.selectList(getSqlStatement(SqlMethod.SELECT_BY_ID), entity));</span><br><span class="line">        &#125;, (sqlSession, entity) -&gt; &#123;</span><br><span class="line">            MapperMethod.ParamMap&lt;T&gt; param = <span class="keyword">new</span> <span class="title class_">MapperMethod</span>.ParamMap&lt;&gt;();</span><br><span class="line">            param.put(Constants.ENTITY, entity);</span><br><span class="line">            sqlSession.update(getSqlStatement(SqlMethod.UPDATE_BY_ID), param);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updateBatchById</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlStatement</span> <span class="operator">=</span> getSqlStatement(SqlMethod.UPDATE_BY_ID);</span><br><span class="line">        <span class="keyword">return</span> executeBatch(entityList, batchSize, (sqlSession, entity) -&gt; &#123;</span><br><span class="line">            MapperMethod.ParamMap&lt;T&gt; param = <span class="keyword">new</span> <span class="title class_">MapperMethod</span>.ParamMap&lt;&gt;();</span><br><span class="line">            param.put(Constants.ENTITY, entity);</span><br><span class="line">            sqlSession.update(sqlStatement, param);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, <span class="type">boolean</span> throwEx)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (throwEx) &#123;</span><br><span class="line">            <span class="keyword">return</span> baseMapper.selectOne(queryWrapper);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.getObject(log, baseMapper.selectList(queryWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">getMap</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.getObject(log, baseMapper.selectMaps(queryWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;V&gt; V <span class="title function_">getObj</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.getObject(log, listObjs(queryWrapper, mapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行批量操作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> consumer consumer</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.3.0</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@deprecated</span> 3.3.1 后面我打算移除掉 &#123;<span class="doctag">@link</span> #executeBatch(Collection, int, BiConsumer)&#125; &#125;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">executeBatch</span><span class="params">(Consumer&lt;SqlSession&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.executeBatch(<span class="built_in">this</span>.entityClass, <span class="built_in">this</span>.log, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行批量操作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list      数据集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> batchSize 批量大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> consumer  执行方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;E&gt;       泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 操作结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.3.1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> &lt;E&gt; <span class="type">boolean</span> <span class="title function_">executeBatch</span><span class="params">(Collection&lt;E&gt; list, <span class="type">int</span> batchSize, BiConsumer&lt;SqlSession, E&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.executeBatch(<span class="built_in">this</span>.entityClass, <span class="built_in">this</span>.log, list, batchSize, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行批量操作（默认批次提交数量&#123;<span class="doctag">@link</span> IService#DEFAULT_BATCH_SIZE&#125;）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list     数据集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> consumer 执行方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;E&gt;      泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 操作结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 3.3.1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> &lt;E&gt; <span class="type">boolean</span> <span class="title function_">executeBatch</span><span class="params">(Collection&lt;E&gt; list, BiConsumer&lt;SqlSession, E&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> executeBatch(list, DEFAULT_BATCH_SIZE, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Serializable id)</span> &#123;</span><br><span class="line">        <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.getTableInfo(getEntityClass());</span><br><span class="line">        <span class="keyword">if</span> (tableInfo.isWithLogicDelete() &amp;&amp; tableInfo.isWithUpdateFill()) &#123;</span><br><span class="line">            <span class="keyword">return</span> removeById(id, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">removeByIds</span><span class="params">(Collection&lt;?&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(list)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.getTableInfo(getEntityClass());</span><br><span class="line">        <span class="keyword">if</span> (tableInfo.isWithLogicDelete() &amp;&amp; tableInfo.isWithUpdateFill()) &#123;</span><br><span class="line">            <span class="keyword">return</span> removeBatchByIds(list, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteBatchIds(list));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Serializable id, <span class="type">boolean</span> useFill)</span> &#123;</span><br><span class="line">        <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.getTableInfo(entityClass);</span><br><span class="line">        <span class="keyword">if</span> (useFill &amp;&amp; tableInfo.isWithLogicDelete()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!entityClass.isAssignableFrom(id.getClass())) &#123;</span><br><span class="line">                <span class="type">T</span> <span class="variable">instance</span> <span class="operator">=</span> tableInfo.newInstance();</span><br><span class="line">                tableInfo.setPropertyValue(instance, tableInfo.getKeyProperty(), id);</span><br><span class="line">                <span class="keyword">return</span> removeById(instance);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">removeBatchByIds</span><span class="params">(Collection&lt;?&gt; list, <span class="type">int</span> batchSize)</span> &#123;</span><br><span class="line">        <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.getTableInfo(entityClass);</span><br><span class="line">        <span class="keyword">return</span> removeBatchByIds(list, batchSize, tableInfo.isWithLogicDelete() &amp;&amp; tableInfo.isWithUpdateFill());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">removeBatchByIds</span><span class="params">(Collection&lt;?&gt; list, <span class="type">int</span> batchSize, <span class="type">boolean</span> useFill)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sqlStatement</span> <span class="operator">=</span> getSqlStatement(SqlMethod.DELETE_BY_ID);</span><br><span class="line">        <span class="type">TableInfo</span> <span class="variable">tableInfo</span> <span class="operator">=</span> TableInfoHelper.getTableInfo(entityClass);</span><br><span class="line">        <span class="keyword">return</span> executeBatch(list, batchSize, (sqlSession, e) -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (useFill &amp;&amp; tableInfo.isWithLogicDelete()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (entityClass.isAssignableFrom(e.getClass())) &#123;</span><br><span class="line">                    sqlSession.update(sqlStatement, e);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">T</span> <span class="variable">instance</span> <span class="operator">=</span> tableInfo.newInstance();</span><br><span class="line">                    tableInfo.setPropertyValue(instance, tableInfo.getKeyProperty(), e);</span><br><span class="line">                    sqlSession.update(sqlStatement, instance);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sqlSession.update(sqlStatement, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-2-创建-Service-接口和实现类"><a href="#7-2-创建-Service-接口和实现类" class="headerlink" title="7.2 创建 Service 接口和实现类"></a>7.2 创建 Service 接口和实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* UserService继承IService模板提供的基础功能 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span>  <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* ServiceImpl实现了IService，提供了IService中基础功能的实现</span></span><br><span class="line"><span class="comment">* 若ServiceImpl无法满足业务需求，则可以使用自定的UserService定义方法，并在实现类中实现 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span>  <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-3-测试查询记录数"><a href="#7-3-测试查询记录数" class="headerlink" title="7.3 测试查询记录数"></a>7.3 测试查询记录数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetCount</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="comment">// 查询总记录数</span></span><br><span class="line">      <span class="comment">// SELECT COUNT( * ) AS total FROM user</span></span><br><span class="line">      <span class="type">long</span> <span class="variable">count</span> <span class="operator">=</span> userService.count();</span><br><span class="line">      System.out.println(<span class="string">&quot;总记录数: &quot;</span> + count);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406200954.png"></p><h4 id="7-4-测试批量插入"><a href="#7-4-测试批量插入" class="headerlink" title="7.4 测试批量插入"></a>7.4 测试批量插入</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSaveBatch</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 批量添加</span></span><br><span class="line">       <span class="comment">// INSERT INTO user ( id, name, age ) VALUES ( ?, ?, ? )</span></span><br><span class="line">       ArrayList&lt;User&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">10</span>;i++)&#123;</span><br><span class="line">           <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">           user.setName(<span class="string">&quot;lcx&quot;</span>+ i);</span><br><span class="line">           user.setAge(<span class="number">20</span>+i);</span><br><span class="line">           list.add(user);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> userService.saveBatch(list);</span><br><span class="line">       System.out.println(b);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406201034.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter03/20230406201053.png"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus入门案例</title>
      <link href="/posts/2B1C4A90.html"/>
      <url>/posts/2B1C4A90.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><h3 id="1-开发环境"><a href="#1-开发环境" class="headerlink" title="1. 开发环境"></a>1. 开发环境</h3><ul><li><strong>IDE：IntelliJ IDEA 2022.3 (Ultimate Edition)</strong></li><li><strong>JDK：JDK8+</strong></li><li><strong>构建工具：Apache Maven 3.8.6</strong></li><li><strong>MySQL版本：MySQL 5.5.62</strong></li><li><strong>Spring Boot ：2.7.8</strong></li><li><strong>MyBatis-Plus：3.5.3</strong></li></ul><h3 id="2-创建数据库及表"><a href="#2-创建数据库及表" class="headerlink" title="2. 创建数据库及表"></a>2. 创建数据库及表</h3><h4 id="2-1-创建表"><a href="#2-1-创建表" class="headerlink" title="2.1 创建表"></a>2.1 创建表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE mybatis_plus /*!40100 DEFAULT CHARACTER SET utf8mb4 */; </span><br><span class="line">use mybatis_plus;</span><br><span class="line">CREATE TABLE user</span><br><span class="line">(</span><br><span class="line">    id BIGINT(20) NOT NULL COMMENT &#x27;主键ID&#x27;,</span><br><span class="line">    name VARCHAR(30) NULL DEFAULT NULL COMMENT &#x27;姓名&#x27;,</span><br><span class="line">    age INT(11) NULL DEFAULT NULL COMMENT &#x27;年龄&#x27;,</span><br><span class="line">    email VARCHAR(50) NULL DEFAULT NULL COMMENT &#x27;邮箱&#x27;,</span><br><span class="line">    PRIMARY KEY (id)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><h4 id="2-2-添加数据"><a href="#2-2-添加数据" class="headerlink" title="2.2 添加数据"></a>2.2 添加数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO user (id, name, age, email) VALUES</span><br><span class="line">(1, &#x27;Jone&#x27;, 18, &#x27;test1@baomidou.com&#x27;),</span><br><span class="line">(2, &#x27;Jack&#x27;, 20, &#x27;test2@baomidou.com&#x27;),</span><br><span class="line">(3, &#x27;Tom&#x27;, 28, &#x27;test3@baomidou.com&#x27;),</span><br><span class="line">(4, &#x27;Sandy&#x27;, 21, &#x27;test4@baomidou.com&#x27;),</span><br><span class="line">(5, &#x27;Billie&#x27;, 24, &#x27;test5@baomidou.com&#x27;);</span><br></pre></td></tr></table></figure><h4 id="2-3-表结构"><a href="#2-3-表结构" class="headerlink" title="2.3 表结构"></a>2.3 表结构</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406194655033.png" alt="image-20230406194655033"></p><h3 id="3-创建-Spring-Boot-工程"><a href="#3-创建-Spring-Boot-工程" class="headerlink" title="3. 创建 Spring Boot 工程"></a>3. 创建 Spring Boot 工程</h3><h4 id="3-1-初始化工程"><a href="#3-1-初始化工程" class="headerlink" title="3.1 初始化工程"></a>3.1 初始化工程</h4><blockquote><p><strong>使用 Spring Initializr 快速初始化一个 Spring Boot 工程。</strong></p></blockquote><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406194725496.png" alt="image-20230406194725496"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406194735488.png" alt="image-20230406194735488"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406194744136.png" alt="image-20230406194744136"></p><h4 id="3-2-引入依赖"><a href="#3-2-引入依赖" class="headerlink" title="3.2 引入依赖"></a>3.2 引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--  mybatis-plus 启动器      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--  lombok 用于简化实体类开发      --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--   mysql 驱动     --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-idea-中安装-lombok-插件"><a href="#3-3-idea-中安装-lombok-插件" class="headerlink" title="3.3 idea 中安装 lombok 插件"></a>3.3 idea 中安装 lombok 插件</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406194822336.png" alt="image-20230406194822336"></p><h3 id="4-编写代码"><a href="#4-编写代码" class="headerlink" title="4. 编写代码"></a>4. 编写代码</h3><h4 id="4-1-配置-application-yml"><a href="#4-1-配置-application-yml" class="headerlink" title="4.1 配置 application.yml"></a>4.1 配置 application.yml</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># 配置数据源信息</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 配置数据源类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="comment"># 配置连接数据库信息</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><strong>驱动类 driver-class-name</strong><ul><li><strong>spring boot 2.0（内置jdbc5驱动），驱动类使用：driver-class-name: com.mysql.jdbc.Driver</strong></li><li><strong>spring boot 2.1及以上（内置jdbc8驱动），驱动类使用：driver-class-name: com.mysql.cj.jdbc.Driver</strong></li><li><strong>否则运行测试用例的时候会有 WARN 信息</strong></li></ul></li><li><strong>连接地址 url</strong><ul><li><strong>MySQL5.7版本的url：jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis_plus?characterEncoding&#x3D;utf-8&amp;useSSL&#x3D;false</strong></li><li><strong>MySQL8.0版本的url：jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis_plus?serverTimezone&#x3D;GMT%2B8&amp;characterEncoding&#x3D;utf-8&amp;useSSL&#x3D;false</strong></li><li><strong>否则运行测试用例报告如下错误：java.sql.SQLException: The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents more</strong></li></ul></li></ul><h4 id="4-2-启动类"><a href="#4-2-启动类" class="headerlink" title="4.2 启动类"></a>4.2 启动类</h4><blockquote><p><strong>在Spring Boot 启动类中添加 @MapperScan 注解，扫描 mapper 包</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 扫描 mapper 接口所在的包</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.atguigu.mybatisplus.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusDemoApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MybatisPlusDemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-添加实体类"><a href="#4-3-添加实体类" class="headerlink" title="4.3 添加实体类"></a>4.3 添加实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>User 类编译之后的结果：</strong></p></blockquote><p><strong>User 类编译之后的结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406194951724.png" alt="image-20230406194951724"></p><h4 id="4-4-添加-mapper"><a href="#4-4-添加-mapper" class="headerlink" title="4.4 添加 mapper"></a>4.4 添加 mapper</h4><blockquote><p><strong>BaseMapper 是 MyBatis-Plus 提供的模板 mapper，其中包含了基本的 CRUD 方法，泛型为操作的实体类型</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-5-测试"><a href="#4-5-测试" class="headerlink" title="4.5 测试"></a>4.5 测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPlusTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSelectList</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//selectList()根据MP内置的条件构造器查询一个list集合，null表示没有条件，即查询所有</span></span><br><span class="line">        List&lt;User&gt; list = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong>：</p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406195050835.png" alt="image-20230406195050835"></p><p><strong>注意：</strong></p><p><strong>IDEA 在 userMapper 处报错，因为找不到注入的对象，因为类是动态创建的，但是程序可以正确 的执行。</strong></p><p><strong>为了避免报错，可以在 mapper 接口上添加 @Repository 注解。</strong></p><h4 id="4-6-添加日志"><a href="#4-6-添加日志" class="headerlink" title="4.6 添加日志"></a>4.6 添加日志</h4><blockquote><p><strong>在 application.yml 中配置日志输出。</strong></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter02/image-20230406195129121.png" alt="image-20230406195129121"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatisPlus简介</title>
      <link href="/posts/1A2B3C4D.html"/>
      <url>/posts/1A2B3C4D.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/20230406140841.png"></p><hr><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p><strong><font style="color:red">MyBatis-Plus</font>（简称 MP）是一个 <font style="color:red">MyBatis 的增强工具</font>，在 MyBatis 的基础上<font style="color:red">只做增强不做改变</font>，为<font style="color:red">简化开发、提高效率而生。</font></strong></p><blockquote><p>愿景</p><p>我们的愿景是成为 MyBatis 最好的搭档，就像魂斗罗中的 1P、2P，基友搭配，效率翻倍。</p></blockquote><h3 id="2-特性"><a href="#2-特性" class="headerlink" title="2. 特性"></a>2. 特性</h3><ul><li><strong><font style="color:red">无侵入</font>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑。</strong></li><li><strong><font style="color:red">损耗小</font>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作。</strong></li><li><strong><font style="color:red">强大的 CRUD 操作</font>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求。</strong></li><li><strong><font style="color:red">支持 Lambda 形式调用</font>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错。</strong></li><li><strong><font style="color:red">支持主键自动生成</font>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题。</strong></li><li><strong><font style="color:red">支持 ActiveRecord 模式&#x3D;</font>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作。</strong></li><li><strong><font style="color:red">支持自定义全局通用操作</font>：支持全局通用方法注入（ Write once, use anywhere ）。</strong></li><li><strong><font style="color:red">内置代码生成器</font>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用。</strong></li><li><strong><font style="color:red">内置分页插件</font>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询。</strong></li><li><strong><font style="color:red">分页插件支持多种数据库</font>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库。</strong></li><li><strong><font style="color:red">内置性能分析插件</font>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询。</strong></li><li><strong><font style="color:red">内置全局拦截插件&#x3D;</font>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作。</strong></li></ul><h3 id="3-支持数据库"><a href="#3-支持数据库" class="headerlink" title="3. 支持数据库"></a>3. 支持数据库</h3><blockquote><p>任何能使用 MyBatis 进行 CRUD, 并且支持标准 SQL 的数据库，具体支持情况如下</p></blockquote><ul><li><strong>MySQL，Oracle，DB2，H2，HSQL，SQLite，PostgreSQL，SQLServer，Phoenix，Gauss ，ClickHouse，Sybase，OceanBase，Firebird，Cubrid，Goldilocks，csiidb，informix，TDengine，redshift</strong></li><li><strong>达梦数据库，虚谷数据库，人大金仓数据库，南大通用(华库)数据库，南大通用数据库，神通数据库，瀚高数据库，优炫数据库</strong></li></ul><h3 id="4-框架结构"><a href="#4-框架结构" class="headerlink" title="4. 框架结构"></a>4. 框架结构</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatisPlus/chapter01/20230406194303.png"></p><h3 id="5-文档及代码托管"><a href="#5-文档及代码托管" class="headerlink" title="5. 文档及代码托管"></a>5. 文档及代码托管</h3><p><strong>MyBatis-Plus 官方地址：<a href="https://baomidou.com/">https://baomidou.com/</a></strong></p><p><strong>代码托管：</strong></p><ul><li><strong>GitHub：<a href="https://github.com/baomidou/mybatis-plus">https://github.com/baomidou/mybatis-plus</a></strong></li><li><strong>Gitee：<a href="https://gitee.com/baomidou/mybatis-plus">https://gitee.com/baomidou/mybatis-plus</a></strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> MyBatisPlus教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis的增强工具 </tag>
            
            <tag> MyBatisPlus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3分页插件</title>
      <link href="/posts/A12B3C4D.html"/>
      <url>/posts/A12B3C4D.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-分页功能分析"><a href="#1-分页功能分析" class="headerlink" title="1. 分页功能分析"></a>1. 分页功能分析</h3><p>​<strong>limit index,pageSize</strong></p><ul><li><p><strong>pageSize：每页显示的条数</strong></p></li><li><p><strong>pageNum：当前页的页码</strong></p></li><li><p>*<em>index：当前页的起始索引，index&#x3D;(pageNum-1)<em>pageSize</em></em></p></li><li><p><strong>count：总记录数</strong></p></li><li><p><strong>totalPage：总页数</strong></p></li><li><p><strong>totalPage &#x3D; count &#x2F; pageSize;</strong></p></li></ul><p><strong>if(count % pageSize !&#x3D; 0){</strong></p><p><strong>totalPage +&#x3D; 1;</strong></p><p><strong>}</strong></p><p><strong>pageSize&#x3D;4，pageNum&#x3D;1，index&#x3D;0 limit 0,4</strong></p><p><strong>pageSize&#x3D;4，pageNum&#x3D;3，index&#x3D;8 limit 8,4</strong></p><p><strong>pageSize&#x3D;4，pageNum&#x3D;6，index&#x3D;20 limit 20,4</strong></p><p><strong><a>首页</a> <a>上一页</a> 2 3 4 5 6 <a>下一页</a> <a>末页</a></strong></p><h3 id="2-分页插件的使用步骤"><a href="#2-分页插件的使用步骤" class="headerlink" title="2. 分页插件的使用步骤"></a>2. 分页插件的使用步骤</h3><h4 id="2-1-添加依赖"><a href="#2-1-添加依赖" class="headerlink" title="2.1 添加依赖"></a>2.1 添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-配置分页插件"><a href="#2-2-配置分页插件" class="headerlink" title="2.2 配置分页插件"></a>2.2 配置分页插件</h4><blockquote><p><strong>在MyBatis的核心配置文件中配置插件</strong></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置分页插件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-通过分页插件获取分页相关数据"><a href="#3-通过分页插件获取分页相关数据" class="headerlink" title="3. 通过分页插件获取分页相关数据"></a>3. 通过分页插件获取分页相关数据</h3><h4 id="3-1-开启分页功能"><a href="#3-1-开启分页功能" class="headerlink" title="3.1 开启分页功能"></a>3.1 开启分页功能</h4><ul><li><p><strong>在查询功能之前使用 PageHelper.startPage(int pageNum, int pageSize) 开启分页功能</strong></p></li><li><p><strong>pageNum：当前页的页码</strong></p></li><li><p><strong>pageSize：每页显示的条数</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPage</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">        <span class="comment">// 查询功能之前开启分页功能</span></span><br><span class="line">        PageHelper.startPage(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">        List&lt;Emp&gt; list = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-分页相关数据"><a href="#3-2-分页相关数据" class="headerlink" title="3.2 分页相关数据"></a>3.2 分页相关数据</h4><blockquote><p>方法一：直接输出</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPage</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">        <span class="comment">// 查询功能之前开启分页功能</span></span><br><span class="line">        Page&lt;Object&gt; page = PageHelper.startPage(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">        List&lt;Emp&gt; list = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">        System.out.println(page);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>​<strong>分页相关数据：</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Page&#123;</span><br><span class="line">count=<span class="literal">true</span>, pageNum=1, pageSize=4, </span><br><span class="line">startRow=0, endRow=4, total=28, </span><br><span class="line">pages=7,</span><br><span class="line">reasonable=<span class="literal">false</span>, pageSizeZero=<span class="literal">false</span>&#125;</span><br><span class="line">[</span><br><span class="line">Emp&#123;empId=1, empName=<span class="string">&#x27;小红&#x27;</span>, age=20, gender=<span class="string">&#x27;女&#x27;</span>, deptId=1&#125;,</span><br><span class="line">Emp&#123;empId=2, empName=<span class="string">&#x27;李四&#x27;</span>, age=22, gender=<span class="string">&#x27;男&#x27;</span>, deptId=2&#125;,</span><br><span class="line">Emp&#123;empId=3, empName=<span class="string">&#x27;王五&#x27;</span>, age=23, gender=<span class="string">&#x27;男&#x27;</span>, deptId=3&#125;, </span><br><span class="line">Emp&#123;empId=4, empName=<span class="string">&#x27;赵六&#x27;</span>, age=24, gender=<span class="string">&#x27;男&#x27;</span>, deptId=1&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><h5 id="方法二：使用PageInfo"><a href="#方法二：使用PageInfo" class="headerlink" title="方法二：使用PageInfo"></a>方法二：使用PageInfo</h5></blockquote><ul><li><p><strong>在查询获取 list 集合之后，使用 PageInfo<T> pageInfo &#x3D; new PageInfo&lt;&gt;(List<T> list, intnavigatePages) 获取分页相关数据</strong></p></li><li><p><strong>list：分页之后的数据</strong></p></li><li><p><strong>navigatePages：导航分页的页码数</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPage</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">        <span class="comment">// 查询功能之前开启分页功能</span></span><br><span class="line">        Page&lt;Object&gt; page = PageHelper.startPage(<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line">        List&lt;Emp&gt; list = mapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 查询功能之后可以获取分页相关的所有数据</span></span><br><span class="line">        PageInfo&lt;Emp&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(list,<span class="number">5</span>);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">        System.out.println(pageInfo);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>分页相关数据：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PageInfo&#123;</span><br><span class="line">pageNum=1, pageSize=4, size=4,</span><br><span class="line">startRow=1, endRow=4, total=28, </span><br><span class="line">pages=7, </span><br><span class="line">list=Page&#123;</span><br><span class="line">count=<span class="literal">true</span>, pageNum=1, pageSize=4, startRow=0, endRow=4, total=28, pages=7, reasonable=<span class="literal">false</span>, pageSizeZero=<span class="literal">false</span>&#125;</span><br><span class="line">[</span><br><span class="line">Emp&#123;empId=1, empName=<span class="string">&#x27;小红&#x27;</span>, age=20, gender=<span class="string">&#x27;女&#x27;</span>, deptId=1&#125;, </span><br><span class="line">Emp&#123;empId=2, empName=<span class="string">&#x27;李四&#x27;</span>, age=22, gender=<span class="string">&#x27;男&#x27;</span>, deptId=2&#125;, </span><br><span class="line">Emp&#123;empId=3, empName=<span class="string">&#x27;王五&#x27;</span>, age=23, gender=<span class="string">&#x27;男&#x27;</span>, deptId=3&#125;, </span><br><span class="line">Emp&#123;empId=4, empName=<span class="string">&#x27;赵六&#x27;</span>, age=24, gender=<span class="string">&#x27;男&#x27;</span>, deptId=1&#125;</span><br><span class="line">], </span><br><span class="line">prePage=0, nextPage=2, isFirstPage=<span class="literal">true</span>,</span><br><span class="line">isLastPage=<span class="literal">false</span>, hasPreviousPage=<span class="literal">false</span>, </span><br><span class="line">hasNextPage=<span class="literal">true</span>, navigatePages=5, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]&#125;</span><br></pre></td></tr></table></figure><p><strong>其中 list 中的数据等同于方法一中直接输出的 page 数据</strong></p><h4 id="3-3-常用数据"><a href="#3-3-常用数据" class="headerlink" title="3.3 常用数据"></a>3.3 常用数据</h4><ul><li><strong>pageNum：当前页的页码</strong>  </li><li><strong>pageSize：每页显示的条数</strong>  </li><li><strong>size：当前页显示的真实条数</strong>  </li><li><strong>total：总记录数</strong>  </li><li><strong>pages：总页数</strong>  </li><li><strong>prePage：上一页的页码</strong>  </li><li><strong>nextPage：下一页的页码</strong></li><li><strong>isFirstPage&#x2F;isLastPage：是否为第一页&#x2F;最后一页</strong>  </li><li><strong>hasPreviousPage&#x2F;hasNextPage：是否存在上一页&#x2F;下一页</strong>  </li><li><strong>navigatePages：导航分页的页码数</strong>  </li><li><strong>navigatepageNums：导航分页的页码，[1,2,3,4,5]</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3的逆向工程</title>
      <link href="/posts/F0E1D2C3.html"/>
      <url>/posts/F0E1D2C3.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><p>​<strong>正向工程：先创建 Java 实体类，由框架负责根据实体类生成数据库表。 Hibernate 是支持正向工程的。</strong></p><p>​<strong>逆向工程：先创建数据库表，由框架负责根据数据库表，反向生成如下资源：</strong></p><ul><li><strong>Java实体类</strong></li><li><strong>Mapper接口</strong></li><li><strong>Mapper映射文件</strong></li></ul><h3 id="1-创建逆向工程的步骤"><a href="#1-创建逆向工程的步骤" class="headerlink" title="1. 创建逆向工程的步骤"></a>1. 创建逆向工程的步骤</h3><h4 id="1-1-添加依赖和插件"><a href="#1-1-添加依赖和插件" class="headerlink" title="1.1 添加依赖和插件"></a>1.1 添加依赖和插件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 依赖MyBatis核心包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 构建过程中用到的插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 插件的依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 逆向工程的核心依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- MySQL驱动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-创建-MyBatis-的核心配置文件"><a href="#1-2-创建-MyBatis-的核心配置文件" class="headerlink" title="1.2 创建 MyBatis 的核心配置文件"></a>1.2 创建 MyBatis 的核心配置文件</h4><h4 id="1-3-创建逆向工程的配置文件"><a href="#1-3-创建逆向工程的配置文件" class="headerlink" title="1.3 创建逆向工程的配置文件"></a>1.3 创建逆向工程的配置文件</h4><blockquote><p><strong>文件名必须是：generatorConfig.xml。</strong></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            targetRuntime: 执行生成的逆向工程的版本</span></span><br><span class="line"><span class="comment">                MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span></span><br><span class="line"><span class="comment">                MyBatis3: 生成带条件的CRUD（奢华尊享版）</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库的连接信息 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- javaBean的生成策略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.pojo&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- SQL映射文件的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\resources&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Mapper接口的生成策略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 逆向分析的表 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_emp&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Emp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;t_dept&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Dept&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-4-执行-MBG-插件的-generate-目标"><a href="#1-4-执行-MBG-插件的-generate-目标" class="headerlink" title="1.4 执行 MBG 插件的 generate 目标"></a>1.4 执行 MBG 插件的 generate 目标</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406134822.png"></p><h4 id="1-5-效果"><a href="#1-5-效果" class="headerlink" title="1.5 效果"></a>1.5 效果</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406134846.png"></p><h3 id="2-QBC-查询"><a href="#2-QBC-查询" class="headerlink" title="2. QBC 查询"></a>2. QBC 查询</h3><ul><li><strong><code>selectByExample</code>：按条件查询，需要传入一个 example 对象或者 null ；如果传入一个 null ，则表示没有条件，也就是查询所有数据。</strong></li><li><strong><code>example.createCriteria().xxx</code>：创建条件对象，通过 andXXX 方法为 SQL 添加查询添加，每个条件之间是 and 关系。</strong></li><li><strong><code>example.or().xxx</code>：将之前添加的条件通过 or 拼接其他条件。</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMBG</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">            <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//根据 id 查询数据</span></span><br><span class="line">            <span class="comment">// Emp emp = mapper.selectByPrimaryKey(1);</span></span><br><span class="line">            <span class="comment">// System.out.println(emp);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 查询所有数据</span></span><br><span class="line">            <span class="comment">// List&lt;Emp&gt; list = mapper.selectByExample(null);</span></span><br><span class="line">            <span class="comment">// list.forEach(System.out::println);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//根据条件查询数据</span></span><br><span class="line">            <span class="comment">// EmpExample example = new EmpExample();</span></span><br><span class="line">            <span class="comment">// example.createCriteria().andEmpNameEqualTo(&quot;张三&quot;).andAgeGreaterThan(20);</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="comment">// example.or().andGenderEqualTo(&quot;男&quot;);</span></span><br><span class="line">            <span class="comment">// List&lt;Emp&gt; list = mapper.selectByExample(example);</span></span><br><span class="line">            <span class="comment">// list.forEach(System.out::println);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>updateByPrimaryKey</code>：通过主键进行数据修改，如果某一个值为 null，也会将对应的字段改为 null。</strong></li><li><strong><code>mapper.updateByPrimaryKeySelective(emp);</code>，如果某一个某个字段值为 null，则不会修改该字段。</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMBG</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="number">1</span>,<span class="string">&quot;小黑&quot;</span>,<span class="literal">null</span>,<span class="string">&quot;女&quot;</span>);</span><br><span class="line">            <span class="comment">//测试普通修改功能</span></span><br><span class="line">            <span class="comment">// mapper.updateByPrimaryKey(emp);</span></span><br><span class="line">            <span class="comment">//测试选择性修改(如果某个字段赋值是null，则不会去修改该字段)</span></span><br><span class="line">            mapper.updateByPrimaryKeySelective(emp);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3的缓存</title>
      <link href="/posts/5F44A8B7.html"/>
      <url>/posts/5F44A8B7.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-MyBatis的一级缓存"><a href="#1-MyBatis的一级缓存" class="headerlink" title="1. MyBatis的一级缓存"></a>1. MyBatis的一级缓存</h3><p>​<strong>一级缓存是  <font style="color:red">SqlSession</font> 级别的，即使通过同一个 SqlSession 查询的数据会被缓存，再次使用同一个 SqlSession 查询同一条数据，会从缓存中获取，不会从数据库重新访问。</strong></p><p>​<strong><font style="color:red">Mybatis的一级缓存是默认开启的。</font></strong></p><p>​<strong>使一级缓存失效的四种情况：</strong></p><ol><li><p><strong>不同的 SqlSession 对应不同的一级缓存</strong></p></li><li><p><strong>同一个 SqlSession 但是查询条件不同</strong></p></li><li><p><strong>同一个 SqlSession 两次查询期间执行了任何一次增删改操作</strong></p></li><li><p><strong>同一个 SqlSession 两次查询期间手动清空了缓存</strong></p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据员工id查询员工信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> empId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Emp <span class="title function_">getEmpById</span><span class="params">(<span class="meta">@Param(&quot;empId&quot;)</span> Integer empId</span></span><br><span class="line"><span class="params">               </span></span><br><span class="line"><span class="params"><span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="params"> * 添加员工信息</span></span></span><br><span class="line"><span class="comment"><span class="params"> * @param emp</span></span></span><br><span class="line"><span class="comment"><span class="params"> */</span></span></span><br><span class="line"><span class="params"><span class="keyword">void</span> insertEmp(Emp emp)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Emp getEmpById(@Param(&quot;empId&quot;) Integer empId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">        select * from t_emp where emp_id = #&#123;empId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">&lt;!--void insertEmp(Emp emp);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertEmp&quot;</span>&gt;</span></span><br><span class="line">        insert into t_emp values(null,#&#123;empName&#125;,#&#123;age&#125;,#&#123;gender&#125;,null)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession1</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">CacheMapper</span> <span class="variable">mapper1</span> <span class="operator">=</span> sqlSession1.getMapper(CacheMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp1</span> <span class="operator">=</span> mapper1.getEmpById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 同一个 SqlSession 两次查询期间手动清空了缓存</span></span><br><span class="line">        sqlSession1.clearCache();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 同一个 SqlSession 两次查询期间执行了任何一次增删改操作</span></span><br><span class="line">        mapper1.insertEmp(<span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;小红&quot;</span>, <span class="number">25</span>, <span class="string">&quot;男&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp2</span> <span class="operator">=</span> mapper1.getEmpById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不同的 SqlSession 对应不同的一级缓存</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession2</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">CacheMapper</span> <span class="variable">mapper2</span> <span class="operator">=</span> sqlSession2.getMapper(CacheMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp3</span> <span class="operator">=</span> mapper2.getEmpById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp3);</span><br><span class="line">        <span class="comment">// 同一个 SqlSession 但是查询条件不同</span></span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp4</span> <span class="operator">=</span> mapper2.getEmpById(<span class="number">2</span>);</span><br><span class="line">        System.out.println(emp4);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406133258.png"></p><h3 id="2-MyBatis的二级缓存"><a href="#2-MyBatis的二级缓存" class="headerlink" title="2. MyBatis的二级缓存"></a>2. MyBatis的二级缓存</h3><p>​<strong>二级缓存是 SqlSessionFactory 级别，通过同一个 SqlSessionFactory 创建的 SqlSession 查询的结果会被缓存；再通过同一个 SqlSessionFactory 所获取的 SqlSession 查询相同的数据会从缓存中获取。</strong></p><p>​<strong><font style="color:red">二级缓存开启的条件：</font></strong></p><ol><li><strong>在核心配置文件中，设置全局配置属性cacheEnabled&#x3D;”true”，默认为true，不需要设置</strong></li><li><strong>在映射文件中设置标签<cache/></strong></li><li><strong>二级缓存必须在 SqlSession 关闭或提交之后有效</strong></li><li><strong>查询的数据所转换的实体类类型必须实现序列化的接口</strong></li></ol><p>​<strong><font style="color:red">使二级缓存失效的情况：</font></strong></p><ul><li><strong>两次查询之间执行了任意的增删改，会使一级和二级缓存同时失效</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCache</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(is);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession1</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">CacheMapper</span> <span class="variable">mapper1</span> <span class="operator">=</span> sqlSession1.getMapper(CacheMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp1</span> <span class="operator">=</span> mapper1.getEmpById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp1);</span><br><span class="line">        <span class="comment">//sqlSession1.close();</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession2</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">CacheMapper</span> <span class="variable">mapper2</span> <span class="operator">=</span> sqlSession2.getMapper(CacheMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp2</span> <span class="operator">=</span> mapper2.getEmpById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp2);</span><br><span class="line">       <span class="comment">// sqlSession2.close();</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406133553.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCache</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(is);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession1</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">CacheMapper</span> <span class="variable">mapper1</span> <span class="operator">=</span> sqlSession1.getMapper(CacheMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp1</span> <span class="operator">=</span> mapper1.getEmpById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp1);</span><br><span class="line">        sqlSession1.close();</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession2</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">CacheMapper</span> <span class="variable">mapper2</span> <span class="operator">=</span> sqlSession2.getMapper(CacheMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp2</span> <span class="operator">=</span> mapper2.getEmpById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp2);</span><br><span class="line">        sqlSession2.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406133634.png"></p><blockquote><p>这里报错的原因在于 Emp实体类没有实现序列化的接口</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Emp</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br></pre></td></tr></table></figure><p>​<strong>重新执行，运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406133712.png"></p><h3 id="3-二级缓存的相关配置"><a href="#3-二级缓存的相关配置" class="headerlink" title="3. 二级缓存的相关配置"></a>3. 二级缓存的相关配置</h3><p>​<strong>在 mappe r配置文件中添加的 cache 标签可以设置一些属性：</strong></p><p>​<strong>① eviction 属性：缓存回收策略，<font style="color:red">默认的是 LRU。</font></strong></p><ul><li><p><strong>LRU（Least Recently Used） – 最近最少使用的：移除最长时间不被使用的对象。</strong></p></li><li><p><strong>FIFO（First in First out） – 先进先出：按对象进入缓存的顺序来移除它们。</strong></p></li><li><p><strong>SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。</strong></p></li><li><p><strong>WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。</strong></p></li></ul><p>​<strong>②flushInterval属性：刷新间隔，单位毫秒</strong></p><ul><li><strong>默认情况是不设置，也就是没有刷新间隔，缓存仅仅调用语句时刷新</strong></li></ul><p>​<strong>③size属性：引用数目，正整数</strong></p><ul><li><strong>代表缓存最多可以存储多少个对象，太大容易导致内存溢出</strong></li></ul><p>​<strong>④readOnly 属性：只读， <font style="color:red">true&#x2F;false</font></strong></p><ul><li><p><strong>true：只读缓存；会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了 很重要的性能优势。</strong></p></li><li><p><strong>false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是 false 。</strong></p></li></ul><h3 id="4-MyBatis缓存查询的顺序（大范围到小范围）"><a href="#4-MyBatis缓存查询的顺序（大范围到小范围）" class="headerlink" title="4. MyBatis缓存查询的顺序（大范围到小范围）"></a>4. MyBatis缓存查询的顺序（大范围到小范围）</h3><p>​<strong>先查询二级缓存，因为二级缓存中可能会有其他程序已经查出来的数据，可以拿来直接使用。</strong></p><p>​<strong>如果二级缓存没有命中，再查询一级缓存</strong></p><p>​<strong>如果一级缓存也没有命中，则查询数据库</strong></p><p>​<strong>SqlSession关闭之后，一级缓存中的数据会写入二级缓存</strong></p><h3 id="5-整合第三方缓存EHCache（了解）"><a href="#5-整合第三方缓存EHCache（了解）" class="headerlink" title="5. 整合第三方缓存EHCache（了解）"></a>5. 整合第三方缓存EHCache（了解）</h3><h4 id="5-1-添加依赖"><a href="#5-1-添加依赖" class="headerlink" title="5.1 添加依赖"></a>5.1 添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Mybatis EHCache整合包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- slf4j日志门面的一个具体实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-2-各-jar-包功能"><a href="#5-2-各-jar-包功能" class="headerlink" title="5.2 各 jar 包功能"></a>5.2 各 jar 包功能</h4><table><thead><tr><th align="center"><strong>jar包名称</strong></th><th align="center"><strong>作用</strong></th></tr></thead><tbody><tr><td align="center"><strong>mybatis-ehcache</strong></td><td align="center"><strong>Mybatis和EHCache的整合包</strong></td></tr><tr><td align="center"><strong>ehcache</strong></td><td align="center"><strong>EHCache核心包</strong></td></tr><tr><td align="center"><strong>slf4j-api</strong></td><td align="center"><strong>SLF4J日志门面包</strong></td></tr><tr><td align="center"><strong>logback-classic</strong></td><td align="center"><strong>支持SLF4J门面接口的一个具体实现</strong></td></tr></tbody></table><h4 id="5-3-创建-EHCache-的配置文件-ehcache-xml"><a href="#5-3-创建-EHCache-的配置文件-ehcache-xml" class="headerlink" title="5.3 创建 EHCache 的配置文件 ehcache.xml"></a>5.3 创建 EHCache 的配置文件 ehcache.xml</h4><blockquote><p>名字必须叫<code>ehcache.xml。</code></p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;../config/ehcache.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 磁盘保存路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;D:\atguigu\ehcache&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">        <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">maxElementsOnDisk</span>=<span class="string">&quot;10000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">overflowToDisk</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">diskExpiryThreadIntervalSeconds</span>=<span class="string">&quot;120&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defaultCache</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-4-设置二级缓存的类型"><a href="#5-4-设置二级缓存的类型" class="headerlink" title="5.4 设置二级缓存的类型"></a>5.4 设置二级缓存的类型</h4><p><strong>在 CacheMapper.xml 中设置二级缓存类型。</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-5-加入logback日志"><a href="#5-5-加入logback日志" class="headerlink" title="5.5 加入logback日志"></a>5.5 加入logback日志</h4><p><strong>存在 SLF4J 时，作为简易日志的 log4j 将失效，此时我们需要借助 SLF4J 的具体实现 logback 来打印日志。 创建 logback 的配置文件 logback.xml</strong> </p><p><strong>名字必须是 logback.xml，不能改变。</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定日志输出的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 日志输出的格式 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 按照顺序分别是： 时间、日志级别、线程名称、打印日志的类、日志主体内容、换行--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>[%d&#123;HH:mm:ss.SSS&#125;] [%-5level] [%thread] [%logger][%msg]%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 设置全局日志级别。日志级别按顺序分别是： DEBUG、INFO、WARN、ERROR --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定任何一个日志级别都只打印当前级别和后面级别的日志。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定打印日志的appender，这里通过“STDOUT”引用了前面配置的appender --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 根据特殊需求指定局部日志级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span> <span class="attr">level</span>=<span class="string">&quot;DEBUG&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-6-EHCache-配置文件说明"><a href="#5-6-EHCache-配置文件说明" class="headerlink" title="5.6 EHCache 配置文件说明"></a>5.6 EHCache 配置文件说明</h4><table><thead><tr><th align="center"><strong>属性名</strong></th><th align="center"><strong>是否必须</strong></th><th align="left"><strong>作用</strong></th></tr></thead><tbody><tr><td align="center"><strong>maxElementsInMemory</strong></td><td align="center"><strong>是</strong></td><td align="left"><strong>在内存中缓存的element的最大数目</strong></td></tr><tr><td align="center"><strong>maxElementsOnDisk</strong></td><td align="center"><strong>是</strong></td><td align="left"><strong>在磁盘上缓存的element的最大数目，若是0表示无穷大</strong></td></tr><tr><td align="center"><strong>eternal</strong></td><td align="center"><strong>是</strong></td><td align="left"><strong>设定缓存的elements是否永远不过期。 如果为true，则缓存的数据始终有效， 如果为false那么还要根据timeToIdleSeconds、timeToLiveSeconds判断</strong></td></tr><tr><td align="center"><strong>overflowToDisk</strong></td><td align="center"><strong>是</strong></td><td align="left"><strong>设定当内存缓存溢出的时候是否将过期的element缓存到磁盘上</strong></td></tr><tr><td align="center"><strong>timeToIdleSeconds</strong></td><td align="center"><strong>否</strong></td><td align="left"><strong>当缓存在EhCache中的数据前后两次访问的时间超过timeToIdleSeconds的属性取值时， 这些数据便会删除，默认值是0,也就是可闲置时间无穷大</strong></td></tr><tr><td align="center"><strong>timeToLiveSeconds</strong></td><td align="center"><strong>否</strong></td><td align="left"><strong>缓存element的有效生命期，默认是0.,也就是element存活时间无穷大</strong></td></tr><tr><td align="center"><strong>diskSpoolBufferSizeMB</strong></td><td align="center"><strong>否</strong></td><td align="left"><strong>DiskStore(磁盘缓存)的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区</strong></td></tr><tr><td align="center"><strong>diskPersistent</strong></td><td align="center"><strong>否</strong></td><td align="left"><strong>在VM重启的时候是否启用磁盘保存EhCache中的数据，默认是false。</strong></td></tr><tr><td align="center"><strong>diskExpiryThreadIntervalSeconds</strong></td><td align="center"><strong>否</strong></td><td align="left"><strong>磁盘缓存的清理线程运行间隔，默认是120秒。每个120s， 相应的线程会进行一次EhCache中数据的清理工作</strong></td></tr><tr><td align="center"><strong>memoryStoreEvictionPolicy</strong></td><td align="center"><strong>否</strong></td><td align="left"><strong>当内存缓存达到最大，有新的element加入的时候， 移除缓存中element的策略。 默认是LRU （最近最少使用），可选的有LFU （最不常使用）和FIFO （先进先出）</strong></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3动态SQL</title>
      <link href="/posts/DEADBEEF.html"/>
      <url>/posts/DEADBEEF.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-if"><a href="#1-if" class="headerlink" title="1. if"></a>1. if</h3><p><strong>if标签可<font style="color:red">通过 test 属性的表达式进行判断标签中的内容是否有效，若表达式的结果为true，则会拼接到sql中；反之标签中的内容不会拼接到sql中。</font></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据条件查询员工信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> emp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Emp&gt; <span class="title function_">getEmpByCondition</span><span class="params">(Emp emp)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">    select * from t_emp where</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">        emp_name = #&#123;empName&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">        and age = #&#123;age&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender != null and gender != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">        and gender = #&#123;gender&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpByCondition</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">20</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        List&lt;Emp&gt; list = mapper.getEmpByCondition(emp);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406131421.png"></p><blockquote><p>如果此时没给 empName 赋值，则会报错，那么应该怎么办呢？</p></blockquote><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406131506.png"></p><ul><li><strong><font style="color:red">在where后面添加一个恒成立条件<code>1=1</code>。</font></strong></li><li><strong>这个恒成立条件并不会影响查询的结果。</strong><ul><li><strong>这个<code>1=1</code>可以用来拼接<code>and</code>语句，例如：<font style="color:red">当empName为null时：</font></strong></li><li><strong>如果不加上恒成立条件，则SQL语句为<code>select * from t_emp where and age = ? and gender = ? </code>，此时<code>where</code>会与<code>and</code>连用，SQL语句会报错。</strong></li><li><strong>如果加上一个恒成立条件，则SQL语句为<code>select * from t_emp where 1= 1  and age = ? and gender = ? </code>，此时不报错。</strong></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">      select * from t_emp where 1=1</span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">         and emp_name = #&#123;empName&#125;</span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age !=&#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">          and age = #&#123;age&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender != null and gender != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">          and gender = #&#123;gender&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpByCondition</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">      <span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">      <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;&quot;</span>, <span class="number">20</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">      List&lt;Emp&gt; list = mapper.getEmpByCondition(emp);</span><br><span class="line">      list.forEach(System.out::println);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406131635.png"></p><h3 id="2-where"><a href="#2-where" class="headerlink" title="2. where"></a>2. where</h3><p>​<strong>where 和 if 一般结合使用：</strong></p><ul><li><p><strong>若 where 标签中的 if 条件<font style="color:red">都不满足，则 where 标签没有任何功能，即不会添加 where 关键字。</font></strong></p></li><li><p><strong>若 where 标签中的 if 条件<font style="color:red">满足，则 where 标签会自动添加 where 关键字，并会自动将where标签中内容前多余的and去掉。</font></strong></p></li></ul><p>​<strong>注意：<font style="color:red">where 标签不能去掉条件最后多余的 and 。</font></strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">        select * from t_emp</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                emp_name = #&#123;empName&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and age = #&#123;age&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender != null and gender != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and gender = #&#123;gender&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpByCondition</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">       <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;&quot;</span>, <span class="number">20</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">       List&lt;Emp&gt; list = mapper.getEmpByCondition(emp);</span><br><span class="line">       list.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​<strong>if 条件满足的运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406131758.png"></p><p>​<strong>if 条件都不满足的运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406131824.png"></p><blockquote><p>若将 and 写在条件后，则会报错</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">        select * from t_emp</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                emp_name = #&#123;empName&#125; and</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                 age = #&#123;age&#125; and</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender != null and gender != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                 gender = #&#123;gender&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406131903.png"></p><h3 id="3-trim"><a href="#3-trim" class="headerlink" title="3. trim"></a>3. trim</h3><ul><li><p><strong>trim用于去掉或添加标签中的内容</strong></p></li><li><p><strong>常用属性：</strong></p><ul><li><p><strong>prefix：在trim标签中的内容的<font style="color:red">前面添加</font>某些内容</strong></p></li><li><p><strong>suffix：在trim标签中的内容的<font style="color:red">后面添加</font>某些内容</strong></p></li><li><p><strong>prefixOverrides：在trim标签中的内容的<font style="color:red">前面去掉</font>某些内容</strong></p></li><li><p><strong>suffixOverrides：在trim标签中的内容的<font style="color:red">后面去掉</font>某些内容</strong></p></li></ul></li><li><p><strong>若trim中的标签都不满足条件，则trim标签没有任何效果，也就是只剩下<code>select * from t_emp</code></strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByCondition(Emp emp);--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByCondition&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">     select * from t_emp</span><br><span class="line">     <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;where&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;and&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">             emp_name = #&#123;empName&#125; and</span><br><span class="line">         <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">             age = #&#123;age&#125; and</span><br><span class="line">         <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gender != null and gender != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">             gender = #&#123;gender&#125;</span><br><span class="line">         <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406132030.png"></p><h3 id="4-choose、when、otherwise"><a href="#4-choose、when、otherwise" class="headerlink" title="4. choose、when、otherwise"></a>4. choose、when、otherwise</h3><ul><li><p><strong>choose、when、otherwise相当于<code>if...else if..else</code>。</strong></p></li><li><p><strong><font style="color:red">when 至少设置一个，otherwise 最多设置一个。</font></strong></p></li><li><p><strong>相当于<code>if a else if b else if c else d</code>，只会执行其中一个。</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用choose查询员工信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> emp</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Emp&gt; <span class="title function_">getEmpByChoose</span><span class="params">(Emp emp)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;Emp&gt; getEmpByChoose(Emp emp);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByChoose&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">        select * from t_emp</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;empName != null and empName != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    emp_name = #&#123;empName&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;age != null and age != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    age = #&#123;age&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;gender != null and gender != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                    gender = #&#123;gender&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpByChoose</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">20</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        List&lt;Emp&gt; list = mapper.getEmpByChoose(emp);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406132158.png"></p><h3 id="5-foreach"><a href="#5-foreach" class="headerlink" title="5. foreach"></a>5. foreach</h3><p>​<strong>collection：设置要循环的数组或集合。</strong> </p><ul><li><strong>item：用一个字符串表示集合或数组中的每一个数据。</strong>  </li><li><strong>separator：设置循环体之间的分隔符，分隔符前后默认有一个空格，如<code>,</code>。</strong></li><li><strong>open：设置foreach标签中的内容的开始符。</strong>  </li><li><strong>close：设置foreach标签中的内容的结束符。</strong></li></ul><p>​<strong>批量添加：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 批量添加员工信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> emps</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">void</span> <span class="title function_">insertMoreEmp</span><span class="params">(<span class="meta">@Param(&quot;emps&quot;)</span> List&lt;Emp&gt; emps)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--void insertMoreEmp(@Param(&quot;emps&quot;) List&lt;Emp&gt; emps);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertMoreEmp&quot;</span>&gt;</span></span><br><span class="line">        insert into t_emp values</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">item</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            (null,#&#123;emp.empName&#125;,#&#123;emp.age&#125;,#&#123;emp.gender&#125;,null)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsertMoreEmp</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;小明1&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;小明2&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>, <span class="string">&quot;小明3&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line">        List&lt;Emp&gt; list = Arrays.asList(emp1, emp2, emp3);</span><br><span class="line">        mapper.insertMoreEmp(list);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406132348.png"></p><p>​<strong>数据表结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406132424.png"></p><p>​<strong>批量删除：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 批量删除</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> empIds</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">void</span> <span class="title function_">deleteMoreEmp</span><span class="params">(<span class="meta">@Param(&quot;empIds&quot;)</span> Integer[] empIds)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--void deleteMoreEmp(@Param(&quot;empIds&quot;) Integer[] empIds);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteMoreEmp&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--delete from t_emp where emp_id in</span></span><br><span class="line"><span class="comment">        &lt;foreach collection=&quot;empIds&quot; item=&quot;empId&quot; separator=&quot;,&gt;</span></span><br><span class="line"><span class="comment">            #&#123;empId&#125;</span></span><br><span class="line"><span class="comment">        &lt;/foreach&gt;--&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--delete from t_emp where emp_id in</span></span><br><span class="line"><span class="comment">        &lt;foreach collection=&quot;empIds&quot; item=&quot;empId&quot; separator=&quot;,&quot; open=&quot;(&quot; close=&quot;)&quot;&gt;</span></span><br><span class="line"><span class="comment">            #&#123;empId&#125;</span></span><br><span class="line"><span class="comment">        &lt;/foreach&gt;--&gt;</span></span><br><span class="line">        </span><br><span class="line">        delete from t_emp where</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;empIds&quot;</span> <span class="attr">item</span>=<span class="string">&quot;empId&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;or&quot;</span>&gt;</span></span><br><span class="line">            emp_id = #&#123;empId&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteMoreEmp</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">DynamicSQLMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DynamicSQLMapper.class);</span><br><span class="line">        Integer[] empIds = <span class="keyword">new</span> <span class="title class_">Integer</span>[]&#123;<span class="number">6</span>,<span class="number">7</span>&#125;;</span><br><span class="line">        mapper.deleteMoreEmp(empIds);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406132526.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406132551.png"></p><p>​<strong>数据表结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406132622.png"></p><h3 id="6-SQL-片段"><a href="#6-SQL-片段" class="headerlink" title="6. SQL 片段"></a>6. SQL 片段</h3><ul><li><strong>sql片段，可以记录一段公共 sql 片段，在使用的地方通过 include 标签进行引用</strong></li><li><strong>声明sql片段：<code>&lt;sql&gt;</code>标签</strong></li><li><strong>引用sql片段：<code>&lt;include&gt;</code>标签</strong></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;empColumns&quot;</span>&gt;</span></span><br><span class="line">        emp_id,emp_name,age,gender,dept_id</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select<span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;empColumns&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span> from t_emp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3自定义映射resultMap</title>
      <link href="/posts/ABCD1234.html"/>
      <url>/posts/ABCD1234.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-全局配置处理字段和属性的映射关系"><a href="#1-全局配置处理字段和属性的映射关系" class="headerlink" title="1. 全局配置处理字段和属性的映射关系"></a>1. 全局配置处理字段和属性的映射关系</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> empId:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Emp</span></span><br><span class="line"><span class="comment"> * TODO</span></span><br><span class="line"><span class="comment"> * 根据 id 查询员工信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">Emp  <span class="title function_">getEmpByEmpId</span><span class="params">(<span class="meta">@Param(&quot;empId&quot;)</span> Integer empId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    Emp  getEmpByEmpId(@Param(&quot;empId&quot;) Integer empId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByEmpId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;emp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select * from t_emp where emp_id = #&#123;empId&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpByEmpId</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">       <span class="type">Emp</span> <span class="variable">empByEmpId</span> <span class="operator">=</span> mapper.getEmpByEmpId(<span class="number">1</span>);</span><br><span class="line">       System.out.println(empByEmpId);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406124729.png"></p><p>​<strong>发现 empId 和 empName 的值都是 null，原因在于<font style="color:red">字段符合 MySQL 的要求使用_，而属性符合 Java 的要求使用驼峰，实体类的属性值和数据库中的字段名不一致导致的。</font></strong></p><h4 id="8-1-方案1"><a href="#8-1-方案1" class="headerlink" title="8.1 方案1"></a>8.1 方案1</h4><blockquote><p>直接对不一致的字段取别名</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    Emp  getEmpByEmpId(@Param(&quot;empId&quot;) Integer empId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByEmpId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;emp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select emp_id  empId,emp_name empName,age,gender from t_emp where emp_id = #&#123;empId&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406124903.png"></p><h4 id="8-2-方案2"><a href="#8-2-方案2" class="headerlink" title="8.2 方案2"></a>8.2 方案2</h4><blockquote><p>在 MyBatis 的核心配置文件中设置一个全局配置，可以自动将下划线映射为驼峰</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    Emp  getEmpByEmpId(@Param(&quot;empId&quot;) Integer empId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByEmpId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;emp&quot;</span>&gt;</span></span><br><span class="line">        select * from t_emp where emp_id = #&#123;empId&#125; </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406125000.png"></p><h3 id="2-resultMap-处理字段和属性的映射关系"><a href="#2-resultMap-处理字段和属性的映射关系" class="headerlink" title="2. resultMap 处理字段和属性的映射关系"></a>2. resultMap 处理字段和属性的映射关系</h3><blockquote><p>若字段名和实体类中的属性名不一致，则可以通过resultMap设置自定义映射</p></blockquote><ul><li><strong>resultMap：设置自定义的映射关系。</strong><ul><li><strong>属性：</strong><ul><li><strong>id：当前命名空间中的一个唯一标识，用于标识一个结果映射。</strong></li><li><strong>type：类的完全限定名, 或者一个类型别名。</strong></li></ul></li></ul></li><li><strong>子标签：</strong><ul><li><strong>id：处理主键和实体类中属性的映射关系。</strong></li><li><strong>result：处理普通字段和实体类中属性的映射关系。</strong></li><li><strong>association：设置多对一的映射关系。</strong></li><li><strong>collection：设置一对多的映射关系。</strong></li><li><strong>属性：</strong><ul><li><strong>property：设置映射关系中的属性的属性名，必须是处理的实体类类型中的属性名。</strong></li><li><strong>column：设置映射关系中的字段名，必须是 sql 查询出的某个字段。</strong></li></ul></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- &lt;id property=&quot;emp_id&quot; column=&quot;empId&quot;&gt;&lt;/id&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;empId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span> =<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    Emp  getEmpByEmpId(@Param(&quot;empId&quot;) Integer empId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpByEmpId&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empResultMap&quot;</span>&gt;</span></span><br><span class="line">        select * from t_emp where emp_id = #&#123;empId&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpByEmpId</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">empByEmpId</span> <span class="operator">=</span> mapper.getEmpByEmpId(<span class="number">1</span>);</span><br><span class="line">        System.out.println(empByEmpId);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406125110.png"></p><h3 id="3-多对一映射处理"><a href="#3-多对一映射处理" class="headerlink" title="3. 多对一映射处理"></a>3. 多对一映射处理</h3><p>​<strong>场景模拟：</strong></p><ul><li><strong>查询员工信息以及员工所对应的部门信息</strong></li></ul><h4 id="3-1-多对一映射关系功能分析"><a href="#3-1-多对一映射关系功能分析" class="headerlink" title="3.1 多对一映射关系功能分析"></a>3.1 多对一映射关系功能分析</h4><ul><li><strong><font style="color:red">对一对应的是一个对象</font></strong></li><li><strong><font style="color:red">对多对应的是一个集合</font></strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> empId:</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> Emp</span></span><br><span class="line"><span class="comment">   * TODO</span></span><br><span class="line"><span class="comment">   * 获取员工以及所对应的部门信息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  Emp <span class="title function_">getEmpAndDeptByEmpId</span><span class="params">(<span class="meta">@Param(&quot;empId&quot;)</span>Integer empId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    Emp getEmpAndDeptByEmpId(@Param(&quot;empId&quot;)Integer empId);--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByEmpId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            select *</span><br><span class="line">            from t_emp</span><br><span class="line">            left join t_dept</span><br><span class="line">            on t_emp.dept_id = t_dept.dept_id where t_emp.emp_id = #&#123;empId&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpAndDeptByEmpId</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">    <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">    <span class="type">Emp</span> <span class="variable">empAndDeptByEmpId</span> <span class="operator">=</span> mapper.getEmpAndDeptByEmpId(<span class="number">1</span>);</span><br><span class="line">    System.out.println(empAndDeptByEmpId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406125330.png"></p><h4 id="3-2-级联方式处理映射关系"><a href="#3-2-级联方式处理映射关系" class="headerlink" title="3.2 级联方式处理映射关系"></a>3.2 级联方式处理映射关系</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;empId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;dept.deptId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;dept.deptName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    Emp getEmpAndDeptByEmpId(@Param(&quot;empId&quot;)Integer empId);--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByEmpId&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empAndDeptResultMap&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            select *</span><br><span class="line">            from t_emp</span><br><span class="line">            left join t_dept</span><br><span class="line">            on t_emp.dept_id = t_dept.dept_id where t_emp.emp_id = #&#123;empId&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406125447.png"></p><h4 id="3-3-使用-association-处理映射关系"><a href="#3-3-使用-association-处理映射关系" class="headerlink" title="3.3 使用 association 处理映射关系"></a>3.3 使用 association 处理映射关系</h4><p><strong>association:处理多对一的映射关系（处理实体类类型的属性）。</strong></p><ul><li><strong>属性：</strong><ul><li><strong>property：设置需要处理映射关系的属性的属性名。</strong></li><li><strong>javaType：设置要处理的属性的类型。</strong></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;empId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;deptId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;deptName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    Emp getEmpAndDeptByEmpId(@Param(&quot;empId&quot;)Integer empId);--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByEmpId&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empAndDeptResultMap&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            select *</span><br><span class="line">            from t_emp</span><br><span class="line">            left join t_dept</span><br><span class="line">            on t_emp.dept_id = t_dept.dept_id where t_emp.emp_id = #&#123;empId&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406125546.png"></p><h4 id="3-4-分步查询"><a href="#3-4-分步查询" class="headerlink" title="3.4 分步查询"></a>3.4 分步查询</h4><blockquote><p>3.4.1 查询员工信息</p></blockquote><ul><li><p><strong>property：设置需要处理映射关系的属性的属性名。</strong></p></li><li><p><strong>select：设置分布查询的sql的唯一标识（namespace.SQLId或mapper接口的全类名.方法名）。</strong></p></li><li><p><strong>column：将查询出的某个字段作为分步查询的 sql 条件。</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> empId:</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> Emp</span></span><br><span class="line"><span class="comment">    * TODO</span></span><br><span class="line"><span class="comment">    * 通过分步查询员工以及员工所对应的部分信息的第一步</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   Emp <span class="title function_">getEmpAndDeptByStepOne</span><span class="params">(<span class="meta">@Param(&quot;empId&quot;)</span>Integer empId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptByStepResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;empId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">association</span> </span></span><br><span class="line"><span class="tag">                    </span></span><br><span class="line"><span class="tag">                     <span class="attr">property</span>=<span class="string">&quot;dept&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">select</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">column</span>=<span class="string">&quot;dept_id&quot;</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    Emp getEmpAndDeptByStepOne(@Param(&quot;empId&quot;)Integer empId);--&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByStepOne&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;empAndDeptByStepResultMap&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select * from t_emp where emp_id = #&#123;empId&#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>3.4.2 根据员工所对应的部门 id 查询部门信息</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> :</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> Dept</span></span><br><span class="line"><span class="comment">    * TODO</span></span><br><span class="line"><span class="comment">    * 通过分步查询员工以及员工所对应的部分信息的第二步</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">   Dept <span class="title function_">getEmpAndDeptByStepTwo</span><span class="params">(<span class="meta">@Param(&quot;deptId&quot;)</span> Integer deptId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    Dept getEmpAndDeptByStepTwo(@Param(&quot;deptId&quot;) Integer deptId);--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getEmpAndDeptByStepTwo&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        select * from t_dept where dept_id = #&#123;deptId&#125;</span><br><span class="line">      </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpAndDeptByStepOne</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">empAndDeptByEmpId</span> <span class="operator">=</span> mapper.getEmpAndDeptByStepOne(<span class="number">1</span>);</span><br><span class="line">        System.out.println(empAndDeptByEmpId);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406125705.png"></p><h3 id="4-一对多映射处理"><a href="#4-一对多映射处理" class="headerlink" title="4. 一对多映射处理"></a>4. 一对多映射处理</h3><h4 id="4-1-collection"><a href="#4-1-collection" class="headerlink" title="4.1 collection"></a>4.1 collection</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> deptId:</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Dept</span></span><br><span class="line"><span class="comment">     * TODO</span></span><br><span class="line"><span class="comment">     * 查询部门以及部门中的员工信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Dept <span class="title function_">getDeptAndEmpByDeptId</span><span class="params">(<span class="meta">@Param(&quot;deptId&quot;)</span> Integer deptId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;deptAndEmpResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;dept_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;deptId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;deptName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            ofType：设置集合类型的属性中存储的数据的类型</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;emps&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;empId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span> =<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    Dept getDeptAndEmpByDeptId(@Param(&quot;deptId&quot;) int deptId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getDeptAndEmpByDeptId&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;deptAndEmpResultMap&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select *</span><br><span class="line">        from t_dept</span><br><span class="line">        left join t_emp</span><br><span class="line">        on t_dept.dept_id = t_emp.dept_id</span><br><span class="line">        where t_dept.dept_id = #&#123;deptId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpAndDeptByDeptId</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">DeptMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DeptMapper.class);</span><br><span class="line">        <span class="type">Dept</span> <span class="variable">dept</span> <span class="operator">=</span> mapper.getDeptAndEmpByDeptId(<span class="number">1</span>);</span><br><span class="line">        System.out.println(dept);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406125910.png"></p><h4 id="4-2-分步查询"><a href="#4-2-分步查询" class="headerlink" title="4.2 分步查询"></a>4.2 分步查询</h4><blockquote><p>4.2.1 查询部门信息</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> deptId:</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> Dept</span></span><br><span class="line"><span class="comment">    * TODO</span></span><br><span class="line"><span class="comment">    * 通过分步查询查询部门以及部门中的员工信息的第一步</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">   Dept <span class="title function_">getDeptAndEmpByStepOne</span><span class="params">(<span class="meta">@Param(&quot;deptId&quot;)</span> Integer deptId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;deptAndEmpResultMapByStep&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Dept&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;dept_id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;deptId&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;dept_name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;deptName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">property</span>=<span class="string">&quot;emps&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">select</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.EmpMapper.getDeptAndEmpByStepTwo&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">column</span>=<span class="string">&quot;dept_id&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">fetchType</span>=<span class="string">&quot;eager&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    Dept getDeptAndEmpByStepOne(@Param(&quot;deptId&quot;) Integer deptId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getDeptAndEmpByStepOne&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;deptAndEmpResultMapByStep&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        select * from t_dept where dept_id = #&#123;deptId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>4.2.2 根据部门 id 查询部门中的所有员工</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> deptId:</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> List&lt;Emp&gt;</span></span><br><span class="line"><span class="comment">  * TODO</span></span><br><span class="line"><span class="comment">  * 通过分步查询查询部门以及部门中的员工信息的第二步</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"> List&lt;Emp&gt; <span class="title function_">getDeptAndEmpByStepTwo</span><span class="params">(<span class="meta">@Param(&quot;deptId&quot;)</span> Integer deptId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    List&lt;Emp&gt; getDeptAndEmpByStepTwo(@Param(&quot;deptId&quot;) Integer deptId);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getDeptAndEmpByStepTwo&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        select * from t_emp where dept_id =#&#123;deptId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetDeptAndEmpByStepOne</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">DeptMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(DeptMapper.class);</span><br><span class="line">        <span class="type">Dept</span> <span class="variable">dept</span> <span class="operator">=</span> mapper.getDeptAndEmpByStepOne(<span class="number">1</span>);</span><br><span class="line">        System.out.println(dept);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406130108.png"></p><h3 id="5-延迟加载"><a href="#5-延迟加载" class="headerlink" title="5. 延迟加载"></a>5. 延迟加载</h3><ul><li><p><strong>分步查询的优点：可以&#x3D;&#x3D;实现延迟加载&#x3D;&#x3D;，但是必须在核心配置文件中设置全局配置信息：</strong></p><ul><li><p><strong>lazyLoadingEnabled：延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。</strong></p></li><li><p><strong>aggressiveLazyLoading：当开启时，任何方法的调用都会加载该对象的所有延迟加载属性。否则，每个延迟加载属性会按需加载。</strong></p></li></ul></li><li><p><strong>此时就可以实现按需加载，获取的数据是什么，就只会执行相应的 sql 。此时可通过 association 和 collection 中的 fetchType 属性设置当前的分步查询是否使用延迟加载， &#x3D;&#x3D;fetchType&#x3D;”lazy(延迟加载)|eager(立即加载)”。&#x3D;&#x3D;</strong></p></li></ul><blockquote><p>在 mybatis-config.xml中补充如下代码：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--   开启延迟加载     --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--   按需加载     --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;aggressiveLazyLoading&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpAndDeptByStepOne</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">       <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> mapper.getEmpAndDeptByStepOne(<span class="number">1</span>);</span><br><span class="line">       System.out.println(emp.getEmpName());</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​<strong>关闭延迟加载，两条SQL语句都运行了</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406130911.png"></p><p>​<strong>开启延迟加载，只运行获取emp的SQL语句</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406130935.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetEmpAndDeptByStepOne</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">EmpMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(EmpMapper.class);</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> mapper.getEmpAndDeptByStepOne(<span class="number">1</span>);</span><br><span class="line">        System.out.println(emp.getEmpName());</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------&quot;</span>);</span><br><span class="line">        System.out.println(emp.getDept());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>开启后，需要用到查询dept的时候才会调用相应的SQL语句</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406131013.png"></p><p>​<strong>fetchType：当开启了全局的延迟加载之后，可以通过该属性手动控制延迟加载的效果，fetchType&#x3D;”lazy(延迟加载)|eager(立即加载)”</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;empAndDeptByStepResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Emp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;empId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;empName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;emp_name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;age&quot;</span> <span class="attr">column</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gender&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            property：设置需要处理映射关系的属性的属性名</span></span><br><span class="line"><span class="comment">            select：设置分步查询的 sql 的唯一标识</span></span><br><span class="line"><span class="comment">            column：将查询出的某个字段作为分步查询的 sql 条件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;dept&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">select</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo&quot;</span></span></span><br><span class="line"><span class="tag">                     <span class="attr">column</span>=<span class="string">&quot;dept_id&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">fetchType</span>=<span class="string">&quot;lazy&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3特殊SQL的执行</title>
      <link href="/posts/C0FFEEB1.html"/>
      <url>/posts/C0FFEEB1.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-模糊查询"><a href="#1-模糊查询" class="headerlink" title="1. 模糊查询"></a>1. 模糊查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 通过用户名模糊查询用户信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> mohu</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   List&lt;User&gt; <span class="title function_">getUserByLike</span><span class="params">(<span class="meta">@Param(&quot;mohu&quot;)</span> String mohu)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserByLike(@Param(&quot;mohu&quot;) String mohu);--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--select * from t_user where username like &#x27;%$&#123;mohu&#125;%&#x27;--&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--select * from t_user where username like concat(&#x27;%&#x27;,#&#123;mohu&#125;,&#x27;%&#x27;)--&gt;</span></span><br><span class="line">       select * from t_user where username like &quot;%&quot;#&#123;mohu&#125;&quot;%&quot;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>​<strong>其中select * from t_user where username like “%”#{mohu}”%”是最常用的</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserByLike</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">SpecialSQLMapper</span> <span class="variable">specialSQLMapper</span> <span class="operator">=</span> sqlSession.getMapper(SpecialSQLMapper.class);</span><br><span class="line">        List&lt;User&gt; userByLike = specialSQLMapper.getUserByLike(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        userByLike.forEach(System.out::println);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-批量删除"><a href="#2-批量删除" class="headerlink" title="2. 批量删除"></a>2. 批量删除</h3><p>​<strong>只能使用${}，如果使用#{}，则解析后的sql语句为<code>delete from t_user where id in (&#39;8,9&#39;)</code>，这样是将<code>8,9</code>看做是一个整体，只有id为<code>8,9</code>的数据会被删除。正确的语句应该是<code>delete from t_user where id in (8,9)</code>，或者<code>delete from t_user where id in (&#39;8&#39;,&#39;9&#39;)</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 批量删除</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> ids</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteMore</span><span class="params">(<span class="meta">@Param(&quot;ids&quot;)</span> String ids)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int deleteMore(@Param(&quot;ids&quot;) String ids);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteMore&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里不能使用#&#123;ids&#125;--&gt;</span></span><br><span class="line">delete from t_user where id in ($&#123;ids&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteMore</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">SpecialSQLMapper</span> <span class="variable">specialSQLMapper</span> <span class="operator">=</span> sqlSession.getMapper(SpecialSQLMapper.class);</span><br><span class="line">       <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> specialSQLMapper.deleteMore(<span class="string">&quot;8,9&quot;</span>);</span><br><span class="line">       System.out.println(i);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-动态设置表名"><a href="#3-动态设置表名" class="headerlink" title="3. 动态设置表名"></a>3. 动态设置表名</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 动态设置表名，查询用户信息</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">(<span class="meta">@Param(&quot;tableName&quot;)</span> String tableName)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList(@Param(&quot;tableName&quot;) String tableName);--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--  这里不能使用 #&#123;tableName&#125;,因为会自动加上单引号--&gt;</span></span><br><span class="line">       select * from $&#123;tableName&#125;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserList</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">SpecialSQLMapper</span> <span class="variable">specialSQLMapper</span> <span class="operator">=</span> sqlSession.getMapper(SpecialSQLMapper.class);</span><br><span class="line">       List&lt;User&gt; userList = specialSQLMapper.getUserList(<span class="string">&quot;t_user&quot;</span>);</span><br><span class="line">       userList.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="4-添加功能获取自增的主键"><a href="#4-添加功能获取自增的主键" class="headerlink" title="4. 添加功能获取自增的主键"></a>4. 添加功能获取自增的主键</h3><p>​<strong>场景模拟：</strong></p><ul><li><p><strong>t_clazz ( clazz_id,clazz_name )</strong></p></li><li><p><strong>t_student ( student_id,student_name,clazz_id )</strong></p></li></ul><p>​<strong>1、添加班级信息</strong></p><p>​<strong>2、获取新添加的班级的id</strong></p><p>​<strong>3、为班级分配学生，即将某学的班级id修改为新添加的班级的id</strong></p><ul><li><strong><font style="color:red">在 mapper.xml 中设置两个属性</font></strong><ul><li><strong>useGeneratedKeys :表示当前添加功能使用自增的主键</strong></li><li><strong>keyProperty ：将添加的数据的自增主键为实体类类型的参数的属性赋值</strong></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加用户信息并获取自增的主键</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * useGeneratedKeys：设置使用自增的主键</span></span><br><span class="line"><span class="comment">    * keyProperty：因为增删改有统一的返回值是受影响的行数，因此只能将获取的自增的主键放在传输的参数user对象的某个属性中</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertUser(User user);--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  useGeneratedKeys:表示当前添加功能使用自增的主键  --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  keyProperty：将添加的数据的自增主键为实体类类型的参数的属性赋值  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        insert into t_user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;gender&#125;,#&#123;email&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsertUser</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">SpecialSQLMapper</span> <span class="variable">specialSQLMapper</span> <span class="operator">=</span> sqlSession.getMapper(SpecialSQLMapper.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>, <span class="number">33</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;123@qq.com&quot;</span>);</span><br><span class="line">        specialSQLMapper.insertUser(user);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3的各种查询功能</title>
      <link href="/posts/8F3A2C1B.html"/>
      <url>/posts/8F3A2C1B.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-查询一个实体类对象"><a href="#1-查询一个实体类对象" class="headerlink" title="1. 查询一个实体类对象"></a>1. 查询一个实体类对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据用户id查询用户信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">User <span class="title function_">getUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserById(@Param(&quot;id&quot;) int id);--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> selectMapper.getUserById(<span class="number">8</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-查询一个-list-集合"><a href="#2-查询一个-list-集合" class="headerlink" title="2. 查询一个 list 集合"></a>2. 查询一个 list 集合</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查询所有用户信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">List&lt;User&gt; <span class="title function_">getUserList</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = selectMapper.getUserList();</span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>当查询的数据为多条时，不能使用实体类作为返回值，否则会抛出异常 TooManyResultsException；</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserById(@Param(&quot;id&quot;) int id);--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">      select * from t_user </span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> selectMapper.getUserById(<span class="number">8</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406123112.png"></p><blockquote><p>但是若查询的数据只有一条，可以使用实体类或集合作为返回值</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">      select * from t_user where id = 8</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = selectMapper.getUserList();</span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong>运行结果如下：</strong></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/20230406123155.png"></p><h3 id="3-查询单个数据"><a href="#3-查询单个数据" class="headerlink" title="3. 查询单个数据"></a>3. 查询单个数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查询用户的总记录数</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">* 在MyBatis中，对于Java中常用的类型都设置了类型别名</span></span><br><span class="line"><span class="comment">* 例如： java.lang.Integer--&gt;int|integer</span></span><br><span class="line"><span class="comment">* 例如： int--&gt;_int|_integer</span></span><br><span class="line"><span class="comment">* 例如： Map--&gt;map,List--&gt;list</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int getCount();--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--这里resultType的值，可以是int、INT、Integer、integer、_int、_integer 不区分大小写--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCount&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">       select count(id) from t_user</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetCount</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> selectMapper.getCount();</span><br><span class="line">        System.out.println(result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>默认的类型别名</p></blockquote><table><thead><tr><th align="center"><strong><font style="color:red">Alias</font></strong></th><th align="center"><strong><font style="color:red">Mapped Type</font></strong></th></tr></thead><tbody><tr><td align="center"><strong>_byte</strong></td><td align="center"><strong>byte</strong></td></tr><tr><td align="center"><strong>_char (since 3.5.10)</strong></td><td align="center"><strong>char</strong></td></tr><tr><td align="center"><strong>_character (since 3.5.10)</strong></td><td align="center"><strong>char</strong></td></tr><tr><td align="center"><strong>_long</strong></td><td align="center"><strong>long</strong></td></tr><tr><td align="center"><strong>_short</strong></td><td align="center"><strong>short</strong></td></tr><tr><td align="center"><strong>_int</strong></td><td align="center"><strong>int</strong></td></tr><tr><td align="center"><strong>_integer</strong></td><td align="center"><strong>int</strong></td></tr><tr><td align="center"><strong>_double</strong></td><td align="center"><strong>double</strong></td></tr><tr><td align="center"><strong>_float</strong></td><td align="center"><strong>float</strong></td></tr><tr><td align="center"><strong>_boolean</strong></td><td align="center"><strong>boolean</strong></td></tr><tr><td align="center"><strong>string</strong></td><td align="center"><strong>String</strong></td></tr><tr><td align="center"><strong>byte</strong></td><td align="center"><strong>Byte</strong></td></tr><tr><td align="center"><strong>char (since 3.5.10)</strong></td><td align="center"><strong>Character</strong></td></tr><tr><td align="center"><strong>character (since 3.5.10)</strong></td><td align="center"><strong>Character</strong></td></tr><tr><td align="center"><strong>long</strong></td><td align="center"><strong>Long</strong></td></tr><tr><td align="center"><strong>short</strong></td><td align="center"><strong>Short</strong></td></tr><tr><td align="center"><strong>int</strong></td><td align="center"><strong>Integer</strong></td></tr><tr><td align="center"><strong>integer</strong></td><td align="center"><strong>Integer</strong></td></tr><tr><td align="center"><strong>double</strong></td><td align="center"><strong>Double</strong></td></tr><tr><td align="center"><strong>float</strong></td><td align="center"><strong>Float</strong></td></tr><tr><td align="center"><strong>boolean</strong></td><td align="center"><strong>Boolean</strong></td></tr><tr><td align="center"><strong>date</strong></td><td align="center"><strong>Date</strong></td></tr><tr><td align="center"><strong>decimal</strong></td><td align="center"><strong>BigDecimal</strong></td></tr><tr><td align="center"><strong>bigdecimal</strong></td><td align="center"><strong>BigDecimal</strong></td></tr><tr><td align="center"><strong>biginteger</strong></td><td align="center"><strong>BigInteger</strong></td></tr><tr><td align="center"><strong>object</strong></td><td align="center"><strong>Object</strong></td></tr><tr><td align="center"><strong>date[]</strong></td><td align="center"><strong>Date[]</strong></td></tr><tr><td align="center"><strong>decimal[]</strong></td><td align="center"><strong>BigDecimal[]</strong></td></tr><tr><td align="center"><strong>bigdecimal[]</strong></td><td align="center"><strong>BigDecimal[]</strong></td></tr><tr><td align="center"><strong>biginteger[]</strong></td><td align="center"><strong>BigInteger[]</strong></td></tr><tr><td align="center"><strong>object[]</strong></td><td align="center"><strong>Object[]</strong></td></tr><tr><td align="center"><strong>map</strong></td><td align="center"><strong>Map</strong></td></tr><tr><td align="center"><strong>hashmap</strong></td><td align="center"><strong>HashMap</strong></td></tr><tr><td align="center"><strong>list</strong></td><td align="center"><strong>List</strong></td></tr><tr><td align="center"><strong>arraylist</strong></td><td align="center"><strong>ArrayList</strong></td></tr><tr><td align="center"><strong>collection</strong></td><td align="center"><strong>Collection</strong></td></tr><tr><td align="center"><strong>iterator</strong></td><td align="center"><strong>Iterator</strong></td></tr></tbody></table><h3 id="4-查询一条数据为-map-集合"><a href="#4-查询一条数据为-map-集合" class="headerlink" title="4. 查询一条数据为 map 集合"></a>4. 查询一条数据为 map 集合</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 根据用户id查询用户信息为map集合</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">getUserByIdToMap</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="type">int</span> id)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Map&lt;String, Object&gt; getUserByIdToMap(@Param(&quot;id&quot;) int id);--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--结果： &#123;password=123456, sex=男 , id=1, age=23, username=admin&#125;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByIdToMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">select * from t_user where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserByIdToMap</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">    <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">    Map&lt;String,Object&gt; map = selectMapper.getUserByIdToMap(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//以字段名为键，以字段值为值</span></span><br><span class="line">    <span class="comment">//&#123;password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin&#125;</span></span><br><span class="line">    <span class="comment">// Map&lt;String,Object&gt; map = selectMapper.getUserByIdToMap(9);</span></span><br><span class="line">    <span class="comment">//&#123;password=123, id=9, username=admin&#125;</span></span><br><span class="line">    <span class="comment">// 只显示值不为null的键值对</span></span><br><span class="line">    System.out.println(map);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-查询多条数据为-map-集合"><a href="#5-查询多条数据为-map-集合" class="headerlink" title="5. 查询多条数据为 map 集合"></a>5. 查询多条数据为 map 集合</h3><h4 id="5-1-方式1"><a href="#5-1-方式1" class="headerlink" title="5.1 方式1"></a>5.1 方式1</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查询所有用户信息为map集合</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">* 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，此</span></span><br><span class="line"><span class="comment">时可以将这些map放在一个list集合中获取</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Map&lt;String, Object&gt; getAllUserToMap();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUserToMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetAllUserToMap</span><span class="params">()</span>&#123;</span><br><span class="line">      <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">      <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">      List&lt;Map&lt;String, Object&gt;&gt; userList = selectMapper.getAllUserToMap();</span><br><span class="line"></span><br><span class="line">      System.out.println(userList);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-方式2"><a href="#5-2-方式2" class="headerlink" title="5.2 方式2"></a>5.2 方式2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 查询所有用户信息为map集合</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">* 将表中的数据以map集合的方式查询，一条数据对应一个map；若有多条数据，就会产生多个map集合，并</span></span><br><span class="line"><span class="comment">且最终要以一个map的方式返回数据，此时需要通过<span class="doctag">@MapKey</span>注解设置map集合的键，值是每条数据所对应的</span></span><br><span class="line"><span class="comment">map集合</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@MapKey(&quot;id&quot;)</span></span><br><span class="line">Map&lt;String, Object&gt; <span class="title function_">getAllUserToMap</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Map&lt;String, Object&gt; getAllUserToMap();--&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        1=&#123;password=123456, gender=男, id=1, age=23, email=12345@qq.com, username=admin&#125;,</span></span><br><span class="line"><span class="comment">        8=&#123;password=123456, gender=女, id=8, age=33, email=123@qq.com, username=root&#125;,</span></span><br><span class="line"><span class="comment">        9=&#123;password=123, id=9, username=admin&#125;&#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUserToMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetAllUserToMap</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">SelectMapper</span> <span class="variable">selectMapper</span> <span class="operator">=</span> sqlSession.getMapper(SelectMapper.class);</span><br><span class="line">       Map&lt;String, Object&gt; map = selectMapper.getAllUserToMap();</span><br><span class="line"></span><br><span class="line">       System.out.println(map);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3获取参数值的两种方式</title>
      <link href="/posts/AB5CD6EF.html"/>
      <url>/posts/AB5CD6EF.html</url>
      
        <content type="html"><![CDATA[<p><img src="E:/Gradution_workspace/PlainBayesian_multi_TextClassification/20230405203039.png"></p><hr><ul><li><p><strong>MyBatis获取参数值的两种方式：<font style="color:red">${}和#{}</font></strong></p></li><li><p><strong>${}的本质就是<font style="color:red">字符串拼接</font>，#{}的本质就是<font style="color:red">占位符赋值</font></strong></p></li><li><p><strong>${}使用字符串拼接的方式拼接 sql，若为字符串类型或日期类型的字段进行赋值时，需要手动加单引号；但是 #{} 使用占位符赋值的方式拼接 sql，此时为字符串类型或日期类型的字段进行赋值时，可以自动添加单引号</strong></p></li><li><p><strong><font style="color:red">${}会造成 SQL 注入，#{}会避免 SQL 注入</font></strong></p></li></ul><h3 id="1-单个字面量类型的参数"><a href="#1-单个字面量类型的参数" class="headerlink" title="1. 单个字面量类型的参数"></a>1. 单个字面量类型的参数</h3><p>​<strong>若 mapper 接口中的方法参数为单个的字面量类型，此时可以使用 ${} 和 #{} <font style="color:red">以任意的名称（ 最好见名识意 ）获取参数的值</font>，注意 ${} 需要手动加单引号</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> username:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment"> * 根据用户名查询用户信息</span></span><br><span class="line"><span class="comment"> * TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">User <span class="title function_">getUserByUsername</span><span class="params">(String username)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    User getUserByUsername(String username);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByUsername&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        select  * from t_user where username = #&#123;username&#125;--&gt;</span></span><br><span class="line">        select * from t_user where username = &#x27;$&#123;username&#125;&#x27;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserByUsername</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.getUserByUsername(<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="2-多个字面量类型的参数"><a href="#2-多个字面量类型的参数" class="headerlink" title="2. 多个字面量类型的参数"></a>2. 多个字面量类型的参数</h3><ul><li><strong>若 mapper 接口中的方法参数为多个时，此时 MyBatis 会自动将这些参数放在一个 map 集合中</strong><ul><li><strong>以 arg0,arg1…为键，以参数为值；</strong></li><li><strong>以 param1,param2…为键，以参数为值；</strong></li></ul></li><li><strong>因此只需要通过 ${} 和 #{} 访问 map 集合的键就可以获取相对应的值，注意 ${} 需要手动加单引号</strong></li><li><strong>使用 arg 或者 param 都行，要注意的是，arg 是从 arg0 开始的，param 是从 param1 开始的</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> username:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment"> * 验证登录</span></span><br><span class="line"><span class="comment"> * TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">User <span class="title function_">checkLogin</span><span class="params">(String username,String  password)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    User checkLogin(String username,String  password);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;checkLogin&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        select * from t_user where username = #&#123;arg0&#125; and password = #&#123;arg1&#125;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        select * from t_user where username = #&#123;param1&#125; and password = #&#123;param2&#125;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        select * from t_user where username = &#x27;$&#123;arg0&#125;&#x27; and password = &#x27;$&#123;arg1&#125;&#x27;--&gt;</span></span><br><span class="line">        select * from t_user where username = &#x27;$&#123;param1&#125;&#x27; and password = &#x27;$&#123;param2&#125;&#x27;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCheckLogin</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span>  <span class="operator">=</span> userMapper.checkLogin(<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">       System.out.println(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3-map集合类型的参数"><a href="#3-map集合类型的参数" class="headerlink" title="3. map集合类型的参数"></a>3. map集合类型的参数</h3><p>​<strong>若 mapper 接口中的方法需要的参数为多个时，此时可以手动创建 map 集合，将这些数据放在 map 中只需要通过 ${} 和 #{} 访问 map 集合的键就可以获取相对应的值，注意 ${} 需要手动加单引号</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map:</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">     * TODO</span></span><br><span class="line"><span class="comment">     * 验证登录（以 map 集合作为参数）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    User <span class="title function_">checkLoginByMap</span><span class="params">(Map&lt;String,Object&gt; map)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    User checkLoginByMap(Map&lt;String,Object&gt; map);--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;checkLoginByMap&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--        select * from t_user where username = #&#123;username&#125; and password = #&#123;password&#125;--&gt;</span></span><br><span class="line">        select * from t_user where username = &#x27;$&#123;username&#125;&#x27; and password = &#x27;$&#123;password&#125;&#x27;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCheckLoginByMap</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        Map&lt;String,Object&gt; map  = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.checkLoginByMap(map);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4-实体类类型的参数"><a href="#4-实体类类型的参数" class="headerlink" title="4. 实体类类型的参数"></a>4. 实体类类型的参数</h3><p><strong>若 mapper 接口中的<font style ="color:red">方法参数为实体类对象</font>时，此时可以使用${}和#{}，通过访问实体类对象中的<font style ="color:red">属性名</font>获取属性值，注意${}需要手动加单引号</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> user:</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">    * TODO</span></span><br><span class="line"><span class="comment">    * 添加用户信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">insertUser</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    void insertUser(User user);--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        insert into t_user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;gender&#125;,#&#123;email&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsertUser</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="number">33</span>,<span class="string">&quot;女&quot;</span>,<span class="string">&quot;123@qq.com&quot;</span>);</span><br><span class="line">        userMapper.insertUser(user);</span><br><span class="line">        <span class="comment">// System.out.println(user);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-使用-Param标识参数"><a href="#5-使用-Param标识参数" class="headerlink" title="5. 使用@Param标识参数"></a>5. 使用@Param标识参数</h3><ul><li><strong>可以通过@Param 注解标识 mapper 接口中的方法参数，此时会将这些参数放在 map 集合中</strong><ul><li><strong>以 @Param注解的 value 属性值为键，以参数为值</strong></li><li><strong>以 param1,param2…为键，以参数为值</strong></li></ul></li><li><strong>只需要通过 ${} 和 #{} 访问 map 集合的键就可以获取相对应的值，注意 ${} 需要手动加单引号</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> username:</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> password:</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> User</span></span><br><span class="line"><span class="comment">    * TODO</span></span><br><span class="line"><span class="comment">    * 验证登录（使用<span class="doctag">@param</span>）</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   User <span class="title function_">checkLoginByParam</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username,<span class="meta">@Param(&quot;password&quot;)</span> String password)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User CheckLoginByParam(@Param(&quot;username&quot;) String username, @Param(&quot;password&quot;) String password);--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;CheckLoginByParam&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from t_user where username = #&#123;username&#125; and password = #&#123;password&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCheckLoginByParam</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">       <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.checkLoginByParam(<span class="string">&quot;root&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">       System.out.println(user);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h3><p><strong>建议分成两种情况进行处理</strong></p><ul><li><strong><font style="color:red">实体类类型的参数</font></strong></li><li><strong><font style="color:red">使用@Param标识参数</font></strong><ul><li><strong>单个字面量类型的参数</strong></li><li><strong>多个字面量类型的参数</strong></li><li><strong>map 集合类型的参数</strong></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3核心配置文件详解</title>
      <link href="/posts/7B2F9C8D.html"/>
      <url>/posts/7B2F9C8D.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h4 id="核心配置文件中的标签必须按照固定的顺序："><a href="#核心配置文件中的标签必须按照固定的顺序：" class="headerlink" title="核心配置文件中的标签必须按照固定的顺序："></a>核心配置文件中的标签必须按照固定的顺序：</h4><ul><li><p><strong>properties</strong></p></li><li><p><strong>settings</strong></p></li><li><p><strong>typeAliases</strong></p></li><li><p><strong>typeHandlers</strong></p></li><li><p><strong>objectFactory</strong></p></li><li><p><strong>objectWrapperFactory</strong></p></li><li><p><strong>reflectorFactory</strong></p></li><li><p><strong>plugins</strong></p></li><li><p><strong>environments</strong></p></li><li><p><strong>databaseIdProvider</strong></p></li><li><p><strong>mappers</strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        MyBatis核心配置文件中，标签的顺序：</span></span><br><span class="line"><span class="comment">        properties?,settings?,typeAliases?,typeHandlers?,</span></span><br><span class="line"><span class="comment">        objectFactory?,objectWrapperFactory?,reflectorFactory?,</span></span><br><span class="line"><span class="comment">        plugins?,environments?,databaseIdProvider?,mappers?</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入properties文件,此后就可以在当前文件中使用$&#123;key&#125;的方式访问value--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--typeAliases：设置类型别名，即为某个具体的类型设置一个别名</span></span><br><span class="line"><span class="comment">        在 MyBatis的范围中，就可以使用别名表示一个具体的类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        typeAlias：设置某个类型的别名</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">        type：设置需要设置别名的类型</span></span><br><span class="line"><span class="comment">        alias：设置某个类型的别名，若不设置alias，那么当前的类型拥有默认的别名，即类名且不区分大小写</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;typeAlias type=&quot;com.atguigu.mybatis.pojo.User&quot; alias=&quot;abc&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;typeAlias type=&quot;com.atguigu.mybatis.pojo.User&quot;&gt;&lt;/typeAlias&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.mybatis.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        environments：配置多个连接数据库的环境</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">            default：设置默认使用的环境的 id</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        environment：配置某个具体的环境</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">             id：表示连接数据库的环境的唯一标识，不能重复</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        transactionManager：设置事务管理方式</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">              type:设置事务管理的方式</span></span><br><span class="line"><span class="comment">              type=&quot;JDBC|MANAGED&quot;</span></span><br><span class="line"><span class="comment">              JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事</span></span><br><span class="line"><span class="comment">              务的提交或回滚需要手动处理</span></span><br><span class="line"><span class="comment">              MANAGED：被管理，例如Spring</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        dataSource：配置数据源</span></span><br><span class="line"><span class="comment">        属性：</span></span><br><span class="line"><span class="comment">              type：设置数据源的类型</span></span><br><span class="line"><span class="comment">              type=&quot;POOLED|UNPOOLED|JNDI&quot;</span></span><br><span class="line"><span class="comment">              POOLED：表示使用数据库连接池缓存数据库连接</span></span><br><span class="line"><span class="comment">              UNPOOLED：表示不使用数据库连接池</span></span><br><span class="line"><span class="comment">              JNDI：表示使用上下文中的数据源</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--         mysql8 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;property name=&quot;driver&quot; value=&quot;com.mysql.cj.jdbc.Driver&quot;/&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;property name=&quot;url&quot;value=&quot;jdbc:mysql://localhost:3306/ssmserverTimezone=UTC&quot;/&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--         mysql5 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的驱动--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的连接地址--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的用户名--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--设置连接数据库的密码--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--         mysql8 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;property name=&quot;driver&quot; value=&quot;com.mysql.cj.jdbc.Driver&quot;/&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;property name=&quot;url&quot;value=&quot;jdbc:mysql://localhost:3306/ssmserverTimezone=UTC&quot;/&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--         mysql5 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssm&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 引入 mybatis 的映射文件   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;mapper resource=&quot;mappers/UserMapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        以包的方式引入映射文件，但是必须满足两个条件：</span></span><br><span class="line"><span class="comment">        1、mapper 接口和映射文件所在的包必须一致</span></span><br><span class="line"><span class="comment">        2、mapper 接口的名字和映射文件的名字必须一致</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.atguigu.mybatis.mapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter04/20230406121116.png"></p>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3的增删改查</title>
      <link href="/posts/2590756335.html"/>
      <url>/posts/2590756335.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-工具类"><a href="#1-工具类" class="headerlink" title="1. 工具类"></a>1. 工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqlSessionUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取核心配置文件的输入流</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取 SqlSessionFactoryBuilder</span></span><br><span class="line">            <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">            <span class="comment">// 获取 SqlSessionFactory</span></span><br><span class="line">            <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(resourceAsStream);</span><br><span class="line">            <span class="comment">// 获取 SqlSession 对象</span></span><br><span class="line">             sqlSession = sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-新增"><a href="#2-新增" class="headerlink" title="2. 新增"></a>2. 新增</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">insert into t_user values(null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取核心配置文件输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactoryBuilder 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactory 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(resourceAsStream);</span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(不会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="comment">// SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">      <span class="comment">// 获取 UserMapper 的代理实现类对象</span></span><br><span class="line">      <span class="comment">//   UserMapper userMapper = SqlSessionUtil.getSqlSession().getMapper(UserMapper.class);</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           调用 mapper 接口中的方法,就可以根据 UserMapper 的全类名匹配元素文件，</span></span><br><span class="line"><span class="comment">           通过调用的方法名匹配映射文件中的 SQL 标签，</span></span><br><span class="line"><span class="comment">           并执行标签中的 SQL 语句，实现添加用户信息的功能</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insertUser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过 sql 语句的唯一标识找到 sql 并执行，唯一标识是 namespace.sqlId</span></span><br><span class="line">        <span class="comment">// int result = sqlSession.insert(&quot;com.atguigu.mybatis.mapper.UserMapper.insertUser&quot;);</span></span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line">        <span class="comment">// 提交事务</span></span><br><span class="line">        <span class="comment">// sqlSession.commit();</span></span><br><span class="line">        <span class="comment">// 关闭 SqlSession 对象</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-删除"><a href="#3-删除" class="headerlink" title="3. 删除"></a>3. 删除</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int deleteUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span>&gt;</span></span><br><span class="line">delete from t_user where id = 7</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteUser();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4-修改"><a href="#4-修改" class="headerlink" title="4. 修改"></a>4. 修改</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int updateUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span>&gt;</span></span><br><span class="line">update t_user set username=&#x27;ybc&#x27;,password=&#x27;123&#x27; where id = 6</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.updateUser();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-查询一个实体类对象"><a href="#5-查询一个实体类对象" class="headerlink" title="5. 查询一个实体类对象"></a>5. 查询一个实体类对象</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserById();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.pojo.User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user where id = 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.getUserById();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="6-查询-list-集合"><a href="#6-查询-list-集合" class="headerlink" title="6. 查询 list 集合"></a>6. 查询 list 集合</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.pojo.User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class="line">        <span class="comment">// for(User user : userList)&#123;</span></span><br><span class="line">        <span class="comment">//     System.out.println(&quot;结果：&quot; + user);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong><font style="color:red">注意：</font></strong></p><ul><li><p><strong>查询的标签 select 必须设置属性 resultType 或 resultMap，用于设置实体类和数据库表的映射关系</strong></p><ul><li><strong>resultType：自动映射，用于属性名和表中字段名一致的情况</strong></li><li><strong>resultMap：自定义映射，用于一对多或多对一或字段名和属性名不一致的情况</strong></li></ul></li><li><p><strong>当查询的数据为多条时，不能使用实体类作为返回值，只能使用集合，否则会抛出异常 TooManyResultsException ；但是若查询的数据只有一条，可以使用实体类或集合作为返回值</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建MyBatis3</title>
      <link href="/posts/daadc55c.html"/>
      <url>/posts/daadc55c.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-开发环境"><a href="#1-开发环境" class="headerlink" title="1. 开发环境"></a>1. 开发环境</h3><ul><li><p>​<strong>IDE：IntelliJ IDEA 2022.3 (Ultimate Edition)</strong></p></li><li><p>​<strong>构建工具：Apache Maven 3.8.6</strong>  </p></li><li><p>​<strong>MySQL 版本：MySQL 8.0.25</strong>  </p></li><li><p>​<strong>MyBatis 版本：MyBatis 3.5.11</strong></p></li></ul><h3 id="2-MySQL-不同版本的注意事项"><a href="#2-MySQL-不同版本的注意事项" class="headerlink" title="2. MySQL 不同版本的注意事项"></a>2. MySQL 不同版本的注意事项</h3><h4 id="2-1-驱动类-driver-class-name"><a href="#2-1-驱动类-driver-class-name" class="headerlink" title="2.1 驱动类 driver-class-name"></a>2.1 驱动类 driver-class-name</h4><blockquote><p><strong>MySQL 5版本使用 jdbc5 驱动，驱动类使用：<font style="color:red">com.mysql.jdbc.Driver</font></strong></p><p><strong>MySQL 8版本使用 jdbc8 驱动，驱动类使用：<font style="color:red">com.mysql.cj.jdbc.Driver</font></strong></p></blockquote><h4 id="2-2-连接地址-url"><a href="#2-2-连接地址-url" class="headerlink" title="2.2 连接地址 url"></a>2.2 连接地址 url</h4><blockquote><p><strong>MySQL 5版本的 url：<font style="color:red">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;ssm</font></strong></p><p><strong>MySQL 8版本的 url：<font style="color:red">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;ssm?serverTimezone&#x3D;UTC</font></strong></p><p><strong>否则运行测试用例报告如下错误：</strong></p><p><strong>java.sql.SQLException: The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents more</strong></p></blockquote><h3 id="3-创建-Maven-工程"><a href="#3-创建-Maven-工程" class="headerlink" title="3. 创建 Maven 工程"></a>3. 创建 Maven 工程</h3><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter02/image-20230410154743419.png" alt="image-20230410154743419"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter02/image-20230410154856297.png" alt="image-20230410154856297"></p><h4 id="3-1-打包方式：jar"><a href="#3-1-打包方式：jar" class="headerlink" title="3.1 打包方式：jar"></a>3.1 打包方式：jar</h4><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter02/image-20230410154623577.png" alt="image-20230410154623577"></p><h4 id="3-2-引入依赖"><a href="#3-2-引入依赖" class="headerlink" title="3.2 引入依赖"></a>3.2 引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">&lt;!-- Mybatis核心 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- MySQL8驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">&lt;!-- MySQL5驱动 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--   &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;groupId&gt;mysql&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;version&gt;5.1.38&lt;/version&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-3-表结构"><a href="#3-3-表结构" class="headerlink" title="3.3 表结构"></a>3.3 表结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `t_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_user`  (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `age` <span class="type">int</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `gender` <span class="type">varchar</span>(<span class="number">1</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_unicode_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter02/image-20230410155505608.png" alt="image-20230410155505608"></p><h3 id="4-创建-MyBatis-的核心配置文件"><a href="#4-创建-MyBatis-的核心配置文件" class="headerlink" title="4. 创建 MyBatis 的核心配置文件"></a>4. 创建 MyBatis 的核心配置文件</h3><ul><li><strong>习惯上命名为 <font style="color:red">mybatis-config.xml</font>，这个文件名仅仅只是建议，并非强制要求</strong></li><li><strong>将来整合 Spring 之后，这个配置文件可以省略，所以大家操作时可以直接复制、粘贴</strong></li><li><strong>核心配置文件主要用于配置连接数据库的环境以及 MyBatis 的全局配置信息</strong></li><li><strong>核心配置文件存放的位置是 src&#x2F;main&#x2F;resources 目录下</strong></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--设置连接数据库的环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- MySQL8驱动 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span>  </span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC&quot;</span>/&gt;</span> </span><br><span class="line">                <span class="comment">&lt;!-- MySQL5驱动 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/ssm&quot;/&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">&lt;!-- 引入 mybatis 的映射文件   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mappers/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-创建-mapper-接口"><a href="#5-创建-mapper-接口" class="headerlink" title="5. 创建 mapper 接口"></a>5. 创建 mapper 接口</h3><blockquote><p>MyBatis 中的 mapper 接口相当于以前的 dao。但是区别在于 mapper 仅仅是接口，我们不需要提供实现类。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加用户信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-创建-MyBatis-的映射文件"><a href="#6-创建-MyBatis-的映射文件" class="headerlink" title="6. 创建 MyBatis 的映射文件"></a>6. 创建 MyBatis 的映射文件</h3><p><strong>相关概念：<font style="color:red">ORM</font>（ <font style="color:red">O</font>bject <font style="color:red">R</font>elationship <font style="color:red">M</font>apping ）对象关系映射。</strong></p><ul><li><strong>对象：Java 的实体类对象</strong></li><li><strong>关系：关系型数据库</strong></li><li><strong>映射：二者之间的对应关系</strong></li></ul><table><thead><tr><th align="center"><strong>Java概念</strong></th><th align="center"><strong>数据库概念</strong></th></tr></thead><tbody><tr><td align="center"><strong>类</strong></td><td align="center"><strong>表</strong></td></tr><tr><td align="center"><strong>属性</strong></td><td align="center"><strong>字段&#x2F;列</strong></td></tr><tr><td align="center"><strong>对象</strong></td><td align="center"><strong>记录&#x2F;行</strong></td></tr></tbody></table><p>​<strong><font style="color:red">映射文件的命名规则：</font></strong></p><ul><li><p><strong>表所对应的实体类的类名 + Mapper.xml</strong></p></li><li><p><strong>例如：表 t_user，映射的实体类为 User，所对应的映射文件为 UserMapper.xml</strong></p></li><li><p><strong>因此一个映射文件对应一个实体类，对应一张表的操作</strong></p></li><li><p><strong>MyBatis 映射文件用于编写 SQL，访问以及操作表中的数据</strong></p></li><li><p><strong>MyBatis 映射文件存放的位置是 src&#x2F;main&#x2F;resources&#x2F;mappers 目录下</strong></p></li></ul><p><strong><font style="color:red">MyBatis 中可以面向接口操作数据，要保证两个一致：</font></strong></p><ul><li><p><strong>mapper 接口的全类名和映射文件的命名空间（ namespace ）保持一致</strong></p></li><li><p><strong>mapper 接口中方法的方法名和映射文件中编写 SQL 的标签的 id 属性保持一致</strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        mapper 接口和映射文件要保证两个一致；</span></span><br><span class="line"><span class="comment">        1、mapper 接口的全类名和映射文件的 namespace 一致</span></span><br><span class="line"><span class="comment">        2、mapper 接口中的方法的方法名要和映射文件中的 sql 的 id 保持一致</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   int insertUser();  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">        insert into t_user values(null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;,&#x27;12345@qq.com&#x27;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-通过-junit-测试功能"><a href="#7-通过-junit-测试功能" class="headerlink" title="7. 通过 junit 测试功能"></a>7. 通过 junit 测试功能</h3><ul><li><p><strong>SqlSession：代表 Java 程序和数据库之间的会话。（ HttpSession 是 Java 程序和浏览器之间的会话 ）</strong></p></li><li><p><strong>SqlSessionFactory：是“生产”SqlSession 的“工厂”。</strong></p></li><li><p><strong>工厂模式：如果创建某一个对象，使用的过程基本固定，那么我们就可以把创建这个对象的相关代码封装到一个“工厂类”中，以后都使用这个工厂类来“生产”我们需要的对象。</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取核心配置文件输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactoryBuilder 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactory 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(resourceAsStream);</span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(不会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="comment">// SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">      <span class="comment">// 获取 UserMapper 的代理实现类对象</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">// 调用 mapper 接口中的方法,就可以根据UserMapper的全类名匹配元素文件，通过调用的方法名匹配映射文件中的SQL标签，并执行标签中的SQL语句，实现添加用户信息的功能</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insertUser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过 sql 语句的唯一标识找到 sql 并执行，唯一标识是 namespace.sqlId</span></span><br><span class="line">        <span class="comment">// int result = sqlSession.insert(&quot;com.atguigu.mybatis.mapper.UserMapper.insertUser&quot;);</span></span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line">        <span class="comment">// 提交事务</span></span><br><span class="line">        <span class="comment">// sqlSession.commit();</span></span><br><span class="line">        <span class="comment">// 关闭 SqlSession 对象</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="8-加入-log4j-日志功能"><a href="#8-加入-log4j-日志功能" class="headerlink" title="8. 加入 log4j 日志功能"></a>8. 加入 log4j 日志功能</h3><h4 id="8-1-加入依赖"><a href="#8-1-加入依赖" class="headerlink" title="8.1 加入依赖"></a>8.1 加入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-2-加入-log4j-的配置文件"><a href="#8-2-加入-log4j-的配置文件" class="headerlink" title="8.2 加入 log4j 的配置文件"></a>8.2 加入 log4j 的配置文件</h4><blockquote><p>log4j 的配置文件名为 log4j.xml，存放的位置是 src&#x2F;main&#x2F;resources 目录下</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">log4j</span>:configuration <span class="keyword">SYSTEM</span> <span class="string">&quot;log4j.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log4j:configuration</span> <span class="attr">xmlns:log4j</span>=<span class="string">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Encoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125;%m (%F:%L) \n&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;java.sql&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.ibatis&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;info&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>日志的级别</strong></p><p><strong><font style="color:red">FATAL(致命) &gt; ERROR(错误) &gt; WARN(警告) &gt; INFO(信息) &gt; DEBUG(调试)</font></strong></p><p><strong>从左到右级别越来越低</strong></p><p><strong>从左到右打印的内容越来越详细</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis3简介</title>
      <link href="/posts/db7f4aca.html"/>
      <url>/posts/db7f4aca.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-MyBatis-历史"><a href="#1-MyBatis-历史" class="headerlink" title="1. MyBatis 历史"></a>1. MyBatis 历史</h3><p><strong>MyBatis 最初是 Apache 的一个开源项目 <font style="color:red">iBatis</font>，2010年6月这个项目由 Apache Software Foundation 迁移到了Google Code。随着开发团队转投 Google Code 旗下， iBatis3.x 正式更名为 MyBatis。代码于2013年11月迁移到 Github。</strong><br><strong>iBatis一词来源于“internet”和“abatis”的组合，是一个基于 Java 的持久层框架。 iBatis 提供的持久层框架包括 SQL Maps 和 Data Access Objects（DAO）。</strong></p><h3 id="2-MyBatis-特性"><a href="#2-MyBatis-特性" class="headerlink" title="2. MyBatis 特性"></a>2. MyBatis 特性</h3><ol><li><p><strong>MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架</strong></p></li><li><p><strong>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集</strong></p></li><li><p><strong>MyBatis 可以使用简单的 XML 或注解用于配置和原始映射，将接口和 Java 的 POJO（Plain Old Java Objects，普通的 Java 对象）映射成数据库中的记录</strong></p></li><li><p><strong>MyBatis 是一个半自动的 ORM（Object Relation Mapping）框架</strong></p></li></ol><h3 id="3-MyBatis-下载"><a href="#3-MyBatis-下载" class="headerlink" title="3. MyBatis 下载"></a>3. MyBatis 下载</h3><p><strong>MyBatis 下载地址：</strong><a href="https://github.com/mybatis/mybatis-3">https://github.com/mybatis/mybatis-3</a></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203732.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203837.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230410153448.png"></p><h3 id="4-和其他持久化层技术对比"><a href="#4-和其他持久化层技术对比" class="headerlink" title="4. 和其他持久化层技术对比"></a>4. 和其他持久化层技术对比</h3><ul><li><strong>JDBC</strong><ul><li><strong>SQL 夹杂在 Java 代码中耦合度高，导致硬编码内伤</strong></li><li><strong>维护不易且实际开发需求中 SQL 有变化，频繁修改的情况多见</strong></li><li><strong>代码冗长，开发效率低</strong></li></ul></li><li><strong>Hibernate 和 JPA</strong><ul><li><strong>操作简便，开发效率高</strong></li><li><strong>程序中的长难复杂 SQL 需要绕过框架</strong></li><li><strong>内部自动生产的 SQL，不容易做特殊优化</strong></li><li><strong>基于全映射的全自动框架，大量字段的 POJO 进行部分映射时比较困难</strong></li><li><strong>反射操作太多，导致数据库性能下降</strong></li></ul></li><li><strong>MyBatis</strong><ul><li><strong>轻量级，性能出色</strong></li><li><strong>SQL 和 Java 编码分开，功能边界清晰。Java 代码专注业务、SQL 语句专注数据</strong></li><li><strong>开发效率稍逊于 Hibernate，但是完全能够接受</strong></li></ul></li></ul><p>.</p>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里插入一条引用，用来测试</p></blockquote><ul><li>test</li><li>123</li></ul><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>

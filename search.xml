<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MyBatis的增删改查</title>
      <link href="/posts/2590756335.html"/>
      <url>/posts/2590756335.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-工具类"><a href="#1-工具类" class="headerlink" title="1. 工具类"></a>1. 工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SqlSessionUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取核心配置文件的输入流</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取 SqlSessionFactoryBuilder</span></span><br><span class="line">            <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">            <span class="comment">// 获取 SqlSessionFactory</span></span><br><span class="line">            <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(resourceAsStream);</span><br><span class="line">            <span class="comment">// 获取 SqlSession 对象</span></span><br><span class="line">             sqlSession = sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-新增"><a href="#2-新增" class="headerlink" title="2. 新增"></a>2. 新增</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int insertUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">insert into t_user values(null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取核心配置文件输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactoryBuilder 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactory 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(resourceAsStream);</span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(不会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="comment">// SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">      <span class="comment">// 获取 UserMapper 的代理实现类对象</span></span><br><span class="line">      <span class="comment">//   UserMapper userMapper = SqlSessionUtil.getSqlSession().getMapper(UserMapper.class);</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           调用 mapper 接口中的方法,就可以根据 UserMapper 的全类名匹配元素文件，</span></span><br><span class="line"><span class="comment">           通过调用的方法名匹配映射文件中的 SQL 标签，</span></span><br><span class="line"><span class="comment">           并执行标签中的 SQL 语句，实现添加用户信息的功能</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insertUser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过 sql 语句的唯一标识找到 sql 并执行，唯一标识是 namespace.sqlId</span></span><br><span class="line">        <span class="comment">// int result = sqlSession.insert(&quot;com.atguigu.mybatis.mapper.UserMapper.insertUser&quot;);</span></span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line">        <span class="comment">// 提交事务</span></span><br><span class="line">        <span class="comment">// sqlSession.commit();</span></span><br><span class="line">        <span class="comment">// 关闭 SqlSession 对象</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-删除"><a href="#3-删除" class="headerlink" title="3. 删除"></a>3. 删除</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int deleteUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span>&gt;</span></span><br><span class="line">delete from t_user where id = 7</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.deleteUser();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="4-修改"><a href="#4-修改" class="headerlink" title="4. 修改"></a>4. 修改</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--int updateUser();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span>&gt;</span></span><br><span class="line">update t_user set username=&#x27;ybc&#x27;,password=&#x27;123&#x27; where id = 6</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.updateUser();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-查询一个实体类对象"><a href="#5-查询一个实体类对象" class="headerlink" title="5. 查询一个实体类对象"></a>5. 查询一个实体类对象</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--User getUserById();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.pojo.User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user where id = 2</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserById</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.getUserById();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + user);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="6-查询-list-集合"><a href="#6-查询-list-集合" class="headerlink" title="6. 查询 list 集合"></a>6. 查询 list 集合</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--List&lt;User&gt; getUserList();--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.atguigu.mybatis.pojo.User&quot;</span>&gt;</span></span><br><span class="line">select * from t_user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetUserList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> SqlSessionUtil.getSqlSession();</span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class="line">        <span class="comment">// for(User user : userList)&#123;</span></span><br><span class="line">        <span class="comment">//     System.out.println(&quot;结果：&quot; + user);</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        userList.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>​<strong><font style="color:red">注意：</font></strong></p><ul><li><p><strong>查询的标签select必须设置属性resultType或resultMap，用于设置实体类和数据库表的映射关系</strong></p><ul><li><strong>resultType：自动映射，用于属性名和表中字段名一致的情况</strong></li><li><strong>resultMap：自定义映射，用于一对多或多对一或字段名和属性名不一致的情况</strong></li></ul></li><li><p><strong>当查询的数据为多条时，不能使用实体类作为返回值，只能使用集合，否则会抛出异常TooManyResultsException；但是若查询的数据只有一条，可以使用实体类或集合作为返回值</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建MyBatis</title>
      <link href="/posts/daadc55c.html"/>
      <url>/posts/daadc55c.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-开发环境"><a href="#1-开发环境" class="headerlink" title="1. 开发环境"></a>1. 开发环境</h3><ul><li><p>​<strong>IDE：IntelliJ IDEA 2022.3 (Ultimate Edition)</strong></p></li><li><p>​<strong>构建工具：Apache Maven 3.8.6</strong>  </p></li><li><p>​<strong>MySQL 版本：MySQL 8.0.25</strong>  </p></li><li><p>​<strong>MyBatis 版本：MyBatis 3.5.11</strong></p></li></ul><h3 id="2-MySQL-不同版本的注意事项"><a href="#2-MySQL-不同版本的注意事项" class="headerlink" title="2. MySQL 不同版本的注意事项"></a>2. MySQL 不同版本的注意事项</h3><h4 id="2-1-驱动类-driver-class-name"><a href="#2-1-驱动类-driver-class-name" class="headerlink" title="2.1 驱动类 driver-class-name"></a>2.1 驱动类 driver-class-name</h4><blockquote><p><strong>MySQL 5版本使用 jdbc5 驱动，驱动类使用：<font style="color:red">com.mysql.jdbc.Driver</font></strong></p><p><strong>MySQL 8版本使用 jdbc8 驱动，驱动类使用：<font style="color:red">com.mysql.cj.jdbc.Driver</font></strong></p></blockquote><h4 id="2-2-连接地址-url"><a href="#2-2-连接地址-url" class="headerlink" title="2.2 连接地址 url"></a>2.2 连接地址 url</h4><blockquote><p><strong>MySQL 5版本的 url：<font style="color:red">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;ssm</font></strong></p><p><strong>MySQL 8版本的 url：<font style="color:red">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;ssm?serverTimezone&#x3D;UTC</font></strong></p><p><strong>否则运行测试用例报告如下错误：</strong></p><p><strong>java.sql.SQLException: The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents more</strong></p></blockquote><h3 id="3-创建-Maven-工程"><a href="#3-创建-Maven-工程" class="headerlink" title="3. 创建 Maven 工程"></a>3. 创建 Maven 工程</h3><h4 id="3-1-打包方式：jar"><a href="#3-1-打包方式：jar" class="headerlink" title="3.1 打包方式：jar"></a>3.1 打包方式：jar</h4><h4 id="3-2-引入依赖"><a href="#3-2-引入依赖" class="headerlink" title="3.2 引入依赖"></a>3.2 引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">&lt;!-- Mybatis核心 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- junit测试 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- MySQL8驱动 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">&lt;!-- MySQL5驱动 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--   &lt;dependency&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;groupId&gt;mysql&lt;/groupId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;version&gt;5.1.38&lt;/version&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-创建-MyBatis-的核心配置文件"><a href="#4-创建-MyBatis-的核心配置文件" class="headerlink" title="4. 创建 MyBatis 的核心配置文件"></a>4. 创建 MyBatis 的核心配置文件</h3><ul><li>习惯上命名为 <font style="color:red">mybatis-config.xml</font>，这个文件名仅仅只是建议，并非强制要求</li><li>将来整合 Spring 之后，这个配置文件可以省略，所以大家操作时可以直接复制、粘贴</li><li>核心配置文件主要用于配置连接数据库的环境以及 MyBatis 的全局配置信息</li><li>核心配置文件存放的位置是 src&#x2F;main&#x2F;resources 目录下</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--设置连接数据库的环境--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- MySQL8驱动 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span>  </span><br><span class="line">               <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC&quot;</span>/&gt;</span> </span><br><span class="line">                <span class="comment">&lt;!-- MySQL5驱动 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost:3306/ssm&quot;/&gt;--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">&lt;!-- 引入 mybatis 的映射文件   --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mappers/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-创建-mapper-接口"><a href="#5-创建-mapper-接口" class="headerlink" title="5. 创建 mapper 接口"></a>5. 创建 mapper 接口</h3><blockquote><p>MyBatis 中的 mapper 接口相当于以前的 dao。但是区别在于 mapper 仅仅是接口，我们不需要提供实现类。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加用户信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insertUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-创建-MyBatis-的映射文件"><a href="#6-创建-MyBatis-的映射文件" class="headerlink" title="6. 创建 MyBatis 的映射文件"></a>6. 创建 MyBatis 的映射文件</h3><p><strong>相关概念：<font style="color:red">ORM</font>（ <font style="color:red">O</font>bject <font style="color:red">R</font>elationship <font style="color:red">M</font>apping ）对象关系映射。</strong></p><ul><li><strong>对象：Java 的实体类对象</strong></li><li><strong>关系：关系型数据库</strong></li><li><strong>映射：二者之间的对应关系</strong></li></ul><table><thead><tr><th align="center"><strong>Java概念</strong></th><th align="center"><strong>数据库概念</strong></th></tr></thead><tbody><tr><td align="center"><strong>类</strong></td><td align="center"><strong>表</strong></td></tr><tr><td align="center"><strong>属性</strong></td><td align="center"><strong>字段&#x2F;列</strong></td></tr><tr><td align="center"><strong>对象</strong></td><td align="center"><strong>记录&#x2F;行</strong></td></tr></tbody></table><p>​<strong><font style="color:red">映射文件的命名规则：</font></strong></p><ul><li><p><strong>表所对应的实体类的类名 + Mapper.xml</strong></p></li><li><p><strong>例如：表 t_user，映射的实体类为 User，所对应的映射文件为 UserMapper.xml</strong></p></li><li><p><strong>因此一个映射文件对应一个实体类，对应一张表的操作</strong></p></li><li><p><strong>MyBatis 映射文件用于编写 SQL，访问以及操作表中的数据</strong></p></li><li><p><strong>MyBatis 映射文件存放的位置是 src&#x2F;main&#x2F;resources&#x2F;mappers 目录下</strong></p></li></ul><p><strong><font style="color:red">MyBatis 中可以面向接口操作数据，要保证两个一致：</font></strong></p><ul><li><p><strong>mapper 接口的全类名和映射文件的命名空间（ namespace ）保持一致</strong></p></li><li><p><strong>mapper 接口中方法的方法名和映射文件中编写 SQL 的标签的 id 属性保持一致</strong></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.atguigu.mybatis.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        mapper 接口和映射文件要保证两个一致；</span></span><br><span class="line"><span class="comment">        1、mapper 接口的全类名和映射文件的 namespace 一致</span></span><br><span class="line"><span class="comment">        2、mapper 接口中的方法的方法名要和映射文件中的 sql 的 id 保持一致</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--   int insertUser();  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertUser&quot;</span>&gt;</span></span><br><span class="line">        insert into t_user values(null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;,&#x27;12345@qq.com&#x27;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-通过-junit-测试功能"><a href="#7-通过-junit-测试功能" class="headerlink" title="7. 通过 junit 测试功能"></a>7. 通过 junit 测试功能</h3><ul><li><p><strong>SqlSession：代表 Java 程序和数据库之间的会话。（ HttpSession 是 Java 程序和浏览器之间的会话 ）</strong></p></li><li><p><strong>SqlSessionFactory：是“生产”SqlSession 的“工厂”。</strong></p></li><li><p><strong>工厂模式：如果创建某一个对象，使用的过程基本固定，那么我们就可以把创建这个对象的相关代码封装到一个“工厂类”中，以后都使用这个工厂类来“生产”我们需要的对象。</strong></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsert</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取核心配置文件输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> Resources.getResourceAsStream(<span class="string">&quot;mybatis-config.xml&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactoryBuilder 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactoryBuilder</span> <span class="variable">sqlSessionFactoryBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>();</span><br><span class="line">        <span class="comment">// 获取 SqlSessionFactory 对象</span></span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> sqlSessionFactoryBuilder.build(resourceAsStream);</span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(不会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="comment">// SqlSession sqlSession = sqlSessionFactory.openSession();</span></span><br><span class="line">        <span class="comment">// 获取 Sql 的会话对象 SqlSession(会自动提交事务)，是 MyBatis 提供的操作数据库的对象</span></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession(<span class="literal">true</span>);</span><br><span class="line">      <span class="comment">// 获取 UserMapper 的代理实现类对象</span></span><br><span class="line">        <span class="type">UserMapper</span> <span class="variable">userMapper</span> <span class="operator">=</span> sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">// 调用 mapper 接口中的方法,就可以根据UserMapper的全类名匹配元素文件，通过调用的方法名匹配映射文件中的SQL标签，并执行标签中的SQL语句，实现添加用户信息的功能</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> userMapper.insertUser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过 sql 语句的唯一标识找到 sql 并执行，唯一标识是 namespace.sqlId</span></span><br><span class="line">        <span class="comment">// int result = sqlSession.insert(&quot;com.atguigu.mybatis.mapper.UserMapper.insertUser&quot;);</span></span><br><span class="line">        System.out.println(<span class="string">&quot;结果：&quot;</span> + result);</span><br><span class="line">        <span class="comment">// 提交事务</span></span><br><span class="line">        <span class="comment">// sqlSession.commit();</span></span><br><span class="line">        <span class="comment">// 关闭 SqlSession 对象</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="8-加入-log4j-日志功能"><a href="#8-加入-log4j-日志功能" class="headerlink" title="8. 加入 log4j 日志功能"></a>8. 加入 log4j 日志功能</h3><h4 id="8-1-加入依赖"><a href="#8-1-加入依赖" class="headerlink" title="8.1 加入依赖"></a>8.1 加入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- log4j日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-2-加入-log4j-的配置文件"><a href="#8-2-加入-log4j-的配置文件" class="headerlink" title="8.2 加入 log4j 的配置文件"></a>8.2 加入 log4j 的配置文件</h4><blockquote><p>log4j 的配置文件名为 log4j.xml，存放的位置是 src&#x2F;main&#x2F;resources 目录下</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">log4j</span>:configuration <span class="keyword">SYSTEM</span> <span class="string">&quot;log4j.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">log4j:configuration</span> <span class="attr">xmlns:log4j</span>=<span class="string">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;Encoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;ConversionPattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125;%m (%F:%L) \n&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;java.sql&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;org.apache.ibatis&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;info&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">level</span> <span class="attr">value</span>=<span class="string">&quot;debug&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">log4j:configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>日志的级别</strong></p><p><strong><font style="color:red">FATAL(致命) &gt; ERROR(错误) &gt; WARN(警告) &gt; INFO(信息) &gt; DEBUG(调试)</font></strong></p><p><strong>从左到右级别越来越低</strong></p><p><strong>从左到右打印的内容越来越详细</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis简介</title>
      <link href="/posts/db7f4aca.html"/>
      <url>/posts/db7f4aca.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203039.png"></p><hr><h3 id="1-MyBatis-历史"><a href="#1-MyBatis-历史" class="headerlink" title="1. MyBatis 历史"></a>1. MyBatis 历史</h3><p><strong>MyBatis 最初是 Apache 的一个开源项目 iBatis，2010年6月这个项目由 Apache Software Foundation 迁移到了Google Code。随着开发团队转投 Google Code 旗下， iBatis3.x 正式更名为 MyBatis。代码于2013年11月迁移到 Github。</strong><br><strong>iBatis一词来源于“internet”和“abatis”的组合，是一个基于 Java 的持久层框架。 iBatis 提供的持久层框架包括 SQL Maps 和 Data Access Objects（DAO）。</strong></p><h3 id="2-MyBatis-特性"><a href="#2-MyBatis-特性" class="headerlink" title="2. MyBatis 特性"></a>2. MyBatis 特性</h3><ol><li><p><strong>MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架。</strong></p></li><li><p><strong>MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。</strong></p></li><li><p><strong>MyBatis 可以使用简单的 XML 或注解用于配置和原始映射，将接口和 Java 的 POJO（Plain Old Java Objects，普通的 Java 对象）映射成数据库中的记录。</strong></p></li><li><p><strong>MyBatis 是一个半自动的 ORM（Object Relation Mapping）框架。</strong></p></li></ol><h3 id="3-MyBatis-下载"><a href="#3-MyBatis-下载" class="headerlink" title="3. MyBatis 下载"></a>3. MyBatis 下载</h3><p><strong>MyBatis 下载地址：</strong><a href="https://github.com/mybatis/mybatis-3">https://github.com/mybatis/mybatis-3</a></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203732.png"></p><p><img src="https://linchenxi123.oss-cn-fuzhou.aliyuncs.com/MyBatis3/chapter01/20230405203837.png"></p><h3 id="4-和其他持久化层技术对比"><a href="#4-和其他持久化层技术对比" class="headerlink" title="4. 和其他持久化层技术对比"></a>4. 和其他持久化层技术对比</h3><ul><li><strong>JDBC</strong><ul><li><strong>SQL 夹杂在 Java 代码中耦合度高，导致硬编码内伤</strong></li><li><strong>维护不易且实际开发需求中 SQL 有变化，频繁修改的情况多见</strong></li><li><strong>代码冗长，开发效率低</strong></li></ul></li><li><strong>Hibernate 和 JPA</strong><ul><li><strong>操作简便，开发效率高</strong></li><li><strong>程序中的长难复杂 SQL 需要绕过框架</strong></li><li><strong>内部自动生产的 SQL，不容易做特殊优化</strong></li><li><strong>基于全映射的全自动框架，大量字段的 POJO 进行部分映射时比较困难。</strong></li><li><strong>反射操作太多，导致数据库性能下降</strong></li></ul></li><li><strong>MyBatis</strong><ul><li><strong>轻量级，性能出色</strong></li><li><strong>SQL 和 Java 编码分开，功能边界清晰。Java 代码专注业务、SQL 语句专注数据</strong></li><li><strong>开发效率稍逊于 HIbernate，但是完全能够接受</strong></li></ul></li></ul><p>.</p>]]></content>
      
      
      <categories>
          
          <category> MyBatis3教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MyBatis </tag>
            
            <tag> 持久层框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里插入一条引用，用来测试</p></blockquote><ul><li>test</li><li>123</li></ul><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
